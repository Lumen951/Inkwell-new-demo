import { IAnchor } from '../../../../base/browser/ui/contextview/contextview';
import { Disposable } from '../../../../base/common/lifecycle';
import { ICodeEditor } from '../../../browser/editorBrowser';
import { IPosition } from '../../../common/core/position';
import { IEditorContribution } from '../../../common/editorCommon';
import { ILanguageFeaturesService } from '../../../common/services/languageFeatures';
import { IActionWidgetService } from '../../../../platform/actionWidget/browser/actionWidget';
import { ICommandService } from '../../../../platform/commands/common/commands';
import { IConfigurationService } from '../../../../platform/configuration/common/configuration';
import { IContextKeyService } from '../../../../platform/contextkey/common/contextkey';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';
import { IMarkerService } from '../../../../platform/markers/common/markers';
import { IEditorProgressService } from '../../../../platform/progress/common/progress';
import { CodeActionAutoApply, CodeActionFilter, CodeActionSet, CodeActionTrigger, CodeActionTriggerSource } from '../common/types';
interface IActionShowOptions {
    readonly includeDisabledActions?: boolean;
    readonly fromLightbulb?: boolean;
}
export declare class CodeActionController extends Disposable implements IEditorContribution {
    private readonly _commandService;
    private readonly _configurationService;
    private readonly _actionWidgetService;
    private readonly _instantiationService;
    static readonly ID = "editor.contrib.codeActionController";
    static get(editor: ICodeEditor): CodeActionController | null;
    private readonly _editor;
    private readonly _model;
    private readonly _lightBulbWidget;
    private readonly _activeCodeActions;
    private _showDisabled;
    private readonly _resolver;
    private _disposed;
    constructor(editor: ICodeEditor, markerService: IMarkerService, contextKeyService: IContextKeyService, instantiationService: IInstantiationService, languageFeaturesService: ILanguageFeaturesService, progressService: IEditorProgressService, _commandService: ICommandService, _configurationService: IConfigurationService, _actionWidgetService: IActionWidgetService, _instantiationService: IInstantiationService);
    dispose(): void;
    private showCodeActionsFromLightbulb;
    showCodeActions(_trigger: CodeActionTrigger, actions: CodeActionSet, at: IAnchor | IPosition): Promise<void>;
    hideCodeActions(): void;
    manualTriggerAtCurrentPosition(notAvailableMessage: string, triggerAction: CodeActionTriggerSource, filter?: CodeActionFilter, autoApply?: CodeActionAutoApply): void;
    private _trigger;
    private _applyCodeAction;
    hideLightBulbWidget(): void;
    private update;
    private getInvalidActionThatWouldHaveBeenApplied;
    private tryGetValidActionToApply;
    private static readonly DECORATION;
    showCodeActionList(actions: CodeActionSet, at: IAnchor | IPosition, options: IActionShowOptions): Promise<void>;
    private toCoords;
    private _shouldShowHeaders;
    private _getActionBarActions;
}
export {};
