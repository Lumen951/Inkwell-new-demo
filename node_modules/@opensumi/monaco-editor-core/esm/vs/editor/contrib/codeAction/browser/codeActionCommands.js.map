{"version":3,"sources":["vs/editor/contrib/codeAction/browser/codeActionCommands.ts"],"names":[],"mappings":"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","file":"codeActionCommands.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from '../../../../base/common/jsonSchema';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, EditorCommand, ServicesAccessor } from '../../../browser/editorExtensions';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { autoFixCommandId, codeActionCommandId, fixAllCommandId, organizeImportsCommandId, quickFixCommandId, refactorCommandId, sourceActionCommandId } from './codeAction';\nimport * as nls from '../../../../nls';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\nimport { CodeActionAutoApply, CodeActionCommandArgs, CodeActionFilter, CodeActionKind, CodeActionTriggerSource } from '../common/types';\nimport { CodeActionController } from './codeActionController';\nimport { SUPPORTED_CODE_ACTIONS } from './codeActionModel';\n\nfunction contextKeyForSupportedActions(kind: CodeActionKind) {\n\treturn ContextKeyExpr.regex(\n\t\tSUPPORTED_CODE_ACTIONS.keys()[0],\n\t\tnew RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\n\nconst argsSchema: IJSONSchema = {\n\ttype: 'object',\n\tdefaultSnippets: [{ body: { kind: '' } }],\n\tproperties: {\n\t\t'kind': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\n\t\t},\n\t\t'apply': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n\t\t\tdefault: CodeActionAutoApply.IfSingle,\n\t\t\tenum: [CodeActionAutoApply.First, CodeActionAutoApply.IfSingle, CodeActionAutoApply.Never],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\n\t\t\t\tnls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\n\t\t\t\tnls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\n\t\t\t]\n\t\t},\n\t\t'preferred': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\n\t\t}\n\t}\n};\n\nfunction triggerCodeActionsForEditorSelection(\n\teditor: ICodeEditor,\n\tnotAvailableMessage: string,\n\tfilter: CodeActionFilter | undefined,\n\tautoApply: CodeActionAutoApply | undefined,\n\ttriggerAction: CodeActionTriggerSource = CodeActionTriggerSource.Default\n): void {\n\tif (editor.hasModel()) {\n\t\tconst controller = CodeActionController.get(editor);\n\t\tcontroller?.manualTriggerAtCurrentPosition(notAvailableMessage, triggerAction, filter, autoApply);\n\t}\n}\n\nexport class QuickFixAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: quickFixCommandId,\n\t\t\tlabel: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n\t\t\talias: 'Quick Fix...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined, CodeActionTriggerSource.QuickFix);\n\t}\n}\n\nexport class CodeActionCommand extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: codeActionCommandId,\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Trigger a code action',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema, }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any) {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Empty,\n\t\t\tapply: CodeActionAutoApply.IfSingle,\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\n\t\t\t\t\t: nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"),\n\t\t\t{\n\t\t\t\tinclude: args.kind,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply);\n\t}\n}\n\n\nexport class RefactorAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: refactorCommandId,\n\t\t\tlabel: nls.localize('refactor.label', \"Refactor...\"),\n\t\t\talias: 'Refactor...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyR\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Refactor)),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Refactor...',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Refactor,\n\t\t\tapply: CodeActionAutoApply.Never\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\n\t\t\t\t\t: nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\n\t\t\t\tonlyIncludePreferredActions: args.preferred\n\t\t\t},\n\t\t\targs.apply, CodeActionTriggerSource.Refactor);\n\t}\n}\n\nexport class SourceAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: sourceActionCommandId,\n\t\t\tlabel: nls.localize('source.label', \"Source Action...\"),\n\t\t\talias: 'Source Action...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 2.1,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.Source)),\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Source Action...',\n\t\t\t\targs: [{ name: 'args', schema: argsSchema }]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, userArgs: any): void {\n\t\tconst args = CodeActionCommandArgs.fromUser(userArgs, {\n\t\t\tkind: CodeActionKind.Source,\n\t\t\tapply: CodeActionAutoApply.Never\n\t\t});\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\ttypeof userArgs?.kind === 'string'\n\t\t\t\t? args.preferred\n\t\t\t\t\t? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\n\t\t\t\t\t: nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\n\t\t\t\t: args.preferred\n\t\t\t\t\t? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\n\t\t\t\t\t: nls.localize('editor.action.source.noneMessage', \"No source actions available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\n\t\t\t\tincludeSourceActions: true,\n\t\t\t\tonlyIncludePreferredActions: args.preferred,\n\t\t\t},\n\t\t\targs.apply, CodeActionTriggerSource.SourceAction);\n\t}\n}\n\nexport class OrganizeImportsAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: organizeImportsCommandId,\n\t\t\tlabel: nls.localize('organizeImports.label', \"Organize Imports\"),\n\t\t\talias: 'Organize Imports',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyO,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"),\n\t\t\t{ include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true },\n\t\t\tCodeActionAutoApply.IfSingle, CodeActionTriggerSource.OrganizeImports);\n\t}\n}\n\nexport class FixAllAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: fixAllCommandId,\n\t\t\tlabel: nls.localize('fixAll.label', \"Fix All\"),\n\t\t\talias: 'Fix All',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('fixAll.noneMessage', \"No fix all action available\"),\n\t\t\t{ include: CodeActionKind.SourceFixAll, includeSourceActions: true },\n\t\t\tCodeActionAutoApply.IfSingle, CodeActionTriggerSource.FixAll);\n\t}\n}\n\nexport class AutoFixAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: autoFixCommandId,\n\t\t\tlabel: nls.localize('autoFix.label', \"Auto Fix...\"),\n\t\t\talias: 'Auto Fix...',\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tcontextKeyForSupportedActions(CodeActionKind.QuickFix)),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.Period,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Period\n\t\t\t\t},\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn triggerCodeActionsForEditorSelection(editor,\n\t\t\tnls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"),\n\t\t\t{\n\t\t\t\tinclude: CodeActionKind.QuickFix,\n\t\t\t\tonlyIncludePreferredActions: true\n\t\t\t},\n\t\t\tCodeActionAutoApply.IfSingle, CodeActionTriggerSource.AutoFix);\n\t}\n}\n"]}