{"version":3,"sources":["vs/editor/contrib/inlineCompletions/browser/commands.ts"],"names":[],"mappings":"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","file":"commands.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport { transaction } from '../../../../base/common/observable';\nimport { asyncTransaction } from '../../../../base/common/observableInternal/base';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, ServicesAccessor } from '../../../browser/editorExtensions';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys';\nimport { InlineCompletionsController } from './inlineCompletionsController';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest';\nimport * as nls from '../../../../nls';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\n\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showNextInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowNextInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n\t\t\talias: 'Show Next Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.next();\n\t}\n}\n\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showPreviousInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowPreviousInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n\t\t\talias: 'Show Previous Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.previous();\n\t}\n}\n\nexport class TriggerInlineSuggestionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.trigger',\n\t\t\tlabel: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n\t\t\talias: 'Trigger Inline Suggestion',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait asyncTransaction(async tx => {\n\t\t\t/** @description triggerExplicitly from command */\n\t\t\tawait controller?.model.get()?.triggerExplicitly(tx);\n\t\t\tcontroller?.playAccessibilitySignal(tx);\n\t\t});\n\t}\n}\n\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.acceptNextWord',\n\t\t\tlabel: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n\t\t\talias: 'Accept Next Word Of Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('acceptWord', 'Accept Word'),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextWord(controller.editor);\n\t}\n}\n\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.acceptNextLine',\n\t\t\tlabel: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n\t\t\talias: 'Accept Next Line Of Inline Suggestion',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('acceptLine', 'Accept Line'),\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextLine(controller.editor);\n\t}\n}\n\nexport class AcceptInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineSuggestCommitId,\n\t\t\tlabel: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n\t\t\talias: 'Accept Inline Suggestion',\n\t\t\tprecondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('accept', \"Accept\"),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\tweight: 200,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t\t\tEditorContextKeys.tabMovesFocus.toNegated(),\n\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize,\n\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t),\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.model.get()?.accept(controller.editor);\n\t\t\tcontroller.editor.focus();\n\t\t}\n\t}\n}\n\nexport class HideInlineCompletion extends EditorAction {\n\tpublic static ID = 'editor.action.inlineSuggest.hide';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideInlineCompletion.ID,\n\t\t\tlabel: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n\t\t\talias: 'Hide Inline Suggestion',\n\t\t\tprecondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor | undefined, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\ttransaction(tx => {\n\t\t\tcontroller?.model.get()?.stop(tx);\n\t\t});\n\t}\n}\n\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n\tpublic static ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n\t\t\ttitle: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n\t\t\tf1: false,\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.InlineSuggestionToolbar,\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 10,\n\t\t\t}],\n\t\t\ttoggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst currentValue = configService.getValue<'always' | 'onHover'>('editor.inlineSuggest.showToolbar');\n\t\tconst newValue = currentValue === 'always' ? 'onHover' : 'always';\n\t\tconfigService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n\t}\n}\n"]}