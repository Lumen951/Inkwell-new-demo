{"version":3,"sources":["vs/editor/contrib/inlineCompletions/browser/hoverParticipant.ts"],"names":[],"mappings":"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","file":"hoverParticipant.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom';\nimport { MarkdownString } from '../../../../base/common/htmlContent';\nimport { DisposableStore, IDisposable } from '../../../../base/common/lifecycle';\nimport { autorun, constObservable } from '../../../../base/common/observable';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../browser/editorBrowser';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { Range } from '../../../common/core/range';\nimport { ILanguageService } from '../../../common/languages/language';\nimport { IModelDecoration } from '../../../common/model';\nimport { HoverAnchor, HoverAnchorType, HoverForeignElementAnchor, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart } from '../../hover/browser/hoverTypes';\nimport { InlineCompletionsController } from './inlineCompletionsController';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer';\nimport * as nls from '../../../../nls';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { IOpenerService } from '../../../../platform/opener/common/opener';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry';\n\nexport class InlineCompletionsHover implements IHoverPart {\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<InlineCompletionsHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly controller: InlineCompletionsController\n\t) { }\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range\n\t\t\t&& this.range.startColumn <= anchor.range.startColumn\n\t\t\t&& this.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n}\n\nexport class InlineCompletionsHoverParticipant implements IEditorHoverParticipant<InlineCompletionsHover> {\n\n\tpublic readonly hoverOrdinal: number = 4;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t}\n\n\tsuggestHoverAnchor(mouseEvent: IEditorMouseEvent): HoverAnchor | null {\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (!controller) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\t\tif (target.type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\t// handle the case where the mouse is over the view zone\n\t\t\tconst viewZoneData = target.detail;\n\t\t\tif (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel()!.validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\t// handle the case where the mouse is over the empty portion of a line following ghost text\n\t\t\tif (controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t// handle the case where the mouse is directly over ghost text\n\t\t\tconst mightBeForeignElement = target.detail.mightBeForeignElement;\n\t\t\tif (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomputeSync(anchor: HoverAnchor, lineDecorations: IModelDecoration[]): InlineCompletionsHover[] {\n\t\tif (this._editor.getOption(EditorOption.inlineSuggest).showToolbar !== 'onHover') {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (controller && controller.shouldShowHoverAt(anchor.range)) {\n\t\t\treturn [new InlineCompletionsHover(this, anchor.range, controller)];\n\t\t}\n\t\treturn [];\n\t}\n\n\trenderHoverParts(context: IEditorHoverRenderContext, hoverParts: InlineCompletionsHover[]): IDisposable {\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst part = hoverParts[0];\n\n\t\tthis._telemetryService.publicLog2<{}, {\n\t\t\towner: 'hediet';\n\t\t\tcomment: 'This event tracks whenever an inline completion hover is shown.';\n\t\t}>('inlineCompletionHover.shown');\n\n\t\tif (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(EditorOption.screenReaderAnnounceInlineSuggestion)) {\n\t\t\tthis.renderScreenReaderText(context, part, disposableStore);\n\t\t}\n\n\t\tconst model = part.controller.model.get()!;\n\n\t\tconst w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false,\n\t\t\tconstObservable(null),\n\t\t\tmodel.selectedInlineCompletionIndex,\n\t\t\tmodel.inlineCompletionsCount,\n\t\t\tmodel.selectedInlineCompletion.map(v => /** @description commands */ v?.inlineCompletion.source.inlineCompletions.commands ?? []),\n\t\t);\n\t\tcontext.fragment.appendChild(w.getDomNode());\n\n\t\tmodel.triggerExplicitly();\n\n\t\tdisposableStore.add(w);\n\n\t\treturn disposableStore;\n\t}\n\n\tprivate renderScreenReaderText(context: IEditorHoverRenderContext, part: InlineCompletionsHover, disposableStore: DisposableStore) {\n\t\tconst $ = dom.$;\n\t\tconst markdownHoverElement = $('div.hover-row.markdown-hover');\n\t\tconst hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n\t\tconst renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n\t\tconst render = (code: string) => {\n\t\t\tdisposableStore.add(renderer.onDidRenderAsync(() => {\n\t\t\t\thoverContentsElement.className = 'hover-contents code-hover-contents';\n\t\t\t\tcontext.onContentsChanged();\n\t\t\t}));\n\n\t\t\tconst inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n\t\t\tconst renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n\t\t\thoverContentsElement.replaceChildren(renderedContents.element);\n\t\t};\n\n\t\tdisposableStore.add(autorun(reader => {\n\t\t\t/** @description update hover */\n\t\t\tconst ghostText = part.controller.model.read(reader)?.primaryGhostText.read(reader);\n\t\t\tif (ghostText) {\n\t\t\t\tconst lineText = this._editor.getModel()!.getLineContent(ghostText.lineNumber);\n\t\t\t\trender(ghostText.renderForScreenReader(lineText));\n\t\t\t} else {\n\t\t\t\tdom.reset(hoverContentsElement);\n\t\t\t}\n\t\t}));\n\n\t\tcontext.fragment.appendChild(markdownHoverElement);\n\t}\n}\n"]}