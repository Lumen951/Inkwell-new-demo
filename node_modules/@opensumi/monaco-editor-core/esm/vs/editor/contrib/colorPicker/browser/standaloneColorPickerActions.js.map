{"version":3,"sources":["vs/editor/contrib/colorPicker/browser/standaloneColorPickerActions.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,wEAAwH;AAExH,yCAAsD;AAEtD,+EAAgF;AAChF,yEAAsE;AACtE,yEAAsF;AACtF,6BAA2B;AAE3B,MAAa,gCAAiC,SAAQ,gCAAa;IAClE;QACC,KAAK,CAAC;YACL,EAAE,EAAE,gDAAgD;YACpD,KAAK,EAAE;gBACN,GAAG,IAAA,eAAS,EAAC,qEAAkC,EAAE,uCAAuC,CAAC;gBACzF,aAAa,EAAE,IAAA,cAAQ,EAAC,EAAE,GAAG,EAAE,oCAAoC,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,yCAAyC,CAAC;aACrJ;YACD,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE;gBACL,EAAE,EAAE,EAAE,gBAAM,CAAC,cAAc,EAAE;aAC7B;SACD,CAAC,CAAC;IACJ,CAAC;IACD,gBAAgB,CAAC,SAA2B,EAAE,MAAmB;;QAChE,MAAA,6DAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,WAAW,EAAE,CAAC;IAC5D,CAAC;CACD;AAjBD,4EAiBC;AAED,MAAM,yBAA0B,SAAQ,+BAAY;IACnD;QACC,KAAK,CAAC;YACL,EAAE,EAAE,+BAA+B;YACnC,KAAK,EAAE,IAAA,cAAQ,EAAC;gBACf,GAAG,EAAE,iBAAiB;gBACtB,OAAO,EAAE;oBACR,oCAAoC;iBACpC;aACD,EAAE,uBAAuB,CAAC;YAC3B,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,qCAAiB,CAAC,4BAA4B,CAAC,SAAS,CAAC,IAAI,CAAC;YAC5E,MAAM,EAAE;gBACP,OAAO,wBAAgB;gBACvB,MAAM,0CAAgC;aACtC;SACD,CAAC,CAAC;IACJ,CAAC;IACM,GAAG,CAAC,SAA2B,EAAE,MAAmB;;QAC1D,MAAA,6DAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,IAAI,EAAE,CAAC;IACrD,CAAC;CACD;AAED,MAAM,oCAAqC,SAAQ,+BAAY;IAC9D;QACC,KAAK,CAAC;YACL,EAAE,EAAE,oDAAoD;YACxD,KAAK,EAAE,IAAA,cAAQ,EAAC;gBACf,GAAG,EAAE,sCAAsC;gBAC3C,OAAO,EAAE;oBACR,wDAAwD;iBACxD;aACD,EAAE,2CAA2C,CAAC;YAC/C,KAAK,EAAE,2CAA2C;YAClD,YAAY,EAAE,qCAAiB,CAAC,4BAA4B,CAAC,SAAS,CAAC,IAAI,CAAC;YAC5E,MAAM,EAAE;gBACP,OAAO,uBAAe;gBACtB,MAAM,0CAAgC;aACtC;SACD,CAAC,CAAC;IACJ,CAAC;IACM,GAAG,CAAC,SAA2B,EAAE,MAAmB;;QAC1D,MAAA,6DAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,WAAW,EAAE,CAAC;IAC5D,CAAC;CACD;AAED,IAAA,uCAAoB,EAAC,yBAAyB,CAAC,CAAC;AAChD,IAAA,uCAAoB,EAAC,oCAAoC,CAAC,CAAC;AAC3D,IAAA,yBAAe,EAAC,gCAAgC,CAAC,CAAC","file":"standaloneColorPickerActions.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, EditorAction2, ServicesAccessor, registerEditorAction } from '../../../browser/editorExtensions';\nimport { KeyCode } from '../../../../base/common/keyCodes';\nimport { localize, localize2 } from '../../../../nls';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\nimport { StandaloneColorPickerController } from './standaloneColorPickerWidget';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { MenuId, registerAction2 } from '../../../../platform/actions/common/actions';\nimport './colorPicker.css';\n\nexport class ShowOrFocusStandaloneColorPicker extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.showOrFocusStandaloneColorPicker',\n\t\t\ttitle: {\n\t\t\t\t...localize2('showOrFocusStandaloneColorPicker', \"Show or Focus Standalone Color Picker\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'mishowOrFocusStandaloneColorPicker', comment: ['&& denotes a mnemonic'] }, \"&&Show or Focus Standalone Color Picker\"),\n\t\t\t},\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.CommandPalette },\n\t\t\t]\n\t\t});\n\t}\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\tStandaloneColorPickerController.get(editor)?.showOrFocus();\n\t}\n}\n\nclass HideStandaloneColorPicker extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.hideColorPicker',\n\t\t\tlabel: localize({\n\t\t\t\tkey: 'hideColorPicker',\n\t\t\t\tcomment: [\n\t\t\t\t\t'Action that hides the color picker'\n\t\t\t\t]\n\t\t\t}, \"Hide the Color Picker\"),\n\t\t\talias: 'Hide the Color Picker',\n\t\t\tprecondition: EditorContextKeys.standaloneColorPickerVisible.isEqualTo(true),\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tStandaloneColorPickerController.get(editor)?.hide();\n\t}\n}\n\nclass InsertColorWithStandaloneColorPicker extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.insertColorWithStandaloneColorPicker',\n\t\t\tlabel: localize({\n\t\t\t\tkey: 'insertColorWithStandaloneColorPicker',\n\t\t\t\tcomment: [\n\t\t\t\t\t'Action that inserts color with standalone color picker'\n\t\t\t\t]\n\t\t\t}, \"Insert Color with Standalone Color Picker\"),\n\t\t\talias: 'Insert Color with Standalone Color Picker',\n\t\t\tprecondition: EditorContextKeys.standaloneColorPickerFocused.isEqualTo(true),\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tStandaloneColorPickerController.get(editor)?.insertColor();\n\t}\n}\n\nregisterEditorAction(HideStandaloneColorPicker);\nregisterEditorAction(InsertColorWithStandaloneColorPicker);\nregisterAction2(ShowOrFocusStandaloneColorPicker);\n"]}