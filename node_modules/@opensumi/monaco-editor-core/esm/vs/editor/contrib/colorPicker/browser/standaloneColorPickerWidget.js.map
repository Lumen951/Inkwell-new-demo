{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/contrib/colorPicker/browser/standaloneColorPickerWidget.ts","vs/editor/contrib/colorPicker/browser/standaloneColorPickerWidget.ts"],"names":[],"mappings":"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","file":"standaloneColorPickerWidget.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle';\nimport { IEditorHoverRenderContext } from '../../hover/browser/hoverTypes';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser';\nimport { PositionAffinity } from '../../../common/model';\nimport { Position } from '../../../common/core/position';\nimport { StandaloneColorPickerHover, StandaloneColorPickerParticipant } from './colorHoverParticipant';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { EditorHoverStatusBar } from '../../hover/browser/contentHover';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding';\nimport { ColorPickerWidget, InsertButton } from './colorPickerWidget';\nimport { Emitter } from '../../../../base/common/event';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { IColorInformation } from '../../../common/languages';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { IEditorContribution } from '../../../common/editorCommon';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey';\nimport { IRange } from '../../../common/core/range';\nimport { IModelService } from '../../../common/services/model';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry';\nimport { DefaultDocumentColorProvider } from './defaultDocumentColorProvider';\nimport * as dom from '../../../../base/browser/dom';\nimport './colorPicker.css';\n\nexport class StandaloneColorPickerController extends Disposable implements IEditorContribution {\n\n\tpublic static ID = 'editor.contrib.standaloneColorPickerController';\n\tprivate _standaloneColorPickerWidget: StandaloneColorPickerWidget | null = null;\n\tprivate _standaloneColorPickerVisible: IContextKey<boolean>;\n\tprivate _standaloneColorPickerFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService _contextKeyService: IContextKeyService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeatureService: ILanguageFeaturesService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._standaloneColorPickerVisible = EditorContextKeys.standaloneColorPickerVisible.bindTo(_contextKeyService);\n\t\tthis._standaloneColorPickerFocused = EditorContextKeys.standaloneColorPickerFocused.bindTo(_contextKeyService);\n\t}\n\n\tpublic showOrFocus() {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._standaloneColorPickerVisible.get()) {\n\t\t\tthis._standaloneColorPickerWidget = new StandaloneColorPickerWidget(this._editor, this._standaloneColorPickerVisible, this._standaloneColorPickerFocused, this._instantiationService, this._modelService, this._keybindingService, this._languageFeatureService, this._languageConfigurationService);\n\t\t} else if (!this._standaloneColorPickerFocused.get()) {\n\t\t\tthis._standaloneColorPickerWidget?.focus();\n\t\t}\n\t}\n\n\tpublic hide() {\n\t\tthis._standaloneColorPickerFocused.set(false);\n\t\tthis._standaloneColorPickerVisible.set(false);\n\t\tthis._standaloneColorPickerWidget?.hide();\n\t\tthis._editor.focus();\n\t}\n\n\tpublic insertColor() {\n\t\tthis._standaloneColorPickerWidget?.updateEditor();\n\t\tthis.hide();\n\t}\n\n\tpublic static get(editor: ICodeEditor) {\n\t\treturn editor.getContribution<StandaloneColorPickerController>(StandaloneColorPickerController.ID);\n\t}\n}\n\nregisterEditorContribution(StandaloneColorPickerController.ID, StandaloneColorPickerController, EditorContributionInstantiation.AfterFirstRender);\n\nconst PADDING = 8;\nconst CLOSE_BUTTON_WIDTH = 22;\n\nexport class StandaloneColorPickerWidget extends Disposable implements IContentWidget {\n\n\tstatic readonly ID = 'editor.contrib.standaloneColorPickerWidget';\n\treadonly allowEditorOverflow = true;\n\n\tprivate readonly _position: Position | undefined = undefined;\n\tprivate readonly _standaloneColorPickerParticipant: StandaloneColorPickerParticipant;\n\n\tprivate _body: HTMLElement = document.createElement('div');\n\tprivate _colorHover: StandaloneColorPickerHover | null = null;\n\tprivate _selectionSetInEditor: boolean = false;\n\n\tprivate readonly _onResult = this._register(new Emitter<StandaloneColorPickerResult>());\n\tpublic readonly onResult = this._onResult.event;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _standaloneColorPickerVisible: IContextKey<boolean>,\n\t\tprivate readonly _standaloneColorPickerFocused: IContextKey<boolean>,\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._standaloneColorPickerVisible.set(true);\n\t\tthis._standaloneColorPickerParticipant = _instantiationService.createInstance(StandaloneColorPickerParticipant, this._editor);\n\t\tthis._position = this._editor._getViewModel()?.getPrimaryCursorState().modelState.position;\n\t\tconst editorSelection = this._editor.getSelection();\n\t\tconst selection = editorSelection ?\n\t\t\t{\n\t\t\t\tstartLineNumber: editorSelection.startLineNumber,\n\t\t\t\tstartColumn: editorSelection.startColumn,\n\t\t\t\tendLineNumber: editorSelection.endLineNumber,\n\t\t\t\tendColumn: editorSelection.endColumn\n\t\t\t} : { startLineNumber: 0, endLineNumber: 0, endColumn: 0, startColumn: 0 };\n\t\tconst focusTracker = this._register(dom.trackFocus(this._body));\n\t\tthis._register(focusTracker.onDidBlur(_ => {\n\t\t\tthis.hide();\n\t\t}));\n\t\tthis._register(focusTracker.onDidFocus(_ => {\n\t\t\tthis.focus();\n\t\t}));\n\t\t// When the cursor position changes, hide the color picker\n\t\tthis._register(this._editor.onDidChangeCursorPosition(() => {\n\t\t\t// Do not hide the color picker when the cursor changes position due to the keybindings\n\t\t\tif (!this._selectionSetInEditor) {\n\t\t\t\tthis.hide();\n\t\t\t} else {\n\t\t\t\tthis._selectionSetInEditor = false;\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onMouseMove((e) => {\n\t\t\tconst classList = e.target.element?.classList;\n\t\t\tif (classList && classList.contains('colorpicker-color-decoration')) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.onResult((result) => {\n\t\t\tthis._render(result.value, result.foundInEditor);\n\t\t}));\n\t\tthis._start(selection);\n\t\tthis._body.style.zIndex = '50';\n\t\tthis._editor.addContentWidget(this);\n\t}\n\n\tpublic updateEditor() {\n\t\tif (this._colorHover) {\n\t\t\tthis._standaloneColorPickerParticipant.updateEditorModel(this._colorHover);\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn StandaloneColorPickerWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._body;\n\t}\n\n\tpublic getPosition(): IContentWidgetPosition | null {\n\t\tif (!this._position) {\n\t\t\treturn null;\n\t\t}\n\t\tconst positionPreference = this._editor.getOption(EditorOption.hover).above;\n\t\treturn {\n\t\t\tposition: this._position,\n\t\t\tsecondaryPosition: this._position,\n\t\t\tpreference: positionPreference ? [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW] : [ContentWidgetPositionPreference.BELOW, ContentWidgetPositionPreference.ABOVE],\n\t\t\tpositionAffinity: PositionAffinity.None\n\t\t};\n\t}\n\n\tpublic hide(): void {\n\t\tthis.dispose();\n\t\tthis._standaloneColorPickerVisible.set(false);\n\t\tthis._standaloneColorPickerFocused.set(false);\n\t\tthis._editor.removeContentWidget(this);\n\t\tthis._editor.focus();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._standaloneColorPickerFocused.set(true);\n\t\tthis._body.focus();\n\t}\n\n\tprivate async _start(selection: IRange) {\n\t\tconst computeAsyncResult = await this._computeAsync(selection);\n\t\tif (!computeAsyncResult) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onResult.fire(new StandaloneColorPickerResult(computeAsyncResult.result, computeAsyncResult.foundInEditor));\n\t}\n\n\tprivate async _computeAsync(range: IRange): Promise<{ result: StandaloneColorPickerHover; foundInEditor: boolean } | null> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst colorInfo: IColorInformation = {\n\t\t\trange: range,\n\t\t\tcolor: { red: 0, green: 0, blue: 0, alpha: 1 }\n\t\t};\n\t\tconst colorHoverResult: { colorHover: StandaloneColorPickerHover; foundInEditor: boolean } | null = await this._standaloneColorPickerParticipant.createColorHover(colorInfo, new DefaultDocumentColorProvider(this._modelService, this._languageConfigurationService), this._languageFeaturesService.colorProvider);\n\t\tif (!colorHoverResult) {\n\t\t\treturn null;\n\t\t}\n\t\treturn { result: colorHoverResult.colorHover, foundInEditor: colorHoverResult.foundInEditor };\n\t}\n\n\tprivate _render(colorHover: StandaloneColorPickerHover, foundInEditor: boolean) {\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst statusBar = this._register(new EditorHoverStatusBar(this._keybindingService));\n\t\tlet colorPickerWidget: ColorPickerWidget | undefined;\n\n\t\tconst context: IEditorHoverRenderContext = {\n\t\t\tfragment,\n\t\t\tstatusBar,\n\t\t\tsetColorPicker: (widget: ColorPickerWidget) => colorPickerWidget = widget,\n\t\t\tonContentsChanged: () => { },\n\t\t\thide: () => this.hide()\n\t\t};\n\n\t\tthis._colorHover = colorHover;\n\t\tthis._register(this._standaloneColorPickerParticipant.renderHoverParts(context, [colorHover]));\n\t\tif (colorPickerWidget === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._body.classList.add('standalone-colorpicker-body');\n\t\tthis._body.style.maxHeight = Math.max(this._editor.getLayoutInfo().height / 4, 250) + 'px';\n\t\tthis._body.style.maxWidth = Math.max(this._editor.getLayoutInfo().width * 0.66, 500) + 'px';\n\t\tthis._body.tabIndex = 0;\n\t\tthis._body.appendChild(fragment);\n\t\tcolorPickerWidget.layout();\n\n\t\tconst colorPickerBody = colorPickerWidget.body;\n\t\tconst saturationBoxWidth = colorPickerBody.saturationBox.domNode.clientWidth;\n\t\tconst widthOfOriginalColorBox = colorPickerBody.domNode.clientWidth - saturationBoxWidth - CLOSE_BUTTON_WIDTH - PADDING;\n\t\tconst enterButton: InsertButton | null = colorPickerWidget.body.enterButton;\n\t\tenterButton?.onClicked(() => {\n\t\t\tthis.updateEditor();\n\t\t\tthis.hide();\n\t\t});\n\t\tconst colorPickerHeader = colorPickerWidget.header;\n\t\tconst pickedColorNode = colorPickerHeader.pickedColorNode;\n\t\tpickedColorNode.style.width = saturationBoxWidth + PADDING + 'px';\n\t\tconst originalColorNode = colorPickerHeader.originalColorNode;\n\t\toriginalColorNode.style.width = widthOfOriginalColorBox + 'px';\n\t\tconst closeButton = colorPickerWidget.header.closeButton;\n\t\tcloseButton?.onClicked(() => {\n\t\t\tthis.hide();\n\t\t});\n\t\t// When found in the editor, highlight the selection in the editor\n\t\tif (foundInEditor) {\n\t\t\tif (enterButton) {\n\t\t\t\tenterButton.button.textContent = 'Replace';\n\t\t\t}\n\t\t\tthis._selectionSetInEditor = true;\n\t\t\tthis._editor.setSelection(colorHover.range);\n\t\t}\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n}\n\nclass StandaloneColorPickerResult {\n\t// The color picker result consists of: an array of color results and a boolean indicating if the color was found in the editor\n\tconstructor(\n\t\tpublic readonly value: StandaloneColorPickerHover,\n\t\tpublic readonly foundInEditor: boolean\n\t) { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle';\nimport { IEditorHoverRenderContext } from '../../hover/browser/hoverTypes';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser';\nimport { PositionAffinity } from '../../../common/model';\nimport { Position } from '../../../common/core/position';\nimport { StandaloneColorPickerHover, StandaloneColorPickerParticipant } from './colorHoverParticipant';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { EditorHoverStatusBar } from '../../hover/browser/contentHover';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding';\nimport { ColorPickerWidget, InsertButton } from './colorPickerWidget';\nimport { Emitter } from '../../../../base/common/event';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { IColorInformation } from '../../../common/languages';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { IEditorContribution } from '../../../common/editorCommon';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../browser/editorExtensions';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey';\nimport { IRange } from '../../../common/core/range';\nimport { IModelService } from '../../../common/services/model';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry';\nimport { DefaultDocumentColorProvider } from './defaultDocumentColorProvider';\nimport * as dom from '../../../../base/browser/dom';\nimport './colorPicker.css';\n\nexport class StandaloneColorPickerController extends Disposable implements IEditorContribution {\n\n\tpublic static ID = 'editor.contrib.standaloneColorPickerController';\n\tprivate _standaloneColorPickerWidget: StandaloneColorPickerWidget | null = null;\n\tprivate _standaloneColorPickerVisible: IContextKey<boolean>;\n\tprivate _standaloneColorPickerFocused: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService _contextKeyService: IContextKeyService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeatureService: ILanguageFeaturesService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._standaloneColorPickerVisible = EditorContextKeys.standaloneColorPickerVisible.bindTo(_contextKeyService);\n\t\tthis._standaloneColorPickerFocused = EditorContextKeys.standaloneColorPickerFocused.bindTo(_contextKeyService);\n\t}\n\n\tpublic showOrFocus() {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._standaloneColorPickerVisible.get()) {\n\t\t\tthis._standaloneColorPickerWidget = new StandaloneColorPickerWidget(this._editor, this._standaloneColorPickerVisible, this._standaloneColorPickerFocused, this._instantiationService, this._modelService, this._keybindingService, this._languageFeatureService, this._languageConfigurationService);\n\t\t} else if (!this._standaloneColorPickerFocused.get()) {\n\t\t\tthis._standaloneColorPickerWidget?.focus();\n\t\t}\n\t}\n\n\tpublic hide() {\n\t\tthis._standaloneColorPickerFocused.set(false);\n\t\tthis._standaloneColorPickerVisible.set(false);\n\t\tthis._standaloneColorPickerWidget?.hide();\n\t\tthis._editor.focus();\n\t}\n\n\tpublic insertColor() {\n\t\tthis._standaloneColorPickerWidget?.updateEditor();\n\t\tthis.hide();\n\t}\n\n\tpublic static get(editor: ICodeEditor) {\n\t\treturn editor.getContribution<StandaloneColorPickerController>(StandaloneColorPickerController.ID);\n\t}\n}\n\nregisterEditorContribution(StandaloneColorPickerController.ID, StandaloneColorPickerController, EditorContributionInstantiation.AfterFirstRender);\n\nconst PADDING = 8;\nconst CLOSE_BUTTON_WIDTH = 22;\n\nexport class StandaloneColorPickerWidget extends Disposable implements IContentWidget {\n\n\tstatic readonly ID = 'editor.contrib.standaloneColorPickerWidget';\n\treadonly allowEditorOverflow = true;\n\n\tprivate readonly _position: Position | undefined = undefined;\n\tprivate readonly _standaloneColorPickerParticipant: StandaloneColorPickerParticipant;\n\n\tprivate _body: HTMLElement = document.createElement('div');\n\tprivate _colorHover: StandaloneColorPickerHover | null = null;\n\tprivate _selectionSetInEditor: boolean = false;\n\n\tprivate readonly _onResult = this._register(new Emitter<StandaloneColorPickerResult>());\n\tpublic readonly onResult = this._onResult.event;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _standaloneColorPickerVisible: IContextKey<boolean>,\n\t\tprivate readonly _standaloneColorPickerFocused: IContextKey<boolean>,\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._standaloneColorPickerVisible.set(true);\n\t\tthis._standaloneColorPickerParticipant = _instantiationService.createInstance(StandaloneColorPickerParticipant, this._editor);\n\t\tthis._position = this._editor._getViewModel()?.getPrimaryCursorState().modelState.position;\n\t\tconst editorSelection = this._editor.getSelection();\n\t\tconst selection = editorSelection ?\n\t\t\t{\n\t\t\t\tstartLineNumber: editorSelection.startLineNumber,\n\t\t\t\tstartColumn: editorSelection.startColumn,\n\t\t\t\tendLineNumber: editorSelection.endLineNumber,\n\t\t\t\tendColumn: editorSelection.endColumn\n\t\t\t} : { startLineNumber: 0, endLineNumber: 0, endColumn: 0, startColumn: 0 };\n\t\tconst focusTracker = this._register(dom.trackFocus(this._body));\n\t\tthis._register(focusTracker.onDidBlur(_ => {\n\t\t\tthis.hide();\n\t\t}));\n\t\tthis._register(focusTracker.onDidFocus(_ => {\n\t\t\tthis.focus();\n\t\t}));\n\t\t// When the cursor position changes, hide the color picker\n\t\tthis._register(this._editor.onDidChangeCursorPosition(() => {\n\t\t\t// Do not hide the color picker when the cursor changes position due to the keybindings\n\t\t\tif (!this._selectionSetInEditor) {\n\t\t\t\tthis.hide();\n\t\t\t} else {\n\t\t\t\tthis._selectionSetInEditor = false;\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onMouseMove((e) => {\n\t\t\tconst classList = e.target.element?.classList;\n\t\t\tif (classList && classList.contains('colorpicker-color-decoration')) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.onResult((result) => {\n\t\t\tthis._render(result.value, result.foundInEditor);\n\t\t}));\n\t\tthis._start(selection);\n\t\tthis._body.style.zIndex = '50';\n\t\tthis._editor.addContentWidget(this);\n\t}\n\n\tpublic updateEditor() {\n\t\tif (this._colorHover) {\n\t\t\tthis._standaloneColorPickerParticipant.updateEditorModel(this._colorHover);\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn StandaloneColorPickerWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._body;\n\t}\n\n\tpublic getPosition(): IContentWidgetPosition | null {\n\t\tif (!this._position) {\n\t\t\treturn null;\n\t\t}\n\t\tconst positionPreference = this._editor.getOption(EditorOption.hover).above;\n\t\treturn {\n\t\t\tposition: this._position,\n\t\t\tsecondaryPosition: this._position,\n\t\t\tpreference: positionPreference ? [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW] : [ContentWidgetPositionPreference.BELOW, ContentWidgetPositionPreference.ABOVE],\n\t\t\tpositionAffinity: PositionAffinity.None\n\t\t};\n\t}\n\n\tpublic hide(): void {\n\t\tthis.dispose();\n\t\tthis._standaloneColorPickerVisible.set(false);\n\t\tthis._standaloneColorPickerFocused.set(false);\n\t\tthis._editor.removeContentWidget(this);\n\t\tthis._editor.focus();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._standaloneColorPickerFocused.set(true);\n\t\tthis._body.focus();\n\t}\n\n\tprivate async _start(selection: IRange) {\n\t\tconst computeAsyncResult = await this._computeAsync(selection);\n\t\tif (!computeAsyncResult) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onResult.fire(new StandaloneColorPickerResult(computeAsyncResult.result, computeAsyncResult.foundInEditor));\n\t}\n\n\tprivate async _computeAsync(range: IRange): Promise<{ result: StandaloneColorPickerHover; foundInEditor: boolean } | null> {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\t\tconst colorInfo: IColorInformation = {\n\t\t\trange: range,\n\t\t\tcolor: { red: 0, green: 0, blue: 0, alpha: 1 }\n\t\t};\n\t\tconst colorHoverResult: { colorHover: StandaloneColorPickerHover; foundInEditor: boolean } | null = await this._standaloneColorPickerParticipant.createColorHover(colorInfo, new DefaultDocumentColorProvider(this._modelService, this._languageConfigurationService), this._languageFeaturesService.colorProvider);\n\t\tif (!colorHoverResult) {\n\t\t\treturn null;\n\t\t}\n\t\treturn { result: colorHoverResult.colorHover, foundInEditor: colorHoverResult.foundInEditor };\n\t}\n\n\tprivate _render(colorHover: StandaloneColorPickerHover, foundInEditor: boolean) {\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst statusBar = this._register(new EditorHoverStatusBar(this._keybindingService));\n\t\tlet colorPickerWidget: ColorPickerWidget | undefined;\n\n\t\tconst context: IEditorHoverRenderContext = {\n\t\t\tfragment,\n\t\t\tstatusBar,\n\t\t\tsetColorPicker: (widget: ColorPickerWidget) => colorPickerWidget = widget,\n\t\t\tonContentsChanged: () => { },\n\t\t\thide: () => this.hide()\n\t\t};\n\n\t\tthis._colorHover = colorHover;\n\t\tthis._register(this._standaloneColorPickerParticipant.renderHoverParts(context, [colorHover]));\n\t\tif (colorPickerWidget === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._body.classList.add('standalone-colorpicker-body');\n\t\tthis._body.style.maxHeight = Math.max(this._editor.getLayoutInfo().height / 4, 250) + 'px';\n\t\tthis._body.style.maxWidth = Math.max(this._editor.getLayoutInfo().width * 0.66, 500) + 'px';\n\t\tthis._body.tabIndex = 0;\n\t\tthis._body.appendChild(fragment);\n\t\tcolorPickerWidget.layout();\n\n\t\tconst colorPickerBody = colorPickerWidget.body;\n\t\tconst saturationBoxWidth = colorPickerBody.saturationBox.domNode.clientWidth;\n\t\tconst widthOfOriginalColorBox = colorPickerBody.domNode.clientWidth - saturationBoxWidth - CLOSE_BUTTON_WIDTH - PADDING;\n\t\tconst enterButton: InsertButton | null = colorPickerWidget.body.enterButton;\n\t\tenterButton?.onClicked(() => {\n\t\t\tthis.updateEditor();\n\t\t\tthis.hide();\n\t\t});\n\t\tconst colorPickerHeader = colorPickerWidget.header;\n\t\tconst pickedColorNode = colorPickerHeader.pickedColorNode;\n\t\tpickedColorNode.style.width = saturationBoxWidth + PADDING + 'px';\n\t\tconst originalColorNode = colorPickerHeader.originalColorNode;\n\t\toriginalColorNode.style.width = widthOfOriginalColorBox + 'px';\n\t\tconst closeButton = colorPickerWidget.header.closeButton;\n\t\tcloseButton?.onClicked(() => {\n\t\t\tthis.hide();\n\t\t});\n\t\t// When found in the editor, highlight the selection in the editor\n\t\tif (foundInEditor) {\n\t\t\tif (enterButton) {\n\t\t\t\tenterButton.button.textContent = 'Replace';\n\t\t\t}\n\t\t\tthis._selectionSetInEditor = true;\n\t\t\tthis._editor.setSelection(colorHover.range);\n\t\t}\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n}\n\nclass StandaloneColorPickerResult {\n\t// The color picker result consists of: an array of color results and a boolean indicating if the color was found in the editor\n\tconstructor(\n\t\tpublic readonly value: StandaloneColorPickerHover,\n\t\tpublic readonly foundInEditor: boolean\n\t) { }\n}\n"]}