"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultDocumentColorProvider = void 0;
const color_1 = require("../../../../base/common/color");
const editorWorkerService_1 = require("../../../browser/services/editorWorkerService");
const model_1 = require("../../../common/services/model");
const languageConfigurationRegistry_1 = require("../../../common/languages/languageConfigurationRegistry");
const lifecycle_1 = require("../../../../base/common/lifecycle");
const languageFeatures_1 = require("../../../common/services/languageFeatures");
const editorFeatures_1 = require("../../../common/editorFeatures");
class DefaultDocumentColorProvider {
    constructor(modelService, languageConfigurationService) {
        this._editorWorkerClient = new editorWorkerService_1.EditorWorkerClient(modelService, false, 'editorWorkerService', languageConfigurationService);
    }
    async provideDocumentColors(model, _token) {
        return this._editorWorkerClient.computeDefaultDocumentColors(model.uri);
    }
    provideColorPresentations(_model, colorInfo, _token) {
        const range = colorInfo.range;
        const colorFromInfo = colorInfo.color;
        const alpha = colorFromInfo.alpha;
        const color = new color_1.Color(new color_1.RGBA(Math.round(255 * colorFromInfo.red), Math.round(255 * colorFromInfo.green), Math.round(255 * colorFromInfo.blue), alpha));
        const rgb = alpha ? color_1.Color.Format.CSS.formatRGB(color) : color_1.Color.Format.CSS.formatRGBA(color);
        const hsl = alpha ? color_1.Color.Format.CSS.formatHSL(color) : color_1.Color.Format.CSS.formatHSLA(color);
        const hex = alpha ? color_1.Color.Format.CSS.formatHex(color) : color_1.Color.Format.CSS.formatHexA(color);
        const colorPresentations = [];
        colorPresentations.push({ label: rgb, textEdit: { range: range, text: rgb } });
        colorPresentations.push({ label: hsl, textEdit: { range: range, text: hsl } });
        colorPresentations.push({ label: hex, textEdit: { range: range, text: hex } });
        return colorPresentations;
    }
}
exports.DefaultDocumentColorProvider = DefaultDocumentColorProvider;
let DefaultDocumentColorProviderFeature = class DefaultDocumentColorProviderFeature extends lifecycle_1.Disposable {
    constructor(_modelService, _languageConfigurationService, _languageFeaturesService) {
        super();
        this._register(_languageFeaturesService.colorProvider.register('*', new DefaultDocumentColorProvider(_modelService, _languageConfigurationService)));
    }
};
DefaultDocumentColorProviderFeature = __decorate([
    __param(0, model_1.IModelService),
    __param(1, languageConfigurationRegistry_1.ILanguageConfigurationService),
    __param(2, languageFeatures_1.ILanguageFeaturesService)
], DefaultDocumentColorProviderFeature);
(0, editorFeatures_1.registerEditorFeature)(DefaultDocumentColorProviderFeature);
//# sourceMappingURL=defaultDocumentColorProvider.js.map