{"version":3,"sources":["vs/editor/contrib/parameterHints/browser/parameterHints.ts"],"names":[],"mappings":"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","file":"parameterHints.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport { Lazy } from '../../../../base/common/lazy';\nimport { Disposable } from '../../../../base/common/lifecycle';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, EditorCommand, EditorContributionInstantiation, registerEditorAction, registerEditorCommand, registerEditorContribution, ServicesAccessor } from '../../../browser/editorExtensions';\nimport { IEditorContribution } from '../../../common/editorCommon';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport * as languages from '../../../common/languages';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { ParameterHintsModel, TriggerContext } from './parameterHintsModel';\nimport { Context } from './provideSignatureHelp';\nimport * as nls from '../../../../nls';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\nimport { ParameterHintsWidget } from './parameterHintsWidget';\n\nexport class ParameterHintsController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.controller.parameterHints';\n\n\tpublic static get(editor: ICodeEditor): ParameterHintsController | null {\n\t\treturn editor.getContribution<ParameterHintsController>(ParameterHintsController.ID);\n\t}\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate readonly model: ParameterHintsModel;\n\tprivate readonly widget: Lazy<ParameterHintsWidget>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis.editor = editor;\n\n\t\tthis.model = this._register(new ParameterHintsModel(editor, languageFeaturesService.signatureHelpProvider));\n\n\t\tthis._register(this.model.onChangedHints(newParameterHints => {\n\t\t\tif (newParameterHints) {\n\t\t\t\tthis.widget.value.show();\n\t\t\t\tthis.widget.value.render(newParameterHints);\n\t\t\t} else {\n\t\t\t\tthis.widget.rawValue?.hide();\n\t\t\t}\n\t\t}));\n\n\t\tthis.widget = new Lazy(() => this._register(instantiationService.createInstance(ParameterHintsWidget, this.editor, this.model)));\n\t}\n\n\tcancel(): void {\n\t\tthis.model.cancel();\n\t}\n\n\tprevious(): void {\n\t\tthis.widget.rawValue?.previous();\n\t}\n\n\tnext(): void {\n\t\tthis.widget.rawValue?.next();\n\t}\n\n\ttrigger(context: TriggerContext): void {\n\t\tthis.model.trigger(context, 0);\n\t}\n}\n\nexport class TriggerParameterHintsAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.triggerParameterHints',\n\t\t\tlabel: nls.localize('parameterHints.trigger.label', \"Trigger Parameter Hints\"),\n\t\t\talias: 'Trigger Parameter Hints',\n\t\t\tprecondition: EditorContextKeys.hasSignatureHelpProvider,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Space,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = ParameterHintsController.get(editor);\n\t\tcontroller?.trigger({\n\t\t\ttriggerKind: languages.SignatureHelpTriggerKind.Invoke\n\t\t});\n\t}\n}\n\nregisterEditorContribution(ParameterHintsController.ID, ParameterHintsController, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorAction(TriggerParameterHintsAction);\n\nconst weight = KeybindingWeight.EditorContrib + 75;\n\nconst ParameterHintsCommand = EditorCommand.bindToContribution<ParameterHintsController>(ParameterHintsController.get);\n\nregisterEditorCommand(new ParameterHintsCommand({\n\tid: 'closeParameterHints',\n\tprecondition: Context.Visible,\n\thandler: x => x.cancel(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new ParameterHintsCommand({\n\tid: 'showPrevParameterHint',\n\tprecondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\n\thandler: x => x.previous(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyCode.UpArrow,\n\t\tsecondary: [KeyMod.Alt | KeyCode.UpArrow],\n\t\tmac: { primary: KeyCode.UpArrow, secondary: [KeyMod.Alt | KeyCode.UpArrow, KeyMod.WinCtrl | KeyCode.KeyP] }\n\t}\n}));\n\nregisterEditorCommand(new ParameterHintsCommand({\n\tid: 'showNextParameterHint',\n\tprecondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\n\thandler: x => x.next(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.focus,\n\t\tprimary: KeyCode.DownArrow,\n\t\tsecondary: [KeyMod.Alt | KeyCode.DownArrow],\n\t\tmac: { primary: KeyCode.DownArrow, secondary: [KeyMod.Alt | KeyCode.DownArrow, KeyMod.WinCtrl | KeyCode.KeyN] }\n\t}\n}));\n"]}