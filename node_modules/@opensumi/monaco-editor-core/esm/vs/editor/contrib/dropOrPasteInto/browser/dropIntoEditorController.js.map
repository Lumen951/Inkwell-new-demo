{"version":3,"sources":["vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.ts"],"names":[],"mappings":"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","file":"dropIntoEditorController.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, raceCancellation } from '../../../../base/common/async';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer';\nimport { Disposable } from '../../../../base/common/lifecycle';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { IPosition } from '../../../common/core/position';\nimport { Range } from '../../../common/core/range';\nimport { IEditorContribution } from '../../../common/editorCommon';\nimport { DocumentOnDropEdit, DocumentOnDropEditProvider } from '../../../common/languages';\nimport { ITextModel } from '../../../common/model';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource } from '../../editorState/browser/editorState';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress';\nimport { localize } from '../../../../nls';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { sortEditsByYieldTo } from './edit';\nimport { PostEditWidgetManager } from './postEditWidget';\n\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\n\nexport const changeDropTypeCommandId = 'editor.changeDropType';\n\nexport const dropWidgetVisibleCtx = new RawContextKey<boolean>('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\n\nexport class DropIntoEditorController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.dropIntoEditorController';\n\n\tpublic static get(editor: ICodeEditor): DropIntoEditorController | null {\n\t\treturn editor.getContribution<DropIntoEditorController>(DropIntoEditorController.ID);\n\t}\n\n\tprivate _currentOperation?: CancelablePromise<void>;\n\n\tprivate readonly _dropProgressManager: InlineProgressManager;\n\tprivate readonly _postDropWidgetManager: PostEditWidgetManager;\n\n\tprivate readonly treeItemsTransfer = LocalSelectionTransfer.getInstance<DraggedTreeItemsIdentifier>();\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITreeViewsDnDService private readonly _treeViewsDragAndDropService: ITreeViewsDnDService\n\t) {\n\t\tsuper();\n\n\t\tthis._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n\t\tthis._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n\n\t\tthis._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n\t}\n\n\tpublic clearWidgets() {\n\t\tthis._postDropWidgetManager.clear();\n\t}\n\n\tpublic changeDropType() {\n\t\tthis._postDropWidgetManager.tryShowSelector();\n\t}\n\n\tprivate async onDropIntoEditor(editor: ICodeEditor, position: IPosition, dragEvent: DragEvent) {\n\t\tif (!dragEvent.dataTransfer || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentOperation?.cancel();\n\n\t\teditor.focus();\n\t\teditor.setPosition(position);\n\n\t\tconst p = createCancelablePromise(async (token) => {\n\t\t\tconst tokenSource = new EditorStateCancellationTokenSource(editor, CodeEditorStateFlag.Value, undefined, token);\n\n\t\t\ttry {\n\t\t\t\tconst ourDataTransfer = await this.extractDataTransferData(dragEvent);\n\t\t\t\tif (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst model = editor.getModel();\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst providers = this._languageFeaturesService.documentOnDropEditProvider\n\t\t\t\t\t.ordered(model)\n\t\t\t\t\t.filter(provider => {\n\t\t\t\t\t\tif (!provider.dropMimeTypes) {\n\t\t\t\t\t\t\t// Keep all providers that don't specify mime types\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n\t\t\t\t\t});\n\n\t\t\t\tconst edits = await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n\t\t\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (edits.length) {\n\t\t\t\t\tconst activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n\t\t\t\t\tconst canShowWidget = editor.getOption(EditorOption.dropIntoEditor).showDropSelector === 'afterDrop';\n\t\t\t\t\t// Pass in the parent token here as it tracks cancelling the entire drop operation\n\t\t\t\t\tawait this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: edits }, canShowWidget, token);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\ttokenSource.dispose();\n\t\t\t\tif (this._currentOperation === p) {\n\t\t\t\t\tthis._currentOperation = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n\t\tthis._currentOperation = p;\n\t}\n\n\tprivate async getDropEdits(providers: readonly DocumentOnDropEditProvider[], model: ITextModel, position: IPosition, dataTransfer: VSDataTransfer, tokenSource: EditorStateCancellationTokenSource) {\n\t\tconst results = await raceCancellation(Promise.all(providers.map(async provider => {\n\t\t\ttry {\n\t\t\t\tconst edit = await provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n\t\t\t\tif (edit) {\n\t\t\t\t\treturn { ...edit, providerId: provider.id };\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})), tokenSource.token);\n\n\t\tconst edits = coalesce(results ?? []);\n\t\treturn sortEditsByYieldTo(edits);\n\t}\n\n\tprivate getInitialActiveEditIndex(model: ITextModel, edits: ReadonlyArray<DocumentOnDropEdit & { readonly providerId?: string }>) {\n\t\tconst preferredProviders = this._configService.getValue<Record<string, string>>(defaultProviderConfig, { resource: model.uri });\n\t\tfor (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n\t\t\tconst editIndex = edits.findIndex(edit =>\n\t\t\t\tdesiredId === edit.providerId\n\t\t\t\t&& edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n\t\t\tif (editIndex >= 0) {\n\t\t\t\treturn editIndex;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate async extractDataTransferData(dragEvent: DragEvent): Promise<VSDataTransfer> {\n\t\tif (!dragEvent.dataTransfer) {\n\t\t\treturn new VSDataTransfer();\n\t\t}\n\n\t\tconst dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n\n\t\tif (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n\t\t\tconst data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tfor (const id of data) {\n\t\t\t\t\tconst treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n\t\t\t\t\tif (treeDataTransfer) {\n\t\t\t\t\t\tfor (const [type, value] of treeDataTransfer) {\n\t\t\t\t\t\t\tdataTransfer.replace(type, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dataTransfer;\n\t}\n}\n"]}