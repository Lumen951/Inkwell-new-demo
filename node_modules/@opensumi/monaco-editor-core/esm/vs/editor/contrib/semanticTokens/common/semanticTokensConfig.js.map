{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/contrib/semanticTokens/common/semanticTokensConfig.ts","vs/editor/contrib/semanticTokens/common/semanticTokensConfig.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAMnF,QAAA,gCAAgC,GAAG,6BAA6B,CAAC;AAM9E,SAAgB,yBAAyB,CAAC,KAAiB,EAAE,YAA2B,EAAE,oBAA2C;;IACpI,MAAM,OAAO,GAAG,MAAA,oBAAoB,CAAC,QAAQ,CAAqC,wCAAgC,EAAE,EAAE,kBAAkB,EAAE,KAAK,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,0CAAE,OAAO,CAAC;IACjM,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE,CAAC;QAClC,OAAO,OAAO,CAAC;IAChB,CAAC;IACD,OAAO,YAAY,CAAC,aAAa,EAAE,CAAC,oBAAoB,CAAC;AAC1D,CAAC;AAND,8DAMC","file":"semanticTokensConfig.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModel } from '../../../common/model';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { IThemeService } from '../../../../platform/theme/common/themeService';\n\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\n\nexport interface IEditorSemanticHighlightingOptions {\n\tenabled: true | false | 'configuredByTheme';\n}\n\nexport function isSemanticColoringEnabled(model: ITextModel, themeService: IThemeService, configurationService: IConfigurationService): boolean {\n\tconst setting = configurationService.getValue<IEditorSemanticHighlightingOptions>(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })?.enabled;\n\tif (typeof setting === 'boolean') {\n\t\treturn setting;\n\t}\n\treturn themeService.getColorTheme().semanticHighlighting;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModel } from '../../../common/model';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { IThemeService } from '../../../../platform/theme/common/themeService';\n\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\n\nexport interface IEditorSemanticHighlightingOptions {\n\tenabled: true | false | 'configuredByTheme';\n}\n\nexport function isSemanticColoringEnabled(model: ITextModel, themeService: IThemeService, configurationService: IConfigurationService): boolean {\n\tconst setting = configurationService.getValue<IEditorSemanticHighlightingOptions>(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })?.enabled;\n\tif (typeof setting === 'boolean') {\n\t\treturn setting;\n\t}\n\treturn themeService.getColorTheme().semanticHighlighting;\n}\n"]}