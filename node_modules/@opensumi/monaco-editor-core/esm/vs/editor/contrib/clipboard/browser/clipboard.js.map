{"version":3,"sources":["vs/editor/contrib/clipboard/browser/clipboard.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4DAA4D;AAC5D,sDAAiE;AAEjE,6DAA6D;AAC7D,6EAA0G;AAE1G,wEAA8G;AAC9G,mFAAiF;AAGjF,yEAAsE;AACtE,2FAAwF;AACxF,uCAAuC;AACvC,yEAAmF;AACnF,6FAA2F;AAC3F,kFAAmF;AAInF,MAAM,4BAA4B,GAAG,gBAAgB,CAAC;AAEtD,MAAM,WAAW,GAAG,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;AACjF,MAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC;AACnF,8EAA8E;AAC9E,gGAAgG;AAChG,2HAA2H;AAC3H,MAAM,aAAa,GAAG,CAAC,OAAO,SAAS,CAAC,SAAS,KAAK,WAAW,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAEzI,SAAS,eAAe,CAAoB,OAAU;IACrD,OAAO,CAAC,QAAQ,EAAE,CAAC;IACnB,OAAO,OAAO,CAAC;AAChB,CAAC;AAEY,QAAA,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,+BAAY,CAAC;IACvE,EAAE,EAAE,kCAAkC;IACtC,YAAY,EAAE,SAAS;IACvB,MAAM,EAAE;IACP,8CAA8C;IAC9C,+DAA+D;IAC/D,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnB,OAAO,EAAE,iDAA6B;QACtC,GAAG,EAAE,EAAE,OAAO,EAAE,iDAA6B,EAAE,SAAS,EAAE,CAAC,iDAA6B,CAAC,EAAE;QAC3F,MAAM,0CAAgC;KACtC,CAAC,CAAC,CAAC,SAAS,CACb;IACD,QAAQ,EAAE,CAAC;YACV,MAAM,EAAE,gBAAM,CAAC,eAAe;YAC9B,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,sBAA0B,CAAH,CAAC,AAAI,OAAO,CAAC;YAClF,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,aAAa;YAC5B,KAAK,EAAE,4BAA4B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,KAAK,CAAC;YACxD,IAAI,EAAE,qCAAiB,CAAC,QAAQ;YAChC,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,cAAc;YAC7B,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,KAAK,CAAC;YACxD,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,mBAAmB;YAClC,KAAK,EAAE,4BAA4B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,KAAK,CAAC;YACxD,IAAI,EAAE,qCAAiB,CAAC,QAAQ;YAChC,KAAK,EAAE,CAAC;SACR,CAAC;CACF,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAEH,QAAA,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,+BAAY,CAAC;IACzE,EAAE,EAAE,mCAAmC;IACvC,YAAY,EAAE,SAAS;IACvB,MAAM,EAAE;IACP,+CAA+C;IAC/C,+DAA+D;IAC/D,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnB,OAAO,EAAE,iDAA6B;QACtC,GAAG,EAAE,EAAE,OAAO,EAAE,iDAA6B,EAAE,SAAS,EAAE,CAAC,mDAA+B,CAAC,EAAE;QAC7F,MAAM,0CAAgC;KACtC,CAAC,CAAC,CAAC,SAAS,CACb;IACD,QAAQ,EAAE,CAAC;YACV,MAAM,EAAE,gBAAM,CAAC,eAAe;YAC9B,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,QAAQ,CAAC;YACpF,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,aAAa;YAC5B,KAAK,EAAE,4BAA4B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,MAAM,CAAC;YAC1D,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,cAAc;YAC7B,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,MAAM,CAAC;YAC1D,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,mBAAmB;YAClC,KAAK,EAAE,4BAA4B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,MAAM,CAAC;YAC1D,KAAK,EAAE,CAAC;SACR,CAAC;CACF,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAEhB,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,gBAAM,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3J,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,gBAAM,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AACpL,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,gBAAM,CAAC,kBAAkB,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,2BAAc,CAAC,GAAG,CAAC,2BAAc,CAAC,SAAS,CAAC,gBAAgB,EAAE,QAAQ,CAAC,EAAE,qCAAiB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;AACnR,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,gBAAM,CAAC,uBAAuB,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1K,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,gBAAM,CAAC,oBAAoB,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAEvJ,QAAA,WAAW,GAAG,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,+BAAY,CAAC;IAC3E,EAAE,EAAE,oCAAoC;IACxC,YAAY,EAAE,SAAS;IACvB,MAAM,EAAE;IACP,gDAAgD;IAChD,+DAA+D;IAC/D,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnB,OAAO,EAAE,iDAA6B;QACtC,GAAG,EAAE,EAAE,OAAO,EAAE,iDAA6B,EAAE,SAAS,EAAE,CAAC,iDAA6B,CAAC,EAAE;QAC3F,KAAK,EAAE,EAAE,OAAO,EAAE,iDAA6B,EAAE,SAAS,EAAE,CAAC,iDAA6B,CAAC,EAAE;QAC7F,MAAM,0CAAgC;KACtC,CAAC,CAAC,CAAC,SAAS,CACb;IACD,QAAQ,EAAE,CAAC;YACV,MAAM,EAAE,gBAAM,CAAC,eAAe;YAC9B,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,SAAS,CAAC;YACtF,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,aAAa;YAC5B,KAAK,EAAE,4BAA4B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,8BAA8B,EAAE,OAAO,CAAC;YAC5D,IAAI,EAAE,qCAAiB,CAAC,QAAQ;YAChC,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,cAAc;YAC7B,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,8BAA8B,EAAE,OAAO,CAAC;YAC5D,KAAK,EAAE,CAAC;SACR,EAAE;YACF,MAAM,EAAE,gBAAM,CAAC,mBAAmB;YAClC,KAAK,EAAE,4BAA4B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,8BAA8B,EAAE,OAAO,CAAC;YAC5D,IAAI,EAAE,qCAAiB,CAAC,QAAQ;YAChC,KAAK,EAAE,CAAC;SACR,CAAC;CACF,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAEhB,MAAM,2CAA4C,SAAQ,+BAAY;IAErE;QACC,KAAK,CAAC;YACL,EAAE,EAAE,yDAAyD;YAC7D,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,mDAAmD,EAAE,+BAA+B,CAAC;YACzG,KAAK,EAAE,+BAA+B;YACtC,YAAY,EAAE,SAAS;YACvB,MAAM,EAAE;gBACP,MAAM,EAAE,qCAAiB,CAAC,cAAc;gBACxC,OAAO,EAAE,CAAC;gBACV,MAAM,0CAAgC;aACtC;SACD,CAAC,CAAC;IACJ,CAAC;IAEM,GAAG,CAAC,QAA0B,EAAE,MAAmB;QACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,MAAM,uBAAuB,GAAG,MAAM,CAAC,SAAS,+CAAsC,CAAC;QAEvF,IAAI,CAAC,uBAAuB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;YACjE,OAAO;QACR,CAAC;QAED,2BAAW,CAAC,+BAA+B,GAAG,IAAI,CAAC;QACnD,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,mBAAmB,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC/D,2BAAW,CAAC,+BAA+B,GAAG,KAAK,CAAC;IACrD,CAAC;CACD;AAED,SAAS,uBAAuB,CAAC,MAAgC,EAAE,cAA8B;IAChG,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,OAAO;IACR,CAAC;IAED,0CAA0C;IAC1C,MAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,EAAE,CAAC,QAA0B,EAAE,IAAS,EAAE,EAAE;QACxF,mEAAmE;QACnE,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,sCAAkB,CAAC,CAAC,oBAAoB,EAAE,CAAC;QAC9E,IAAI,aAAa,IAAI,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC;YACnD,+EAA+E;YAC/E,MAAM,uBAAuB,GAAG,aAAa,CAAC,SAAS,+CAAsC,CAAC;YAC9F,MAAM,SAAS,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;YAC/C,IAAI,SAAS,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAClE,OAAO,IAAI,CAAC;YACb,CAAC;YACD,aAAa,CAAC,mBAAmB,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YAC9E,OAAO,IAAI,CAAC;QACb,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,yDAAyD;IACzD,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,QAA0B,EAAE,IAAS,EAAE,EAAE;QACpF,IAAA,uBAAiB,GAAE,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IACb,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,uBAAuB,CAAC,iBAAS,EAAE,KAAK,CAAC,CAAC;AAC1C,uBAAuB,CAAC,kBAAU,EAAE,MAAM,CAAC,CAAC;AAE5C,IAAI,mBAAW,EAAE,CAAC;IACjB,iDAAiD;IACjD,mBAAW,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,EAAE,CAAC,QAA0B,EAAE,IAAS,EAAE,EAAE;;QAC7F,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,sCAAkB,CAAC,CAAC;QAC3D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,oCAAiB,CAAC,CAAC;QAEzD,mEAAmE;QACnE,MAAM,aAAa,GAAG,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;QAC/D,IAAI,aAAa,IAAI,aAAa,CAAC,YAAY,EAAE,EAAE,CAAC;YACnD,MAAM,MAAM,GAAG,aAAa,CAAC,mBAAmB,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACtF,IAAI,MAAM,EAAE,CAAC;gBACZ,OAAO,MAAA,MAAA,yCAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,0CAAE,aAAa,EAAE,mCAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACrF,CAAC;iBAAM,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;gBAC3B,gFAAgF;gBAChF,OAAO,CAAC,KAAK,IAAI,EAAE;oBAClB,MAAM,aAAa,GAAG,MAAM,gBAAgB,CAAC,QAAQ,EAAE,CAAC;oBACxD,IAAI,aAAa,KAAK,EAAE,EAAE,CAAC;wBAC1B,MAAM,QAAQ,GAAG,gDAAgC,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;wBAC9E,IAAI,cAAc,GAAG,KAAK,CAAC;wBAC3B,IAAI,eAAe,GAAoB,IAAI,CAAC;wBAC5C,IAAI,IAAI,GAAkB,IAAI,CAAC;wBAC/B,IAAI,QAAQ,EAAE,CAAC;4BACd,cAAc,GAAG,CAAC,aAAa,CAAC,SAAS,+CAAsC,IAAI,CAAC,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;4BACpH,eAAe,GAAG,CAAC,OAAO,QAAQ,CAAC,eAAe,KAAK,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BACtG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;wBACtB,CAAC;wBACD,aAAa,CAAC,OAAO,CAAC,UAAU,+BAAiB;4BAChD,IAAI,EAAE,aAAa;4BACnB,cAAc;4BACd,eAAe;4BACf,IAAI;yBACJ,CAAC,CAAC;oBACJ,CAAC;gBACF,CAAC,CAAC,EAAE,CAAC;YACN,CAAC;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,gEAAgE;IAChE,mBAAW,CAAC,iBAAiB,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,QAA0B,EAAE,IAAS,EAAE,EAAE;QACzF,IAAA,uBAAiB,GAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC;IACb,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,IAAI,YAAY,EAAE,CAAC;IAClB,IAAA,uCAAoB,EAAC,2CAA2C,CAAC,CAAC;AACnE,CAAC","file":"clipboard.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '../../../../base/browser/browser';\nimport { getActiveDocument } from '../../../../base/browser/dom';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport * as platform from '../../../../base/common/platform';\nimport { CopyOptions, InMemoryClipboardMetadataManager } from '../../../browser/controller/textAreaInput';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { Command, EditorAction, MultiCommand, registerEditorAction } from '../../../browser/editorExtensions';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { Handler } from '../../../common/editorCommon';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { CopyPasteController } from '../../dropOrPasteInto/browser/copyPasteController';\nimport * as nls from '../../../../nls';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\n\nconst CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';\n\nconst supportsCut = (platform.isNative || document.queryCommandSupported('cut'));\nconst supportsCopy = (platform.isNative || document.queryCommandSupported('copy'));\n// Firefox only supports navigator.clipboard.readText() in browser extensions.\n// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility\n// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313\nconst supportsPaste = (typeof navigator.clipboard === 'undefined' || browser.isFirefox) ? document.queryCommandSupported('paste') : true;\n\nfunction registerCommand<T extends Command>(command: T): T {\n\tcommand.register();\n\treturn command;\n}\n\nexport const CutAction = supportsCut ? registerCommand(new MultiCommand({\n\tid: 'editor.action.clipboardCutAction',\n\tprecondition: undefined,\n\tkbOpts: (\n\t\t// Do not bind cut keybindings in the browser,\n\t\t// since browsers do that for us and it avoids security prompts\n\t\tplatform.isNative ? {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyX,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyX, secondary: [KeyMod.Shift | KeyCode.Delete] },\n\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t} : undefined\n\t),\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '2_ccp',\n\t\ttitle: nls.localize({ key: 'miCut', comment: ['&& denotes a mnemonic'] }, \"Cu&&t\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.EditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 1,\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.SimpleEditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 1,\n\t}]\n})) : undefined;\n\nexport const CopyAction = supportsCopy ? registerCommand(new MultiCommand({\n\tid: 'editor.action.clipboardCopyAction',\n\tprecondition: undefined,\n\tkbOpts: (\n\t\t// Do not bind copy keybindings in the browser,\n\t\t// since browsers do that for us and it avoids security prompts\n\t\tplatform.isNative ? {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyC, secondary: [KeyMod.CtrlCmd | KeyCode.Insert] },\n\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t} : undefined\n\t),\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '2_ccp',\n\t\ttitle: nls.localize({ key: 'miCopy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\n\t\torder: 2\n\t}, {\n\t\tmenuId: MenuId.EditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n\t\torder: 2,\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.SimpleEditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n\t\torder: 2,\n\t}]\n})) : undefined;\n\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, { submenu: MenuId.MenubarCopy, title: nls.localize2('copy as', \"Copy As\"), group: '2_ccp', order: 3 });\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextCopy, title: nls.localize2('copy as', \"Copy As\"), group: CLIPBOARD_CONTEXT_MENU_GROUP, order: 3 });\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextShare, title: nls.localize2('share', \"Share\"), group: '11_share', order: -1, when: ContextKeyExpr.and(ContextKeyExpr.notEquals('resourceScheme', 'output'), EditorContextKeys.editorTextFocus) });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { submenu: MenuId.EditorTitleContextShare, title: nls.localize2('share', \"Share\"), group: '11_share', order: -1 });\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, { submenu: MenuId.ExplorerContextShare, title: nls.localize2('share', \"Share\"), group: '11_share', order: -1 });\n\nexport const PasteAction = supportsPaste ? registerCommand(new MultiCommand({\n\tid: 'editor.action.clipboardPasteAction',\n\tprecondition: undefined,\n\tkbOpts: (\n\t\t// Do not bind paste keybindings in the browser,\n\t\t// since browsers do that for us and it avoids security prompts\n\t\tplatform.isNative ? {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyV,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.Shift | KeyCode.Insert] },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.Shift | KeyCode.Insert] },\n\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t} : undefined\n\t),\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '2_ccp',\n\t\ttitle: nls.localize({ key: 'miPaste', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\n\t\torder: 4\n\t}, {\n\t\tmenuId: MenuId.EditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 4,\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.SimpleEditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 4,\n\t}]\n})) : undefined;\n\nclass ExecCommandCopyWithSyntaxHighlightingAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',\n\t\t\tlabel: nls.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', \"Copy With Syntax Highlighting\"),\n\t\t\talias: 'Copy With Syntax Highlighting',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst emptySelectionClipboard = editor.getOption(EditorOption.emptySelectionClipboard);\n\n\t\tif (!emptySelectionClipboard && editor.getSelection().isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tCopyOptions.forceCopyWithSyntaxHighlighting = true;\n\t\teditor.focus();\n\t\teditor.getContainerDomNode().ownerDocument.execCommand('copy');\n\t\tCopyOptions.forceCopyWithSyntaxHighlighting = false;\n\t}\n}\n\nfunction registerExecCommandImpl(target: MultiCommand | undefined, browserCommand: 'cut' | 'copy'): void {\n\tif (!target) {\n\t\treturn;\n\t}\n\n\t// 1. handle case when focus is in editor.\n\ttarget.addImplementation(10000, 'code-editor', (accessor: ServicesAccessor, args: any) => {\n\t\t// Only if editor text focus (i.e. not if editor has widget focus).\n\t\tconst focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (focusedEditor && focusedEditor.hasTextFocus()) {\n\t\t\t// Do not execute if there is no selection and empty selection clipboard is off\n\t\t\tconst emptySelectionClipboard = focusedEditor.getOption(EditorOption.emptySelectionClipboard);\n\t\t\tconst selection = focusedEditor.getSelection();\n\t\t\tif (selection && selection.isEmpty() && !emptySelectionClipboard) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfocusedEditor.getContainerDomNode().ownerDocument.execCommand(browserCommand);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\t// 2. (default) handle case when focus is somewhere else.\n\ttarget.addImplementation(0, 'generic-dom', (accessor: ServicesAccessor, args: any) => {\n\t\tgetActiveDocument().execCommand(browserCommand);\n\t\treturn true;\n\t});\n}\n\nregisterExecCommandImpl(CutAction, 'cut');\nregisterExecCommandImpl(CopyAction, 'copy');\n\nif (PasteAction) {\n\t// 1. Paste: handle case when focus is in editor.\n\tPasteAction.addImplementation(10000, 'code-editor', (accessor: ServicesAccessor, args: any) => {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\t// Only if editor text focus (i.e. not if editor has widget focus).\n\t\tconst focusedEditor = codeEditorService.getFocusedCodeEditor();\n\t\tif (focusedEditor && focusedEditor.hasTextFocus()) {\n\t\t\tconst result = focusedEditor.getContainerDomNode().ownerDocument.execCommand('paste');\n\t\t\tif (result) {\n\t\t\t\treturn CopyPasteController.get(focusedEditor)?.finishedPaste() ?? Promise.resolve();\n\t\t\t} else if (platform.isWeb) {\n\t\t\t\t// Use the clipboard service if document.execCommand('paste') was not successful\n\t\t\t\treturn (async () => {\n\t\t\t\t\tconst clipboardText = await clipboardService.readText();\n\t\t\t\t\tif (clipboardText !== '') {\n\t\t\t\t\t\tconst metadata = InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);\n\t\t\t\t\t\tlet pasteOnNewLine = false;\n\t\t\t\t\t\tlet multicursorText: string[] | null = null;\n\t\t\t\t\t\tlet mode: string | null = null;\n\t\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\t\tpasteOnNewLine = (focusedEditor.getOption(EditorOption.emptySelectionClipboard) && !!metadata.isFromEmptySelection);\n\t\t\t\t\t\t\tmulticursorText = (typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null);\n\t\t\t\t\t\t\tmode = metadata.mode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfocusedEditor.trigger('keyboard', Handler.Paste, {\n\t\t\t\t\t\t\ttext: clipboardText,\n\t\t\t\t\t\t\tpasteOnNewLine,\n\t\t\t\t\t\t\tmulticursorText,\n\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\t// 2. Paste: (default) handle case when focus is somewhere else.\n\tPasteAction.addImplementation(0, 'generic-dom', (accessor: ServicesAccessor, args: any) => {\n\t\tgetActiveDocument().execCommand('paste');\n\t\treturn true;\n\t});\n}\n\nif (supportsCopy) {\n\tregisterEditorAction(ExecCommandCopyWithSyntaxHighlightingAction);\n}\n"]}