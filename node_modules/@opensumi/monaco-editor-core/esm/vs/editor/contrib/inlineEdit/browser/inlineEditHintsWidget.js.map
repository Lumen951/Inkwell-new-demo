{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/contrib/inlineEdit/browser/inlineEditHintsWidget.ts","vs/editor/contrib/inlineEdit/browser/inlineEditHintsWidget.ts"],"names":[],"mappings":"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","file":"inlineEditHintsWidget.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from '../../../../base/browser/dom';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel';\nimport { IAction, Separator } from '../../../../base/common/actions';\nimport { equals } from '../../../../base/common/arrays';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle';\nimport { IObservable, autorun, autorunWithStore, derived, observableFromEvent } from '../../../../base/common/observable';\nimport { OS } from '../../../../base/common/platform';\nimport './inlineEditHintsWidget.css';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { Position } from '../../../common/core/position';\nimport { PositionAffinity } from '../../../common/model';\nimport { InlineEditWidget } from './inlineEditController';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuWorkbenchToolBarOptions, WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry';\n\nexport class InlineEditHintsWidget extends Disposable {\n\tprivate readonly alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineEdit).showToolbar === 'always');\n\n\tprivate sessionPosition: Position | undefined = undefined;\n\n\tprivate readonly position = derived(this, reader => {\n\t\tconst ghostText = this.model.read(reader)?.widget.model.ghostText.read(reader);\n\n\t\tif (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n\t\t\tthis.sessionPosition = undefined;\n\t\t\treturn null;\n\t\t}\n\n\t\tconst firstColumn = ghostText.parts[0].column;\n\t\tif (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n\t\t\tthis.sessionPosition = undefined;\n\t\t}\n\n\t\tconst position = new Position(ghostText.lineNumber, Math.min(firstColumn, this.sessionPosition?.column ?? Number.MAX_SAFE_INTEGER));\n\t\tthis.sessionPosition = position;\n\t\treturn position;\n\t});\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly model: IObservable<InlineEditWidget | undefined>,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description setup content widget */\n\t\t\tconst model = this.model.read(reader);\n\t\t\tif (!model || !this.alwaysShowToolbar.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contentWidget = store.add(this.instantiationService.createInstance(\n\t\t\t\tInlineEditHintsContentWidget,\n\t\t\t\tthis.editor,\n\t\t\t\ttrue,\n\t\t\t\tthis.position,\n\t\t\t));\n\t\t\teditor.addContentWidget(contentWidget);\n\t\t\tstore.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n\t\t}));\n\t}\n}\n\nexport class InlineEditHintsContentWidget extends Disposable implements IContentWidget {\n\tprivate static _dropDownVisible = false;\n\tpublic static get dropDownVisible() { return this._dropDownVisible; }\n\n\tprivate static id = 0;\n\n\tprivate readonly id = `InlineEditHintsContentWidget${InlineEditHintsContentWidget.id++}`;\n\tpublic readonly allowEditorOverflow = true;\n\tpublic readonly suppressMouseDown = false;\n\n\tprivate readonly nodes = h('div.inlineEditHints', { className: this.withBorder ? '.withBorder' : '' }, [\n\t\th('div@toolBar'),\n\t]);\n\n\tprivate readonly toolBar: CustomizedMenuWorkbenchToolBar;\n\n\tprivate readonly inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(\n\t\tMenuId.InlineEditActions,\n\t\tthis._contextKeyService\n\t));\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly withBorder: boolean,\n\t\tprivate readonly _position: IObservable<Position | null>,\n\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\n\t\tthis.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, this.editor, MenuId.InlineEditToolbar, {\n\t\t\tmenuOptions: { renderShortTitle: true },\n\t\t\ttoolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\treturn instantiationService.createInstance(StatusBarViewItem, action, undefined);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\ttelemetrySource: 'InlineEditToolbar',\n\t\t}));\n\n\t\tthis._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n\t\t\tInlineEditHintsContentWidget._dropDownVisible = e;\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update position */\n\t\t\tthis._position.read(reader);\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description actions menu */\n\n\t\t\tconst extraActions = [];\n\n\t\t\tfor (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n\t\t\t\tfor (const action of group) {\n\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\textraActions.push(action);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extraActions.length > 0) {\n\t\t\t\textraActions.unshift(new Separator());\n\t\t\t}\n\n\t\t\tthis.toolBar.setAdditionalSecondaryActions(extraActions);\n\t\t}));\n\n\n\t}\n\n\tgetId(): string { return this.id; }\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.nodes.root;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: this._position.get(),\n\t\t\tpreference: [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW],\n\t\t\tpositionAffinity: PositionAffinity.LeftOfInjectedText,\n\t\t};\n\t}\n}\n\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst div = h('div.keybinding').root;\n\n\t\t\tconst k = new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions });\n\t\t\tk.set(kb);\n\t\t\tthis.label.textContent = this._action.label;\n\t\t\tthis.label.appendChild(div);\n\t\t\tthis.label.classList.add('inlineEditStatusBarItemLabel');\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\n\nexport class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n\tprivate readonly menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n\tprivate additionalActions: IAction[] = [];\n\tprivate prependedPrimaryActions: IAction[] = [];\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly menuId: MenuId,\n\t\tprivate readonly options2: IMenuWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(container, { resetMenu: menuId, ...options2 }, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n\n\t\tthis._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n\t\tthis._store.add(this.editor.onDidChangeCursorPosition(() => this.updateToolbar()));\n\t\tthis.updateToolbar();\n\t}\n\n\tprivate updateToolbar(): void {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\tthis.options2?.menuOptions,\n\t\t\t{ primary, secondary },\n\t\t\tthis.options2?.toolbarOptions?.primaryGroup, this.options2?.toolbarOptions?.shouldInlineSubmenu, this.options2?.toolbarOptions?.useSeparatorsInPrimaryActions\n\t\t);\n\n\t\tsecondary.push(...this.additionalActions);\n\t\tprimary.unshift(...this.prependedPrimaryActions);\n\t\tthis.setActions(primary, secondary);\n\t}\n\n\tsetPrependedPrimaryActions(actions: IAction[]): void {\n\t\tif (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prependedPrimaryActions = actions;\n\t\tthis.updateToolbar();\n\t}\n\n\tsetAdditionalSecondaryActions(actions: IAction[]): void {\n\t\tif (equals(this.additionalActions, actions, (a, b) => a === b)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.additionalActions = actions;\n\t\tthis.updateToolbar();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from '../../../../base/browser/dom';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel';\nimport { IAction, Separator } from '../../../../base/common/actions';\nimport { equals } from '../../../../base/common/arrays';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle';\nimport { IObservable, autorun, autorunWithStore, derived, observableFromEvent } from '../../../../base/common/observable';\nimport { OS } from '../../../../base/common/platform';\nimport './inlineEditHintsWidget.css';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser';\nimport { EditorOption } from '../../../common/config/editorOptions';\nimport { Position } from '../../../common/core/position';\nimport { PositionAffinity } from '../../../common/model';\nimport { InlineEditWidget } from './inlineEditController';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuWorkbenchToolBarOptions, WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry';\n\nexport class InlineEditHintsWidget extends Disposable {\n\tprivate readonly alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineEdit).showToolbar === 'always');\n\n\tprivate sessionPosition: Position | undefined = undefined;\n\n\tprivate readonly position = derived(this, reader => {\n\t\tconst ghostText = this.model.read(reader)?.widget.model.ghostText.read(reader);\n\n\t\tif (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n\t\t\tthis.sessionPosition = undefined;\n\t\t\treturn null;\n\t\t}\n\n\t\tconst firstColumn = ghostText.parts[0].column;\n\t\tif (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n\t\t\tthis.sessionPosition = undefined;\n\t\t}\n\n\t\tconst position = new Position(ghostText.lineNumber, Math.min(firstColumn, this.sessionPosition?.column ?? Number.MAX_SAFE_INTEGER));\n\t\tthis.sessionPosition = position;\n\t\treturn position;\n\t});\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly model: IObservable<InlineEditWidget | undefined>,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description setup content widget */\n\t\t\tconst model = this.model.read(reader);\n\t\t\tif (!model || !this.alwaysShowToolbar.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contentWidget = store.add(this.instantiationService.createInstance(\n\t\t\t\tInlineEditHintsContentWidget,\n\t\t\t\tthis.editor,\n\t\t\t\ttrue,\n\t\t\t\tthis.position,\n\t\t\t));\n\t\t\teditor.addContentWidget(contentWidget);\n\t\t\tstore.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n\t\t}));\n\t}\n}\n\nexport class InlineEditHintsContentWidget extends Disposable implements IContentWidget {\n\tprivate static _dropDownVisible = false;\n\tpublic static get dropDownVisible() { return this._dropDownVisible; }\n\n\tprivate static id = 0;\n\n\tprivate readonly id = `InlineEditHintsContentWidget${InlineEditHintsContentWidget.id++}`;\n\tpublic readonly allowEditorOverflow = true;\n\tpublic readonly suppressMouseDown = false;\n\n\tprivate readonly nodes = h('div.inlineEditHints', { className: this.withBorder ? '.withBorder' : '' }, [\n\t\th('div@toolBar'),\n\t]);\n\n\tprivate readonly toolBar: CustomizedMenuWorkbenchToolBar;\n\n\tprivate readonly inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(\n\t\tMenuId.InlineEditActions,\n\t\tthis._contextKeyService\n\t));\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly withBorder: boolean,\n\t\tprivate readonly _position: IObservable<Position | null>,\n\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\n\t\tthis.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, this.editor, MenuId.InlineEditToolbar, {\n\t\t\tmenuOptions: { renderShortTitle: true },\n\t\t\ttoolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\treturn instantiationService.createInstance(StatusBarViewItem, action, undefined);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\ttelemetrySource: 'InlineEditToolbar',\n\t\t}));\n\n\t\tthis._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n\t\t\tInlineEditHintsContentWidget._dropDownVisible = e;\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update position */\n\t\t\tthis._position.read(reader);\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description actions menu */\n\n\t\t\tconst extraActions = [];\n\n\t\t\tfor (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n\t\t\t\tfor (const action of group) {\n\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\textraActions.push(action);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extraActions.length > 0) {\n\t\t\t\textraActions.unshift(new Separator());\n\t\t\t}\n\n\t\t\tthis.toolBar.setAdditionalSecondaryActions(extraActions);\n\t\t}));\n\n\n\t}\n\n\tgetId(): string { return this.id; }\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.nodes.root;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: this._position.get(),\n\t\t\tpreference: [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW],\n\t\t\tpositionAffinity: PositionAffinity.LeftOfInjectedText,\n\t\t};\n\t}\n}\n\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst div = h('div.keybinding').root;\n\n\t\t\tconst k = new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions });\n\t\t\tk.set(kb);\n\t\t\tthis.label.textContent = this._action.label;\n\t\t\tthis.label.appendChild(div);\n\t\t\tthis.label.classList.add('inlineEditStatusBarItemLabel');\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\n\nexport class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n\tprivate readonly menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n\tprivate additionalActions: IAction[] = [];\n\tprivate prependedPrimaryActions: IAction[] = [];\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly menuId: MenuId,\n\t\tprivate readonly options2: IMenuWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(container, { resetMenu: menuId, ...options2 }, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n\n\t\tthis._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n\t\tthis._store.add(this.editor.onDidChangeCursorPosition(() => this.updateToolbar()));\n\t\tthis.updateToolbar();\n\t}\n\n\tprivate updateToolbar(): void {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\tthis.options2?.menuOptions,\n\t\t\t{ primary, secondary },\n\t\t\tthis.options2?.toolbarOptions?.primaryGroup, this.options2?.toolbarOptions?.shouldInlineSubmenu, this.options2?.toolbarOptions?.useSeparatorsInPrimaryActions\n\t\t);\n\n\t\tsecondary.push(...this.additionalActions);\n\t\tprimary.unshift(...this.prependedPrimaryActions);\n\t\tthis.setActions(primary, secondary);\n\t}\n\n\tsetPrependedPrimaryActions(actions: IAction[]): void {\n\t\tif (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prependedPrimaryActions = actions;\n\t\tthis.updateToolbar();\n\t}\n\n\tsetAdditionalSecondaryActions(actions: IAction[]): void {\n\t\tif (equals(this.additionalActions, actions, (a, b) => a === b)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.additionalActions = actions;\n\t\tthis.updateToolbar();\n\t}\n}\n"]}