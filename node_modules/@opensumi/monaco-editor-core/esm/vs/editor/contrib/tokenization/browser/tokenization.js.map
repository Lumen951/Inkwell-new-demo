{"version":3,"sources":["vs/editor/contrib/tokenization/browser/tokenization.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,iEAA8D;AAE9D,wEAAyG;AACzG,uCAAuC;AAEvC,MAAM,qBAAsB,SAAQ,+BAAY;IAC/C;QACC,KAAK,CAAC;YACL,EAAE,EAAE,+BAA+B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,sDAAiB,EAAE,6BAA6B,CAAC;YACrE,KAAK,EAAE,6BAA6B;YACpC,YAAY,EAAE,SAAS;SACvB,CAAC,CAAC;IACJ,CAAC;IAEM,GAAG,CAAC,QAA0B,EAAE,MAAmB;QACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QACD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,KAAK,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;QACvC,MAAM,EAAE,GAAG,IAAI,qBAAS,EAAE,CAAC;QAC3B,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;QAC3D,EAAE,CAAC,IAAI,EAAE,CAAC;QACV,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAElD,CAAC;CACD;AAED,IAAA,uCAAoB,EAAC,qBAAqB,CAAC,CAAC","file":"tokenization.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StopWatch } from '../../../../base/common/stopwatch';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from '../../../browser/editorExtensions';\nimport * as nls from '../../../../nls';\n\nclass ForceRetokenizeAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.forceRetokenize',\n\t\t\tlabel: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\n\t\t\talias: 'Developer: Force Retokenize',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tmodel.tokenization.resetTokenization();\n\t\tconst sw = new StopWatch();\n\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\tsw.stop();\n\t\tconsole.log(`tokenization took ${sw.elapsed()}`);\n\n\t}\n}\n\nregisterEditorAction(ForceRetokenizeAction);\n"]}