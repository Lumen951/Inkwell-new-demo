{"version":3,"sources":["vs/editor/contrib/lineSelection/browser/lineSelection.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAIhG,wEAAyG;AAEzG,kFAA+E;AAC/E,yEAAsE;AACtE,uCAAuC;AAGvC,MAAa,yBAA0B,SAAQ,+BAAY;IAC1D;QACC,KAAK,CAAC;YACL,EAAE,EAAE,qBAAqB;YACzB,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,wDAAqB,EAAE,uBAAuB,CAAC;YACnE,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE,SAAS;YACvB,MAAM,EAAE;gBACP,MAAM,qCAA6B;gBACnC,MAAM,EAAE,qCAAiB,CAAC,cAAc;gBACxC,OAAO,EAAE,iDAA6B;aACtC;SACD,CAAC,CAAC;IACJ,CAAC;IAEM,GAAG,CAAC,SAA2B,EAAE,MAAmB,EAAE,IAAS;QACrE,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QACD,MAAM,SAAS,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;QACzC,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;QACnC,SAAS,CAAC,eAAe,CACxB,IAAI,CAAC,MAAM,uCAEX,uCAAkB,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,eAAe,EAAE,CAAC,CAC9E,CAAC;QACF,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;CACD;AA7BD,8DA6BC;AAED,IAAA,uCAAoB,EAAC,yBAAyB,CAAC,CAAC","file":"lineSelection.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from '../../../browser/editorExtensions';\nimport { CursorChangeReason } from '../../../common/cursorEvents';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport * as nls from '../../../../nls';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\n\nexport class ExpandLineSelectionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'expandLineSelection',\n\t\t\tlabel: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n\t\t\talias: 'Expand Line Selection',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorCore,\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyL\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\targs = args || {};\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = editor._getViewModel();\n\t\tviewModel.model.pushStackElement();\n\t\tviewModel.setCursorStates(\n\t\t\targs.source,\n\t\t\tCursorChangeReason.Explicit,\n\t\t\tCursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates())\n\t\t);\n\t\tviewModel.revealPrimaryCursor(args.source, true);\n\t}\n}\n\nregisterEditorAction(ExpandLineSelectionAction);\n"]}