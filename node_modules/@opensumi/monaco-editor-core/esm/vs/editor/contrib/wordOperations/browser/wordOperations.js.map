{"version":3,"sources":["vs/editor/contrib/wordOperations/browser/wordOperations.ts"],"names":[],"mappings":"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","file":"wordOperations.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, EditorCommand, ICommandOptions, registerEditorAction, registerEditorCommand, ServicesAccessor } from '../../../browser/editorExtensions';\nimport { ReplaceCommand } from '../../../common/commands/replaceCommand';\nimport { EditorOption, EditorOptions } from '../../../common/config/editorOptions';\nimport { CursorState } from '../../../common/cursorCommon';\nimport { CursorChangeReason } from '../../../common/cursorEvents';\nimport { DeleteWordContext, WordNavigationType, WordOperations } from '../../../common/cursor/cursorWordOperations';\nimport { getMapForWordSeparators, WordCharacterClassifier } from '../../../common/core/wordCharacterClassifier';\nimport { Position } from '../../../common/core/position';\nimport { Range } from '../../../common/core/range';\nimport { Selection } from '../../../common/core/selection';\nimport { ScrollType } from '../../../common/editorCommon';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { ITextModel } from '../../../common/model';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry';\nimport * as nls from '../../../../nls';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../platform/accessibility/common/accessibility';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey';\nimport { IsWindowsContext } from '../../../../platform/contextkey/common/contextkeys';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\n\nexport interface MoveWordOptions extends ICommandOptions {\n\tinSelectionMode: boolean;\n\twordNavigationType: WordNavigationType;\n}\n\nexport abstract class MoveWordCommand extends EditorCommand {\n\n\tprivate readonly _inSelectionMode: boolean;\n\tprivate readonly _wordNavigationType: WordNavigationType;\n\n\tconstructor(opts: MoveWordOptions) {\n\t\tsuper(opts);\n\t\tthis._inSelectionMode = opts.inSelectionMode;\n\t\tthis._wordNavigationType = opts.wordNavigationType;\n\t}\n\n\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst wordSeparators = getMapForWordSeparators(editor.getOption(EditorOption.wordSeparators));\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\n\t\tconst result = selections.map((sel) => {\n\t\t\tconst inPosition = new Position(sel.positionLineNumber, sel.positionColumn);\n\t\t\tconst outPosition = this._move(wordSeparators, model, inPosition, this._wordNavigationType);\n\t\t\treturn this._moveTo(sel, outPosition, this._inSelectionMode);\n\t\t});\n\n\t\tmodel.pushStackElement();\n\t\teditor._getViewModel().setCursorStates('moveWordCommand', CursorChangeReason.Explicit, result.map(r => CursorState.fromModelSelection(r)));\n\t\tif (result.length === 1) {\n\t\t\tconst pos = new Position(result[0].positionLineNumber, result[0].positionColumn);\n\t\t\teditor.revealPosition(pos, ScrollType.Smooth);\n\t\t}\n\t}\n\n\tprivate _moveTo(from: Selection, to: Position, inSelectionMode: boolean): Selection {\n\t\tif (inSelectionMode) {\n\t\t\t// move just position\n\t\t\treturn new Selection(\n\t\t\t\tfrom.selectionStartLineNumber,\n\t\t\t\tfrom.selectionStartColumn,\n\t\t\t\tto.lineNumber,\n\t\t\t\tto.column\n\t\t\t);\n\t\t} else {\n\t\t\t// move everything\n\t\t\treturn new Selection(\n\t\t\t\tto.lineNumber,\n\t\t\t\tto.column,\n\t\t\t\tto.lineNumber,\n\t\t\t\tto.column\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected abstract _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position;\n}\n\nexport class WordLeftCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);\n\t}\n}\n\nexport class WordRightCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordStartLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartLeft',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndLeft',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStartFast,\n\t\t\tid: 'cursorWordLeft',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class CursorWordStartLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartLeftSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndLeftSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStartFast,\n\t\t\tid: 'cursorWordLeftSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyMod.Shift | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityLeft',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityLeftSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordStartRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartRight',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndRight',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class CursorWordRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordRight',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordStartRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordStartRightSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordEndRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordEndRightSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)?.negate()),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyMod.Shift | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class CursorWordRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordRightSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n}\n\nexport class CursorWordAccessibilityRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityRight',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityRightSelect',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tprotected override _move(_: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\n\t}\n}\n\nexport interface DeleteWordOptions extends ICommandOptions {\n\twhitespaceHeuristics: boolean;\n\twordNavigationType: WordNavigationType;\n}\n\nexport abstract class DeleteWordCommand extends EditorCommand {\n\tprivate readonly _whitespaceHeuristics: boolean;\n\tprivate readonly _wordNavigationType: WordNavigationType;\n\n\tconstructor(opts: DeleteWordOptions) {\n\t\tsuper(opts);\n\t\tthis._whitespaceHeuristics = opts.whitespaceHeuristics;\n\t\tthis._wordNavigationType = opts.wordNavigationType;\n\t}\n\n\tpublic runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst languageConfigurationService = accessor.get(ILanguageConfigurationService);\n\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst wordSeparators = getMapForWordSeparators(editor.getOption(EditorOption.wordSeparators));\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\t\tconst autoClosingBrackets = editor.getOption(EditorOption.autoClosingBrackets);\n\t\tconst autoClosingQuotes = editor.getOption(EditorOption.autoClosingQuotes);\n\t\tconst autoClosingPairs = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getAutoClosingPairs();\n\t\tconst viewModel = editor._getViewModel();\n\n\t\tconst commands = selections.map((sel) => {\n\t\t\tconst deleteRange = this._delete({\n\t\t\t\twordSeparators,\n\t\t\t\tmodel,\n\t\t\t\tselection: sel,\n\t\t\t\twhitespaceHeuristics: this._whitespaceHeuristics,\n\t\t\t\tautoClosingDelete: editor.getOption(EditorOption.autoClosingDelete),\n\t\t\t\tautoClosingBrackets,\n\t\t\t\tautoClosingQuotes,\n\t\t\t\tautoClosingPairs,\n\t\t\t\tautoClosedCharacters: viewModel.getCursorAutoClosedCharacters()\n\t\t\t}, this._wordNavigationType);\n\t\t\treturn new ReplaceCommand(deleteRange, '');\n\t\t});\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeCommands(this.id, commands);\n\t\teditor.pushUndoStop();\n\t}\n\n\tprotected abstract _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range;\n}\n\nexport class DeleteWordLeftCommand extends DeleteWordCommand {\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tconst r = WordOperations.deleteWordLeft(ctx, wordNavigationType);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\treturn new Range(1, 1, 1, 1);\n\t}\n}\n\nexport class DeleteWordRightCommand extends DeleteWordCommand {\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tconst r = WordOperations.deleteWordRight(ctx, wordNavigationType);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\tconst lineCount = ctx.model.getLineCount();\n\t\tconst maxColumn = ctx.model.getLineMaxColumn(lineCount);\n\t\treturn new Range(lineCount, maxColumn, lineCount, maxColumn);\n\t}\n}\n\nexport class DeleteWordStartLeft extends DeleteWordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordStartLeft',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordEndLeft extends DeleteWordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordEndLeft',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordLeft extends DeleteWordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordLeft',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.Backspace },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class DeleteWordStartRight extends DeleteWordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordStartRight',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordEndRight extends DeleteWordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordEndRight',\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n}\n\nexport class DeleteWordRight extends DeleteWordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordRight',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Delete,\n\t\t\t\tmac: { primary: KeyMod.Alt | KeyCode.Delete },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class DeleteInsideWord extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'deleteInsideWord',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tlabel: nls.localize('deleteInsideWord', \"Delete Word\"),\n\t\t\talias: 'Delete Word'\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst wordSeparators = getMapForWordSeparators(editor.getOption(EditorOption.wordSeparators));\n\t\tconst model = editor.getModel();\n\t\tconst selections = editor.getSelections();\n\n\t\tconst commands = selections.map((sel) => {\n\t\t\tconst deleteRange = WordOperations.deleteInsideWord(wordSeparators, model, sel);\n\t\t\treturn new ReplaceCommand(deleteRange, '');\n\t\t});\n\n\t\teditor.pushUndoStop();\n\t\teditor.executeCommands(this.id, commands);\n\t\teditor.pushUndoStop();\n\t}\n}\n\nregisterEditorCommand(new CursorWordStartLeft());\nregisterEditorCommand(new CursorWordEndLeft());\nregisterEditorCommand(new CursorWordLeft());\nregisterEditorCommand(new CursorWordStartLeftSelect());\nregisterEditorCommand(new CursorWordEndLeftSelect());\nregisterEditorCommand(new CursorWordLeftSelect());\nregisterEditorCommand(new CursorWordStartRight());\nregisterEditorCommand(new CursorWordEndRight());\nregisterEditorCommand(new CursorWordRight());\nregisterEditorCommand(new CursorWordStartRightSelect());\nregisterEditorCommand(new CursorWordEndRightSelect());\nregisterEditorCommand(new CursorWordRightSelect());\nregisterEditorCommand(new CursorWordAccessibilityLeft());\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\nregisterEditorCommand(new CursorWordAccessibilityRight());\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\nregisterEditorCommand(new DeleteWordStartLeft());\nregisterEditorCommand(new DeleteWordEndLeft());\nregisterEditorCommand(new DeleteWordLeft());\nregisterEditorCommand(new DeleteWordStartRight());\nregisterEditorCommand(new DeleteWordEndRight());\nregisterEditorCommand(new DeleteWordRight());\nregisterEditorAction(DeleteInsideWord);\n"]}