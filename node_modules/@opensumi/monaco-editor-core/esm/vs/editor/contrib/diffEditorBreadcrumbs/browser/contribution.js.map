{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/contrib/diffEditorBreadcrumbs/browser/contribution.ts","vs/editor/contrib/diffEditorBreadcrumbs/browser/contribution.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;;;;;;;;;AAEhG,2DAA2F;AAC3F,mEAA2H;AAC3H,yHAAoJ;AACpJ,oEAA6F;AAG7F,gFAAqF;AACrF,6EAAgG;AAChG,iEAA+D;AAC/D,yDAAsD;AAGtD,IAAM,2BAA2B,GAAjC,MAAM,2BAA4B,SAAQ,sBAAU;IAGnD,YACkB,UAAsB,EACb,wBAAmE,EACvE,oBAA2D;QAEjF,KAAK,EAAE,CAAC;QAJS,eAAU,GAAV,UAAU,CAAY;QACI,6BAAwB,GAAxB,wBAAwB,CAA0B;QACtD,yBAAoB,GAApB,oBAAoB,CAAsB;QALjE,kBAAa,GAAG,IAAA,4BAAe,EAA2B,IAAI,EAAE,SAAS,CAAC,CAAC;QAS3F,MAAM,6BAA6B,GAAG,IAAA,sCAAyB,EAC9D,oCAAoC,EACpC,IAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,WAAW,CAChE,CAAC;QAEF,MAAM,gBAAgB,GAAG,IAAA,sCAAyB,EACjD,+BAA+B,EAC/B,aAAK,CAAC,QAAQ,CAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CACrF,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAA,6BAAgB,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;YACvD,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE9B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,yCAAiC,EAAE,CAAC,CAAC;YAC/D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;gBAAC,OAAO;YAAC,CAAC;YAEjC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,kBAAkB,CAAC,UAAqB,EAAE,MAAe;QAC/D,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,CAAC,EAAE,CAAC;YAAC,OAAO,EAAE,CAAC;QAAC,CAAC;QACtB,MAAM,OAAO,GAAG,CAAC,CAAC,uBAAuB,EAAE;aACzC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3G,OAAO,CAAC,IAAI,CAAC,IAAA,qBAAY,EAAC,IAAA,kBAAS,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,eAAe,EAAE,yBAAgB,CAAC,CAAC,CAAC,CAAC;QAC9G,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;IACrG,CAAC;CACD,CAAA;AAxCK,2BAA2B;IAK9B,WAAA,2CAAwB,CAAA;IACxB,WAAA,mCAAoB,CAAA;GANjB,2BAA2B,CAwChC;AAED,yDAA2B,CAAC,2BAA2B,CAAC,CAAC,SAAS,EAAE,oBAAoB,EAAE,EAAE;IAC3F,OAAO,oBAAoB,CAAC,cAAc,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC","file":"contribution.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { reverseOrder, compareBy, numberComparator } from '../../../../base/common/arrays';\nimport { observableValue, observableSignalFromEvent, autorunWithStore, IReader } from '../../../../base/common/observable';\nimport { HideUnchangedRegionsFeature, IDiffEditorBreadcrumbsSource } from '../../../browser/widget/diffEditor/features/hideUnchangedRegionsFeature';\nimport { DisposableCancellationTokenSource } from '../../../browser/widget/diffEditor/utils';\nimport { LineRange } from '../../../common/core/lineRange';\nimport { ITextModel } from '../../../common/model';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { IOutlineModelService, OutlineModel } from '../../documentSymbols/browser/outlineModel';\nimport { Disposable } from '../../../../base/common/lifecycle';\nimport { Event } from '../../../../base/common/event';\nimport { SymbolKind } from '../../../common/languages';\n\nclass DiffEditorBreadcrumbsSource extends Disposable implements IDiffEditorBreadcrumbsSource {\n\tprivate readonly _currentModel = observableValue<OutlineModel | undefined>(this, undefined);\n\n\tconstructor(\n\t\tprivate readonly _textModel: ITextModel,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService private readonly _outlineModelService: IOutlineModelService,\n\t) {\n\t\tsuper();\n\n\t\tconst documentSymbolProviderChanged = observableSignalFromEvent(\n\t\t\t'documentSymbolProvider.onDidChange',\n\t\t\tthis._languageFeaturesService.documentSymbolProvider.onDidChange\n\t\t);\n\n\t\tconst textModelChanged = observableSignalFromEvent(\n\t\t\t'_textModel.onDidChangeContent',\n\t\t\tEvent.debounce<any>(e => this._textModel.onDidChangeContent(e), () => undefined, 100)\n\t\t);\n\n\t\tthis._register(autorunWithStore(async (reader, store) => {\n\t\t\tdocumentSymbolProviderChanged.read(reader);\n\t\t\ttextModelChanged.read(reader);\n\n\t\t\tconst src = store.add(new DisposableCancellationTokenSource());\n\t\t\tconst model = await this._outlineModelService.getOrCreate(this._textModel, src.token);\n\t\t\tif (store.isDisposed) { return; }\n\n\t\t\tthis._currentModel.set(model, undefined);\n\t\t}));\n\t}\n\n\tpublic getBreadcrumbItems(startRange: LineRange, reader: IReader): { name: string; kind: SymbolKind; startLineNumber: number }[] {\n\t\tconst m = this._currentModel.read(reader);\n\t\tif (!m) { return []; }\n\t\tconst symbols = m.asListOfDocumentSymbols()\n\t\t\t.filter(s => startRange.contains(s.range.startLineNumber) && !startRange.contains(s.range.endLineNumber));\n\t\tsymbols.sort(reverseOrder(compareBy(s => s.range.endLineNumber - s.range.startLineNumber, numberComparator)));\n\t\treturn symbols.map(s => ({ name: s.name, kind: s.kind, startLineNumber: s.range.startLineNumber }));\n\t}\n}\n\nHideUnchangedRegionsFeature.setBreadcrumbsSourceFactory((textModel, instantiationService) => {\n\treturn instantiationService.createInstance(DiffEditorBreadcrumbsSource, textModel);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { reverseOrder, compareBy, numberComparator } from '../../../../base/common/arrays';\nimport { observableValue, observableSignalFromEvent, autorunWithStore, IReader } from '../../../../base/common/observable';\nimport { HideUnchangedRegionsFeature, IDiffEditorBreadcrumbsSource } from '../../../browser/widget/diffEditor/features/hideUnchangedRegionsFeature';\nimport { DisposableCancellationTokenSource } from '../../../browser/widget/diffEditor/utils';\nimport { LineRange } from '../../../common/core/lineRange';\nimport { ITextModel } from '../../../common/model';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { IOutlineModelService, OutlineModel } from '../../documentSymbols/browser/outlineModel';\nimport { Disposable } from '../../../../base/common/lifecycle';\nimport { Event } from '../../../../base/common/event';\nimport { SymbolKind } from '../../../common/languages';\n\nclass DiffEditorBreadcrumbsSource extends Disposable implements IDiffEditorBreadcrumbsSource {\n\tprivate readonly _currentModel = observableValue<OutlineModel | undefined>(this, undefined);\n\n\tconstructor(\n\t\tprivate readonly _textModel: ITextModel,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService private readonly _outlineModelService: IOutlineModelService,\n\t) {\n\t\tsuper();\n\n\t\tconst documentSymbolProviderChanged = observableSignalFromEvent(\n\t\t\t'documentSymbolProvider.onDidChange',\n\t\t\tthis._languageFeaturesService.documentSymbolProvider.onDidChange\n\t\t);\n\n\t\tconst textModelChanged = observableSignalFromEvent(\n\t\t\t'_textModel.onDidChangeContent',\n\t\t\tEvent.debounce<any>(e => this._textModel.onDidChangeContent(e), () => undefined, 100)\n\t\t);\n\n\t\tthis._register(autorunWithStore(async (reader, store) => {\n\t\t\tdocumentSymbolProviderChanged.read(reader);\n\t\t\ttextModelChanged.read(reader);\n\n\t\t\tconst src = store.add(new DisposableCancellationTokenSource());\n\t\t\tconst model = await this._outlineModelService.getOrCreate(this._textModel, src.token);\n\t\t\tif (store.isDisposed) { return; }\n\n\t\t\tthis._currentModel.set(model, undefined);\n\t\t}));\n\t}\n\n\tpublic getBreadcrumbItems(startRange: LineRange, reader: IReader): { name: string; kind: SymbolKind; startLineNumber: number }[] {\n\t\tconst m = this._currentModel.read(reader);\n\t\tif (!m) { return []; }\n\t\tconst symbols = m.asListOfDocumentSymbols()\n\t\t\t.filter(s => startRange.contains(s.range.startLineNumber) && !startRange.contains(s.range.endLineNumber));\n\t\tsymbols.sort(reverseOrder(compareBy(s => s.range.endLineNumber - s.range.startLineNumber, numberComparator)));\n\t\treturn symbols.map(s => ({ name: s.name, kind: s.kind, startLineNumber: s.range.startLineNumber }));\n\t}\n}\n\nHideUnchangedRegionsFeature.setBreadcrumbsSourceFactory((textModel, instantiationService) => {\n\treturn instantiationService.createInstance(DiffEditorBreadcrumbsSource, textModel);\n});\n"]}