import { CancelablePromise } from '../../../../base/common/async';
import { Disposable } from '../../../../base/common/lifecycle';
import './inlineProgressWidget.css';
import { ICodeEditor } from '../../../browser/editorBrowser';
import { IPosition } from '../../../common/core/position';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';
export declare class InlineProgressManager extends Disposable {
    readonly id: string;
    private readonly _editor;
    private readonly _instantiationService;
    /** Delay before showing the progress widget */
    private readonly _showDelay;
    private readonly _showPromise;
    private readonly _currentDecorations;
    private readonly _currentWidget;
    private _operationIdPool;
    private _currentOperation?;
    constructor(id: string, _editor: ICodeEditor, _instantiationService: IInstantiationService);
    showWhile<R>(position: IPosition, title: string, promise: CancelablePromise<R>): Promise<R>;
    private clear;
}
