{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/contrib/gotoSymbol/browser/goToSymbol.ts","vs/editor/contrib/gotoSymbol/browser/goToSymbol.ts"],"names":[],"mappings":"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","file":"goToSymbol.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays';\nimport { CancellationToken } from '../../../../base/common/cancellation';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions';\nimport { Position } from '../../../common/core/position';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry';\nimport { DeclarationProvider, DefinitionProvider, ImplementationProvider, LocationLink, ProviderResult, ReferenceProvider, TypeDefinitionProvider } from '../../../common/languages';\nimport { ITextModel } from '../../../common/model';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { ReferencesModel } from './referencesModel';\n\nasync function getLocationLinks<T>(\n\tmodel: ITextModel,\n\tposition: Position,\n\tregistry: LanguageFeatureRegistry<T>,\n\tprovide: (provider: T, model: ITextModel, position: Position) => ProviderResult<LocationLink | LocationLink[]>\n): Promise<LocationLink[]> {\n\tconst provider = registry.ordered(model);\n\n\t// get results\n\tconst promises = provider.map((provider): Promise<LocationLink | LocationLink[] | undefined> => {\n\t\treturn Promise.resolve(provide(provider, model, position)).then(undefined, err => {\n\t\t\tonUnexpectedExternalError(err);\n\t\t\treturn undefined;\n\t\t});\n\t});\n\n\tconst values = await Promise.all(promises);\n\treturn coalesce(values.flat());\n}\n\nexport function getDefinitionsAtPosition(registry: LanguageFeatureRegistry<DefinitionProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideDefinition(model, position, token);\n\t});\n}\n\nexport function getDeclarationsAtPosition(registry: LanguageFeatureRegistry<DeclarationProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideDeclaration(model, position, token);\n\t});\n}\n\nexport function getImplementationsAtPosition(registry: LanguageFeatureRegistry<ImplementationProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideImplementation(model, position, token);\n\t});\n}\n\nexport function getTypeDefinitionsAtPosition(registry: LanguageFeatureRegistry<TypeDefinitionProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideTypeDefinition(model, position, token);\n\t});\n}\n\nexport function getReferencesAtPosition(registry: LanguageFeatureRegistry<ReferenceProvider>, model: ITextModel, position: Position, compact: boolean, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, async (provider, model, position) => {\n\t\tconst result = await provider.provideReferences(model, position, { includeDeclaration: true }, token);\n\t\tif (!compact || !result || result.length !== 2) {\n\t\t\treturn result;\n\t\t}\n\t\tconst resultWithoutDeclaration = await provider.provideReferences(model, position, { includeDeclaration: false }, token);\n\t\tif (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\n\t\t\treturn resultWithoutDeclaration;\n\t\t}\n\t\treturn result;\n\t});\n}\n\n// -- API commands ----\n\nasync function _sortedAndDeduped(callback: () => Promise<LocationLink[]>): Promise<LocationLink[]> {\n\tconst rawLinks = await callback();\n\tconst model = new ReferencesModel(rawLinks, '');\n\tconst modelLinks = model.references.map(ref => ref.link);\n\tmodel.dispose();\n\treturn modelLinks;\n}\n\nregisterModelAndPositionCommand('_executeDefinitionProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeDeclarationProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeReferenceProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeImplementationProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays';\nimport { CancellationToken } from '../../../../base/common/cancellation';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions';\nimport { Position } from '../../../common/core/position';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry';\nimport { DeclarationProvider, DefinitionProvider, ImplementationProvider, LocationLink, ProviderResult, ReferenceProvider, TypeDefinitionProvider } from '../../../common/languages';\nimport { ITextModel } from '../../../common/model';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\nimport { ReferencesModel } from './referencesModel';\n\nasync function getLocationLinks<T>(\n\tmodel: ITextModel,\n\tposition: Position,\n\tregistry: LanguageFeatureRegistry<T>,\n\tprovide: (provider: T, model: ITextModel, position: Position) => ProviderResult<LocationLink | LocationLink[]>\n): Promise<LocationLink[]> {\n\tconst provider = registry.ordered(model);\n\n\t// get results\n\tconst promises = provider.map((provider): Promise<LocationLink | LocationLink[] | undefined> => {\n\t\treturn Promise.resolve(provide(provider, model, position)).then(undefined, err => {\n\t\t\tonUnexpectedExternalError(err);\n\t\t\treturn undefined;\n\t\t});\n\t});\n\n\tconst values = await Promise.all(promises);\n\treturn coalesce(values.flat());\n}\n\nexport function getDefinitionsAtPosition(registry: LanguageFeatureRegistry<DefinitionProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideDefinition(model, position, token);\n\t});\n}\n\nexport function getDeclarationsAtPosition(registry: LanguageFeatureRegistry<DeclarationProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideDeclaration(model, position, token);\n\t});\n}\n\nexport function getImplementationsAtPosition(registry: LanguageFeatureRegistry<ImplementationProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideImplementation(model, position, token);\n\t});\n}\n\nexport function getTypeDefinitionsAtPosition(registry: LanguageFeatureRegistry<TypeDefinitionProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, (provider, model, position) => {\n\t\treturn provider.provideTypeDefinition(model, position, token);\n\t});\n}\n\nexport function getReferencesAtPosition(registry: LanguageFeatureRegistry<ReferenceProvider>, model: ITextModel, position: Position, compact: boolean, token: CancellationToken): Promise<LocationLink[]> {\n\treturn getLocationLinks(model, position, registry, async (provider, model, position) => {\n\t\tconst result = await provider.provideReferences(model, position, { includeDeclaration: true }, token);\n\t\tif (!compact || !result || result.length !== 2) {\n\t\t\treturn result;\n\t\t}\n\t\tconst resultWithoutDeclaration = await provider.provideReferences(model, position, { includeDeclaration: false }, token);\n\t\tif (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\n\t\t\treturn resultWithoutDeclaration;\n\t\t}\n\t\treturn result;\n\t});\n}\n\n// -- API commands ----\n\nasync function _sortedAndDeduped(callback: () => Promise<LocationLink[]>): Promise<LocationLink[]> {\n\tconst rawLinks = await callback();\n\tconst model = new ReferencesModel(rawLinks, '');\n\tconst modelLinks = model.references.map(ref => ref.link);\n\tmodel.dispose();\n\treturn modelLinks;\n}\n\nregisterModelAndPositionCommand('_executeDefinitionProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeDeclarationProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeReferenceProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n\nregisterModelAndPositionCommand('_executeImplementationProvider', (accessor, model, position) => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst promise = getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, CancellationToken.None);\n\treturn _sortedAndDeduped(() => promise);\n});\n"]}