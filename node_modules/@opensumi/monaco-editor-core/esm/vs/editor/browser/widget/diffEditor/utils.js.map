{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/browser/widget/diffEditor/utils.ts","vs/editor/browser/widget/diffEditor/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from '../../../../base/browser/dom';\nimport { findLast } from '../../../../base/common/arraysFind';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation';\nimport { isHotReloadEnabled, registerHotReloadHandler } from '../../../../base/common/hotReload';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle';\nimport { IObservable, IReader, ISettableObservable, autorun, autorunHandleChanges, autorunOpts, autorunWithStore, observableFromEvent, observableSignalFromEvent, observableValue, transaction } from '../../../../base/common/observable';\nimport { ElementSizeObserver } from '../../config/elementSizeObserver';\nimport { ICodeEditor, IOverlayWidget, IViewZone } from '../../editorBrowser';\nimport { Position } from '../../../common/core/position';\nimport { Range } from '../../../common/core/range';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping';\nimport { IModelDeltaDecoration } from '../../../common/model';\nimport { LengthObj } from '../../../common/model/bracketPairsTextModelPart/bracketPairsTree/length';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { ContextKeyValue, RawContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey';\n\nexport function joinCombine<T>(arr1: readonly T[], arr2: readonly T[], keySelector: (val: T) => number, combine: (v1: T, v2: T) => T): readonly T[] {\n\tif (arr1.length === 0) {\n\t\treturn arr2;\n\t}\n\tif (arr2.length === 0) {\n\t\treturn arr1;\n\t}\n\n\tconst result: T[] = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst val1 = arr1[i];\n\t\tconst val2 = arr2[j];\n\t\tconst key1 = keySelector(val1);\n\t\tconst key2 = keySelector(val2);\n\n\t\tif (key1 < key2) {\n\t\t\tresult.push(val1);\n\t\t\ti++;\n\t\t} else if (key1 > key2) {\n\t\t\tresult.push(val2);\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult.push(combine(val1, val2));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i]);\n\t\ti++;\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j]);\n\t\tj++;\n\t}\n\treturn result;\n}\n\n// TODO make utility\nexport function applyObservableDecorations(editor: ICodeEditor, decorations: IObservable<IModelDeltaDecoration[]>): IDisposable {\n\tconst d = new DisposableStore();\n\tconst decorationsCollection = editor.createDecorationsCollection();\n\td.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n\t\tconst d = decorations.read(reader);\n\t\tdecorationsCollection.set(d);\n\t}));\n\td.add({\n\t\tdispose: () => {\n\t\t\tdecorationsCollection.clear();\n\t\t}\n\t});\n\treturn d;\n}\n\nexport function appendRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.appendChild(child);\n\treturn toDisposable(() => {\n\t\tparent.removeChild(child);\n\t});\n}\n\nexport function observableConfigValue<T>(key: string, defaultValue: T, configurationService: IConfigurationService): IObservable<T> {\n\treturn observableFromEvent(\n\t\t(handleChange) => configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(key)) {\n\t\t\t\thandleChange(e);\n\t\t\t}\n\t\t}),\n\t\t() => configurationService.getValue<T>(key) ?? defaultValue,\n\t);\n}\n\nexport class ObservableElementSizeObserver extends Disposable {\n\tprivate readonly elementSizeObserver: ElementSizeObserver;\n\n\tprivate readonly _width: ISettableObservable<number>;\n\tpublic get width(): IObservable<number> { return this._width; }\n\n\tprivate readonly _height: ISettableObservable<number>;\n\tpublic get height(): IObservable<number> { return this._height; }\n\n\tconstructor(element: HTMLElement | null, dimension: IDimension | undefined) {\n\t\tsuper();\n\n\t\tthis.elementSizeObserver = this._register(new ElementSizeObserver(element, dimension));\n\t\tthis._width = observableValue(this, this.elementSizeObserver.getWidth());\n\t\tthis._height = observableValue(this, this.elementSizeObserver.getHeight());\n\n\t\tthis._register(this.elementSizeObserver.onDidChange(e => transaction(tx => {\n\t\t\t/** @description Set width/height from elementSizeObserver */\n\t\t\tthis._width.set(this.elementSizeObserver.getWidth(), tx);\n\t\t\tthis._height.set(this.elementSizeObserver.getHeight(), tx);\n\t\t})));\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic setAutomaticLayout(automaticLayout: boolean): void {\n\t\tif (automaticLayout) {\n\t\t\tthis.elementSizeObserver.startObserving();\n\t\t} else {\n\t\t\tthis.elementSizeObserver.stopObserving();\n\t\t}\n\t}\n}\n\nexport function animatedObservable(targetWindow: Window, base: IObservable<number, boolean>, store: DisposableStore): IObservable<number> {\n\tlet targetVal = base.get();\n\tlet startVal = targetVal;\n\tlet curVal = targetVal;\n\tconst result = observableValue('animatedValue', targetVal);\n\n\tlet animationStartMs: number = -1;\n\tconst durationMs = 300;\n\tlet animationFrame: number | undefined = undefined;\n\n\tstore.add(autorunHandleChanges({\n\t\tcreateEmptyChangeSummary: () => ({ animate: false }),\n\t\thandleChange: (ctx, s) => {\n\t\t\tif (ctx.didChange(base)) {\n\t\t\t\ts.animate = s.animate || ctx.change;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}, (reader, s) => {\n\t\t/** @description update value */\n\t\tif (animationFrame !== undefined) {\n\t\t\ttargetWindow.cancelAnimationFrame(animationFrame);\n\t\t\tanimationFrame = undefined;\n\t\t}\n\n\t\tstartVal = curVal;\n\t\ttargetVal = base.read(reader);\n\t\tanimationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n\n\t\tupdate();\n\t}));\n\n\tfunction update() {\n\t\tconst passedMs = Date.now() - animationStartMs;\n\t\tcurVal = Math.floor(easeOutExpo(passedMs, startVal, targetVal - startVal, durationMs));\n\n\t\tif (passedMs < durationMs) {\n\t\t\tanimationFrame = targetWindow.requestAnimationFrame(update);\n\t\t} else {\n\t\t\tcurVal = targetVal;\n\t\t}\n\n\t\tresult.set(curVal, undefined);\n\t}\n\n\treturn result;\n}\n\nfunction easeOutExpo(t: number, b: number, c: number, d: number): number {\n\treturn t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\n\nexport function deepMerge<T extends {}>(source1: T, source2: Partial<T>): T {\n\tconst result = {} as T;\n\tfor (const key in source1) {\n\t\tresult[key] = source1[key];\n\t}\n\tfor (const key in source2) {\n\t\tconst source2Value = source2[key];\n\t\tif (typeof result[key] === 'object' && source2Value && typeof source2Value === 'object') {\n\t\t\tresult[key] = deepMerge<any>(result[key], source2Value);\n\t\t} else {\n\t\t\tresult[key] = source2Value as any;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport abstract class ViewZoneOverlayWidget extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tviewZone: PlaceholderViewZone,\n\t\thtmlElement: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new ManagedOverlayWidget(editor, htmlElement));\n\t\tthis._register(applyStyle(htmlElement, {\n\t\t\theight: viewZone.actualHeight,\n\t\t\ttop: viewZone.actualTop,\n\t\t}));\n\t}\n}\n\nexport interface IObservableViewZone extends IViewZone {\n\t// Causes the view zone to relayout.\n\tonChange?: IObservable<unknown>;\n\n\t// Tells a view zone its id.\n\tsetZoneId?(zoneId: string): void;\n}\n\nexport class PlaceholderViewZone implements IObservableViewZone {\n\tpublic readonly domNode = document.createElement('div');\n\n\tprivate readonly _actualTop = observableValue<number | undefined>(this, undefined);\n\tprivate readonly _actualHeight = observableValue<number | undefined>(this, undefined);\n\n\tpublic readonly actualTop: IObservable<number | undefined> = this._actualTop;\n\tpublic readonly actualHeight: IObservable<number | undefined> = this._actualHeight;\n\n\tpublic readonly showInHiddenAreas = true;\n\n\tpublic get afterLineNumber(): number { return this._afterLineNumber.get(); }\n\n\tpublic readonly onChange?: IObservable<unknown> = this._afterLineNumber;\n\n\tconstructor(\n\t\tprivate readonly _afterLineNumber: IObservable<number>,\n\t\tpublic readonly heightInPx: number,\n\t) {\n\t}\n\n\tonDomNodeTop = (top: number) => {\n\t\tthis._actualTop.set(top, undefined);\n\t};\n\n\tonComputedHeight = (height: number) => {\n\t\tthis._actualHeight.set(height, undefined);\n\t};\n}\n\n\nexport class ManagedOverlayWidget implements IDisposable {\n\tprivate static _counter = 0;\n\tprivate readonly _overlayWidgetId = `managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n\n\tprivate readonly _overlayWidget: IOverlayWidget = {\n\t\tgetId: () => this._overlayWidgetId,\n\t\tgetDomNode: () => this._domElement,\n\t\tgetPosition: () => null\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _domElement: HTMLElement,\n\t) {\n\t\tthis._editor.addOverlayWidget(this._overlayWidget);\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this._overlayWidget);\n\t}\n}\n\nexport interface CSSStyle {\n\theight: number | string;\n\twidth: number | string;\n\ttop: number | string;\n\tvisibility: 'visible' | 'hidden' | 'collapse';\n\tdisplay: 'block' | 'inline' | 'inline-block' | 'flex' | 'none';\n\tpaddingLeft: number | string;\n\tpaddingRight: number | string;\n}\n\nexport function applyStyle(domNode: HTMLElement, style: Partial<{ [TKey in keyof CSSStyle]: CSSStyle[TKey] | IObservable<CSSStyle[TKey] | undefined> | undefined }>) {\n\treturn autorun(reader => {\n\t\t/** @description applyStyle */\n\t\tfor (let [key, val] of Object.entries(style)) {\n\t\t\tif (val && typeof val === 'object' && 'read' in val) {\n\t\t\t\tval = val.read(reader) as any;\n\t\t\t}\n\t\t\tif (typeof val === 'number') {\n\t\t\t\tval = `${val}px`;\n\t\t\t}\n\t\t\tkey = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n\t\t\tdomNode.style[key as any] = val as any;\n\t\t}\n\t});\n}\n\nexport function readHotReloadableExport<T>(value: T, reader: IReader | undefined): T {\n\tobserveHotReloadableExports([value], reader);\n\treturn value;\n}\n\nexport function observeHotReloadableExports(values: any[], reader: IReader | undefined): void {\n\tif (isHotReloadEnabled()) {\n\t\tconst o = observableSignalFromEvent(\n\t\t\t'reload',\n\t\t\tevent => registerHotReloadHandler(({ oldExports }) => {\n\t\t\t\tif (![...Object.values(oldExports)].some(v => values.includes(v))) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn (_newExports) => {\n\t\t\t\t\tevent(undefined);\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\to.read(reader);\n\t}\n}\n\nexport function applyViewZones(editor: ICodeEditor, viewZones: IObservable<IObservableViewZone[]>, setIsUpdating?: (isUpdatingViewZones: boolean) => void, zoneIds?: Set<string>): IDisposable {\n\tconst store = new DisposableStore();\n\tconst lastViewZoneIds: string[] = [];\n\n\tstore.add(autorunWithStore((reader, store) => {\n\t\t/** @description applyViewZones */\n\t\tconst curViewZones = viewZones.read(reader);\n\n\t\tconst viewZonIdsPerViewZone = new Map<IObservableViewZone, string>();\n\t\tconst viewZoneIdPerOnChangeObservable = new Map<IObservable<unknown>, string>();\n\n\t\t// Add/remove view zones\n\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\teditor.changeViewZones(a => {\n\t\t\tfor (const id of lastViewZoneIds) { a.removeZone(id); zoneIds?.delete(id); }\n\t\t\tlastViewZoneIds.length = 0;\n\n\t\t\tfor (const z of curViewZones) {\n\t\t\t\tconst id = a.addZone(z);\n\t\t\t\tif (z.setZoneId) {\n\t\t\t\t\tz.setZoneId(id);\n\t\t\t\t}\n\t\t\t\tlastViewZoneIds.push(id);\n\t\t\t\tzoneIds?.add(id);\n\t\t\t\tviewZonIdsPerViewZone.set(z, id);\n\t\t\t}\n\t\t});\n\t\tif (setIsUpdating) { setIsUpdating(false); }\n\n\t\t// Layout zone on change\n\t\tstore.add(autorunHandleChanges({\n\t\t\tcreateEmptyChangeSummary() {\n\t\t\t\treturn { zoneIds: [] as string[] };\n\t\t\t},\n\t\t\thandleChange(context, changeSummary) {\n\t\t\t\tconst id = viewZoneIdPerOnChangeObservable.get(context.changedObservable);\n\t\t\t\tif (id !== undefined) { changeSummary.zoneIds.push(id); }\n\t\t\t\treturn true;\n\t\t\t},\n\t\t}, (reader, changeSummary) => {\n\t\t\t/** @description layoutZone on change */\n\t\t\tfor (const vz of curViewZones) {\n\t\t\t\tif (vz.onChange) {\n\t\t\t\t\tviewZoneIdPerOnChangeObservable.set(vz.onChange, viewZonIdsPerViewZone.get(vz)!);\n\t\t\t\t\tvz.onChange.read(reader);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of changeSummary.zoneIds) { a.layoutZone(id); } });\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}));\n\t}));\n\n\tstore.add({\n\t\tdispose() {\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of lastViewZoneIds) { a.removeZone(id); } });\n\t\t\tzoneIds?.clear();\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}\n\t});\n\n\treturn store;\n}\n\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n\tpublic override dispose() {\n\t\tsuper.dispose(true);\n\t}\n}\n\nexport function translatePosition(posInOriginal: Position, mappings: DetailedLineRangeMapping[]): Range {\n\tconst mapping = findLast(mappings, m => m.original.startLineNumber <= posInOriginal.lineNumber);\n\tif (!mapping) {\n\t\t// No changes before the position\n\t\treturn Range.fromPositions(posInOriginal);\n\t}\n\n\tif (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.endLineNumberExclusive + mapping.modified.endLineNumberExclusive;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (!mapping.innerChanges) {\n\t\t// Only for legacy algorithm\n\t\treturn Range.fromPositions(new Position(mapping.modified.startLineNumber, 1));\n\t}\n\n\tconst innerMapping = findLast(mapping.innerChanges, m => m.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal));\n\tif (!innerMapping) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.startLineNumber + mapping.modified.startLineNumber;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (innerMapping.originalRange.containsPosition(posInOriginal)) {\n\t\treturn innerMapping.modifiedRange;\n\t} else {\n\t\tconst l = lengthBetweenPositions(innerMapping.originalRange.getEndPosition(), posInOriginal);\n\t\treturn Range.fromPositions(addLength(innerMapping.modifiedRange.getEndPosition(), l));\n\t}\n}\n\nfunction lengthBetweenPositions(position1: Position, position2: Position): LengthObj {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new LengthObj(0, position2.column - position1.column);\n\t} else {\n\t\treturn new LengthObj(position2.lineNumber - position1.lineNumber, position2.column - 1);\n\t}\n}\n\nfunction addLength(position: Position, length: LengthObj): Position {\n\tif (length.lineCount === 0) {\n\t\treturn new Position(position.lineNumber, position.column + length.columnCount);\n\t} else {\n\t\treturn new Position(position.lineNumber + length.lineCount, length.columnCount + 1);\n\t}\n}\n\nexport function bindContextKey<T extends ContextKeyValue>(key: RawContextKey<T>, service: IContextKeyService, computeValue: (reader: IReader) => T): IDisposable {\n\tconst boundKey = key.bindTo(service);\n\treturn autorunOpts({ debugName: () => `Set Context Key \"${key.key}\"` }, reader => {\n\t\tboundKey.set(computeValue(reader));\n\t});\n}\n\nexport function filterWithPrevious<T>(arr: T[], filter: (cur: T, prev: T | undefined) => boolean): T[] {\n\tlet prev: T | undefined;\n\treturn arr.filter(cur => {\n\t\tconst result = filter(cur, prev);\n\t\tprev = cur;\n\t\treturn result;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from '../../../../base/browser/dom';\nimport { findLast } from '../../../../base/common/arraysFind';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation';\nimport { isHotReloadEnabled, registerHotReloadHandler } from '../../../../base/common/hotReload';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle';\nimport { IObservable, IReader, ISettableObservable, autorun, autorunHandleChanges, autorunOpts, autorunWithStore, observableFromEvent, observableSignalFromEvent, observableValue, transaction } from '../../../../base/common/observable';\nimport { ElementSizeObserver } from '../../config/elementSizeObserver';\nimport { ICodeEditor, IOverlayWidget, IViewZone } from '../../editorBrowser';\nimport { Position } from '../../../common/core/position';\nimport { Range } from '../../../common/core/range';\nimport { DetailedLineRangeMapping } from '../../../common/diff/rangeMapping';\nimport { IModelDeltaDecoration } from '../../../common/model';\nimport { LengthObj } from '../../../common/model/bracketPairsTextModelPart/bracketPairsTree/length';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { ContextKeyValue, RawContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey';\n\nexport function joinCombine<T>(arr1: readonly T[], arr2: readonly T[], keySelector: (val: T) => number, combine: (v1: T, v2: T) => T): readonly T[] {\n\tif (arr1.length === 0) {\n\t\treturn arr2;\n\t}\n\tif (arr2.length === 0) {\n\t\treturn arr1;\n\t}\n\n\tconst result: T[] = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst val1 = arr1[i];\n\t\tconst val2 = arr2[j];\n\t\tconst key1 = keySelector(val1);\n\t\tconst key2 = keySelector(val2);\n\n\t\tif (key1 < key2) {\n\t\t\tresult.push(val1);\n\t\t\ti++;\n\t\t} else if (key1 > key2) {\n\t\t\tresult.push(val2);\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult.push(combine(val1, val2));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i]);\n\t\ti++;\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j]);\n\t\tj++;\n\t}\n\treturn result;\n}\n\n// TODO make utility\nexport function applyObservableDecorations(editor: ICodeEditor, decorations: IObservable<IModelDeltaDecoration[]>): IDisposable {\n\tconst d = new DisposableStore();\n\tconst decorationsCollection = editor.createDecorationsCollection();\n\td.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n\t\tconst d = decorations.read(reader);\n\t\tdecorationsCollection.set(d);\n\t}));\n\td.add({\n\t\tdispose: () => {\n\t\t\tdecorationsCollection.clear();\n\t\t}\n\t});\n\treturn d;\n}\n\nexport function appendRemoveOnDispose(parent: HTMLElement, child: HTMLElement) {\n\tparent.appendChild(child);\n\treturn toDisposable(() => {\n\t\tparent.removeChild(child);\n\t});\n}\n\nexport function observableConfigValue<T>(key: string, defaultValue: T, configurationService: IConfigurationService): IObservable<T> {\n\treturn observableFromEvent(\n\t\t(handleChange) => configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(key)) {\n\t\t\t\thandleChange(e);\n\t\t\t}\n\t\t}),\n\t\t() => configurationService.getValue<T>(key) ?? defaultValue,\n\t);\n}\n\nexport class ObservableElementSizeObserver extends Disposable {\n\tprivate readonly elementSizeObserver: ElementSizeObserver;\n\n\tprivate readonly _width: ISettableObservable<number>;\n\tpublic get width(): IObservable<number> { return this._width; }\n\n\tprivate readonly _height: ISettableObservable<number>;\n\tpublic get height(): IObservable<number> { return this._height; }\n\n\tconstructor(element: HTMLElement | null, dimension: IDimension | undefined) {\n\t\tsuper();\n\n\t\tthis.elementSizeObserver = this._register(new ElementSizeObserver(element, dimension));\n\t\tthis._width = observableValue(this, this.elementSizeObserver.getWidth());\n\t\tthis._height = observableValue(this, this.elementSizeObserver.getHeight());\n\n\t\tthis._register(this.elementSizeObserver.onDidChange(e => transaction(tx => {\n\t\t\t/** @description Set width/height from elementSizeObserver */\n\t\t\tthis._width.set(this.elementSizeObserver.getWidth(), tx);\n\t\t\tthis._height.set(this.elementSizeObserver.getHeight(), tx);\n\t\t})));\n\t}\n\n\tpublic observe(dimension?: IDimension): void {\n\t\tthis.elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic setAutomaticLayout(automaticLayout: boolean): void {\n\t\tif (automaticLayout) {\n\t\t\tthis.elementSizeObserver.startObserving();\n\t\t} else {\n\t\t\tthis.elementSizeObserver.stopObserving();\n\t\t}\n\t}\n}\n\nexport function animatedObservable(targetWindow: Window, base: IObservable<number, boolean>, store: DisposableStore): IObservable<number> {\n\tlet targetVal = base.get();\n\tlet startVal = targetVal;\n\tlet curVal = targetVal;\n\tconst result = observableValue('animatedValue', targetVal);\n\n\tlet animationStartMs: number = -1;\n\tconst durationMs = 300;\n\tlet animationFrame: number | undefined = undefined;\n\n\tstore.add(autorunHandleChanges({\n\t\tcreateEmptyChangeSummary: () => ({ animate: false }),\n\t\thandleChange: (ctx, s) => {\n\t\t\tif (ctx.didChange(base)) {\n\t\t\t\ts.animate = s.animate || ctx.change;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}, (reader, s) => {\n\t\t/** @description update value */\n\t\tif (animationFrame !== undefined) {\n\t\t\ttargetWindow.cancelAnimationFrame(animationFrame);\n\t\t\tanimationFrame = undefined;\n\t\t}\n\n\t\tstartVal = curVal;\n\t\ttargetVal = base.read(reader);\n\t\tanimationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n\n\t\tupdate();\n\t}));\n\n\tfunction update() {\n\t\tconst passedMs = Date.now() - animationStartMs;\n\t\tcurVal = Math.floor(easeOutExpo(passedMs, startVal, targetVal - startVal, durationMs));\n\n\t\tif (passedMs < durationMs) {\n\t\t\tanimationFrame = targetWindow.requestAnimationFrame(update);\n\t\t} else {\n\t\t\tcurVal = targetVal;\n\t\t}\n\n\t\tresult.set(curVal, undefined);\n\t}\n\n\treturn result;\n}\n\nfunction easeOutExpo(t: number, b: number, c: number, d: number): number {\n\treturn t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\n\nexport function deepMerge<T extends {}>(source1: T, source2: Partial<T>): T {\n\tconst result = {} as T;\n\tfor (const key in source1) {\n\t\tresult[key] = source1[key];\n\t}\n\tfor (const key in source2) {\n\t\tconst source2Value = source2[key];\n\t\tif (typeof result[key] === 'object' && source2Value && typeof source2Value === 'object') {\n\t\t\tresult[key] = deepMerge<any>(result[key], source2Value);\n\t\t} else {\n\t\t\tresult[key] = source2Value as any;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport abstract class ViewZoneOverlayWidget extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tviewZone: PlaceholderViewZone,\n\t\thtmlElement: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new ManagedOverlayWidget(editor, htmlElement));\n\t\tthis._register(applyStyle(htmlElement, {\n\t\t\theight: viewZone.actualHeight,\n\t\t\ttop: viewZone.actualTop,\n\t\t}));\n\t}\n}\n\nexport interface IObservableViewZone extends IViewZone {\n\t// Causes the view zone to relayout.\n\tonChange?: IObservable<unknown>;\n\n\t// Tells a view zone its id.\n\tsetZoneId?(zoneId: string): void;\n}\n\nexport class PlaceholderViewZone implements IObservableViewZone {\n\tpublic readonly domNode = document.createElement('div');\n\n\tprivate readonly _actualTop = observableValue<number | undefined>(this, undefined);\n\tprivate readonly _actualHeight = observableValue<number | undefined>(this, undefined);\n\n\tpublic readonly actualTop: IObservable<number | undefined> = this._actualTop;\n\tpublic readonly actualHeight: IObservable<number | undefined> = this._actualHeight;\n\n\tpublic readonly showInHiddenAreas = true;\n\n\tpublic get afterLineNumber(): number { return this._afterLineNumber.get(); }\n\n\tpublic readonly onChange?: IObservable<unknown> = this._afterLineNumber;\n\n\tconstructor(\n\t\tprivate readonly _afterLineNumber: IObservable<number>,\n\t\tpublic readonly heightInPx: number,\n\t) {\n\t}\n\n\tonDomNodeTop = (top: number) => {\n\t\tthis._actualTop.set(top, undefined);\n\t};\n\n\tonComputedHeight = (height: number) => {\n\t\tthis._actualHeight.set(height, undefined);\n\t};\n}\n\n\nexport class ManagedOverlayWidget implements IDisposable {\n\tprivate static _counter = 0;\n\tprivate readonly _overlayWidgetId = `managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n\n\tprivate readonly _overlayWidget: IOverlayWidget = {\n\t\tgetId: () => this._overlayWidgetId,\n\t\tgetDomNode: () => this._domElement,\n\t\tgetPosition: () => null\n\t};\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _domElement: HTMLElement,\n\t) {\n\t\tthis._editor.addOverlayWidget(this._overlayWidget);\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this._overlayWidget);\n\t}\n}\n\nexport interface CSSStyle {\n\theight: number | string;\n\twidth: number | string;\n\ttop: number | string;\n\tvisibility: 'visible' | 'hidden' | 'collapse';\n\tdisplay: 'block' | 'inline' | 'inline-block' | 'flex' | 'none';\n\tpaddingLeft: number | string;\n\tpaddingRight: number | string;\n}\n\nexport function applyStyle(domNode: HTMLElement, style: Partial<{ [TKey in keyof CSSStyle]: CSSStyle[TKey] | IObservable<CSSStyle[TKey] | undefined> | undefined }>) {\n\treturn autorun(reader => {\n\t\t/** @description applyStyle */\n\t\tfor (let [key, val] of Object.entries(style)) {\n\t\t\tif (val && typeof val === 'object' && 'read' in val) {\n\t\t\t\tval = val.read(reader) as any;\n\t\t\t}\n\t\t\tif (typeof val === 'number') {\n\t\t\t\tval = `${val}px`;\n\t\t\t}\n\t\t\tkey = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n\t\t\tdomNode.style[key as any] = val as any;\n\t\t}\n\t});\n}\n\nexport function readHotReloadableExport<T>(value: T, reader: IReader | undefined): T {\n\tobserveHotReloadableExports([value], reader);\n\treturn value;\n}\n\nexport function observeHotReloadableExports(values: any[], reader: IReader | undefined): void {\n\tif (isHotReloadEnabled()) {\n\t\tconst o = observableSignalFromEvent(\n\t\t\t'reload',\n\t\t\tevent => registerHotReloadHandler(({ oldExports }) => {\n\t\t\t\tif (![...Object.values(oldExports)].some(v => values.includes(v))) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn (_newExports) => {\n\t\t\t\t\tevent(undefined);\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\to.read(reader);\n\t}\n}\n\nexport function applyViewZones(editor: ICodeEditor, viewZones: IObservable<IObservableViewZone[]>, setIsUpdating?: (isUpdatingViewZones: boolean) => void, zoneIds?: Set<string>): IDisposable {\n\tconst store = new DisposableStore();\n\tconst lastViewZoneIds: string[] = [];\n\n\tstore.add(autorunWithStore((reader, store) => {\n\t\t/** @description applyViewZones */\n\t\tconst curViewZones = viewZones.read(reader);\n\n\t\tconst viewZonIdsPerViewZone = new Map<IObservableViewZone, string>();\n\t\tconst viewZoneIdPerOnChangeObservable = new Map<IObservable<unknown>, string>();\n\n\t\t// Add/remove view zones\n\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\teditor.changeViewZones(a => {\n\t\t\tfor (const id of lastViewZoneIds) { a.removeZone(id); zoneIds?.delete(id); }\n\t\t\tlastViewZoneIds.length = 0;\n\n\t\t\tfor (const z of curViewZones) {\n\t\t\t\tconst id = a.addZone(z);\n\t\t\t\tif (z.setZoneId) {\n\t\t\t\t\tz.setZoneId(id);\n\t\t\t\t}\n\t\t\t\tlastViewZoneIds.push(id);\n\t\t\t\tzoneIds?.add(id);\n\t\t\t\tviewZonIdsPerViewZone.set(z, id);\n\t\t\t}\n\t\t});\n\t\tif (setIsUpdating) { setIsUpdating(false); }\n\n\t\t// Layout zone on change\n\t\tstore.add(autorunHandleChanges({\n\t\t\tcreateEmptyChangeSummary() {\n\t\t\t\treturn { zoneIds: [] as string[] };\n\t\t\t},\n\t\t\thandleChange(context, changeSummary) {\n\t\t\t\tconst id = viewZoneIdPerOnChangeObservable.get(context.changedObservable);\n\t\t\t\tif (id !== undefined) { changeSummary.zoneIds.push(id); }\n\t\t\t\treturn true;\n\t\t\t},\n\t\t}, (reader, changeSummary) => {\n\t\t\t/** @description layoutZone on change */\n\t\t\tfor (const vz of curViewZones) {\n\t\t\t\tif (vz.onChange) {\n\t\t\t\t\tviewZoneIdPerOnChangeObservable.set(vz.onChange, viewZonIdsPerViewZone.get(vz)!);\n\t\t\t\t\tvz.onChange.read(reader);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of changeSummary.zoneIds) { a.layoutZone(id); } });\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}));\n\t}));\n\n\tstore.add({\n\t\tdispose() {\n\t\t\tif (setIsUpdating) { setIsUpdating(true); }\n\t\t\teditor.changeViewZones(a => { for (const id of lastViewZoneIds) { a.removeZone(id); } });\n\t\t\tzoneIds?.clear();\n\t\t\tif (setIsUpdating) { setIsUpdating(false); }\n\t\t}\n\t});\n\n\treturn store;\n}\n\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n\tpublic override dispose() {\n\t\tsuper.dispose(true);\n\t}\n}\n\nexport function translatePosition(posInOriginal: Position, mappings: DetailedLineRangeMapping[]): Range {\n\tconst mapping = findLast(mappings, m => m.original.startLineNumber <= posInOriginal.lineNumber);\n\tif (!mapping) {\n\t\t// No changes before the position\n\t\treturn Range.fromPositions(posInOriginal);\n\t}\n\n\tif (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.endLineNumberExclusive + mapping.modified.endLineNumberExclusive;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (!mapping.innerChanges) {\n\t\t// Only for legacy algorithm\n\t\treturn Range.fromPositions(new Position(mapping.modified.startLineNumber, 1));\n\t}\n\n\tconst innerMapping = findLast(mapping.innerChanges, m => m.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal));\n\tif (!innerMapping) {\n\t\tconst newLineNumber = posInOriginal.lineNumber - mapping.original.startLineNumber + mapping.modified.startLineNumber;\n\t\treturn Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n\t}\n\n\tif (innerMapping.originalRange.containsPosition(posInOriginal)) {\n\t\treturn innerMapping.modifiedRange;\n\t} else {\n\t\tconst l = lengthBetweenPositions(innerMapping.originalRange.getEndPosition(), posInOriginal);\n\t\treturn Range.fromPositions(addLength(innerMapping.modifiedRange.getEndPosition(), l));\n\t}\n}\n\nfunction lengthBetweenPositions(position1: Position, position2: Position): LengthObj {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new LengthObj(0, position2.column - position1.column);\n\t} else {\n\t\treturn new LengthObj(position2.lineNumber - position1.lineNumber, position2.column - 1);\n\t}\n}\n\nfunction addLength(position: Position, length: LengthObj): Position {\n\tif (length.lineCount === 0) {\n\t\treturn new Position(position.lineNumber, position.column + length.columnCount);\n\t} else {\n\t\treturn new Position(position.lineNumber + length.lineCount, length.columnCount + 1);\n\t}\n}\n\nexport function bindContextKey<T extends ContextKeyValue>(key: RawContextKey<T>, service: IContextKeyService, computeValue: (reader: IReader) => T): IDisposable {\n\tconst boundKey = key.bindTo(service);\n\treturn autorunOpts({ debugName: () => `Set Context Key \"${key.key}\"` }, reader => {\n\t\tboundKey.set(computeValue(reader));\n\t});\n}\n\nexport function filterWithPrevious<T>(arr: T[], filter: (cur: T, prev: T | undefined) => boolean): T[] {\n\tlet prev: T | undefined;\n\treturn arr.filter(cur => {\n\t\tconst result = filter(cur, prev);\n\t\tprev = cur;\n\t\treturn result;\n\t});\n}\n"]}