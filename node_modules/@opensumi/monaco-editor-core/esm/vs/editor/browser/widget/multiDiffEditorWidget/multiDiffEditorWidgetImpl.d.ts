import { Dimension } from '../../../../base/browser/dom';
import { Disposable } from '../../../../base/common/lifecycle';
import { IObservable } from '../../../../base/common/observable';
import { ITransaction } from '../../../../base/common/observableInternal/base';
import { URI } from '../../../../base/common/uri';
import './style.css';
import { ICodeEditor } from '../../editorBrowser';
import { RevealOptions } from './multiDiffEditorWidget';
import { IWorkbenchUIElementFactory } from './workbenchUIElementFactory';
import { OffsetRange } from '../../../common/core/offsetRange';
import { IRange } from '../../../common/core/range';
import { ISelection } from '../../../common/core/selection';
import { IDiffEditor } from '../../../common/editorCommon';
import { IContextKeyService } from '../../../../platform/contextkey/common/contextkey';
import { ITextEditorOptions } from '../../../../platform/editor/common/editor';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';
import { DiffEditorItemTemplate, TemplateData } from './diffEditorItemTemplate';
import { DocumentDiffItemViewModel, MultiDiffEditorViewModel } from './multiDiffEditorViewModel';
import { ObjectPool } from './objectPool';
export declare class MultiDiffEditorWidgetImpl extends Disposable {
    private readonly _element;
    private readonly _dimension;
    private readonly _viewModel;
    private readonly _workbenchUIElementFactory;
    private readonly _parentContextKeyService;
    private readonly _parentInstantiationService;
    private readonly _elements;
    private readonly _sizeObserver;
    private readonly _objectPool;
    private readonly _scrollable;
    private readonly _scrollableElement;
    readonly scrollTop: IObservable<number, unknown>;
    readonly scrollLeft: IObservable<number, unknown>;
    private readonly _viewItems;
    private readonly _spaceBetweenPx;
    private readonly _totalHeight;
    readonly activeDiffItem: IObservable<VirtualizedViewItem | undefined, unknown>;
    readonly lastActiveDiffItem: IObservable<VirtualizedViewItem | undefined, unknown>;
    readonly activeControl: IObservable<import("../diffEditor/diffEditorWidget").DiffEditorWidget | undefined, unknown>;
    private readonly _contextKeyService;
    private readonly _instantiationService;
    constructor(_element: HTMLElement, _dimension: IObservable<Dimension | undefined>, _viewModel: IObservable<MultiDiffEditorViewModel | undefined>, _workbenchUIElementFactory: IWorkbenchUIElementFactory, _parentContextKeyService: IContextKeyService, _parentInstantiationService: IInstantiationService);
    setScrollState(scrollState: {
        top?: number;
        left?: number;
    }): void;
    reveal(resource: IMultiDiffResource, options?: RevealOptions): void;
    getViewState(): IMultiDiffEditorViewState;
    /** This accounts for documents that are not loaded yet. */
    private _lastDocStates;
    setViewState(viewState: IMultiDiffEditorViewState): void;
    tryGetCodeEditor(resource: URI): {
        diffEditor: IDiffEditor;
        editor: ICodeEditor;
    } | undefined;
    private render;
}
export interface IMultiDiffEditorViewState {
    scrollState: {
        top: number;
        left: number;
    };
    docStates?: Record<string, IMultiDiffDocState>;
}
interface IMultiDiffDocState {
    collapsed: boolean;
    selections?: ISelection[];
}
export interface IMultiDiffEditorOptions extends ITextEditorOptions {
    viewState?: IMultiDiffEditorOptionsViewState;
}
export interface IMultiDiffEditorOptionsViewState {
    revealData?: {
        resource: IMultiDiffResource;
        range?: IRange;
    };
}
export type IMultiDiffResource = {
    original: URI;
} | {
    modified: URI;
};
declare class VirtualizedViewItem extends Disposable {
    readonly viewModel: DocumentDiffItemViewModel;
    private readonly _objectPool;
    private readonly _scrollLeft;
    private readonly _deltaScrollVertical;
    private readonly _templateRef;
    readonly contentHeight: IObservable<number, unknown>;
    readonly maxScroll: IObservable<{
        maxScroll: number;
        width: number;
    } | {
        maxScroll: number;
        scrollWidth: number;
    }, unknown>;
    readonly template: IObservable<DiffEditorItemTemplate | undefined, unknown>;
    private _isHidden;
    constructor(viewModel: DocumentDiffItemViewModel, _objectPool: ObjectPool<TemplateData, DiffEditorItemTemplate>, _scrollLeft: IObservable<number>, _deltaScrollVertical: (delta: number) => void);
    dispose(): void;
    toString(): string;
    getKey(): string;
    getViewState(): IMultiDiffDocState;
    setViewState(viewState: IMultiDiffDocState, tx: ITransaction): void;
    private _updateTemplateData;
    private _clear;
    hide(): void;
    render(verticalSpace: OffsetRange, offset: number, width: number, viewPort: OffsetRange): void;
}
export {};
