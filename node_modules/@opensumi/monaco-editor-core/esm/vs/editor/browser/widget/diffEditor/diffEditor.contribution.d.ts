import { ICodeEditor, IDiffEditor } from '../../editorBrowser';
import { EditorAction2, ServicesAccessor } from '../../editorExtensions';
import { Action2 } from '../../../../platform/actions/common/actions';
import './registrations.contribution';
export declare class ToggleCollapseUnchangedRegions extends Action2 {
    constructor();
    run(accessor: ServicesAccessor, ...args: unknown[]): void;
}
export declare class ToggleShowMovedCodeBlocks extends Action2 {
    constructor();
    run(accessor: ServicesAccessor, ...args: unknown[]): void;
}
export declare class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {
    constructor();
    run(accessor: ServicesAccessor, ...args: unknown[]): void;
}
export declare class SwitchSide extends EditorAction2 {
    constructor();
    runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, arg?: {
        dryRun: boolean;
    }): unknown;
}
export declare class ExitCompareMove extends EditorAction2 {
    constructor();
    runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void;
}
export declare class CollapseAllUnchangedRegions extends EditorAction2 {
    constructor();
    runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void;
}
export declare class ShowAllUnchangedRegions extends EditorAction2 {
    constructor();
    runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void;
}
export declare class AccessibleDiffViewerNext extends Action2 {
    static id: string;
    constructor();
    run(accessor: ServicesAccessor): void;
}
export declare class AccessibleDiffViewerPrev extends Action2 {
    static id: string;
    constructor();
    run(accessor: ServicesAccessor): void;
}
export declare function findFocusedDiffEditor(accessor: ServicesAccessor): IDiffEditor | null;
