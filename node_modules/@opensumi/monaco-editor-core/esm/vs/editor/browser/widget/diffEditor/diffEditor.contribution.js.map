{"version":3,"sources":["vs/editor/browser/widget/diffEditor/diffEditor.contribution.ts"],"names":[],"mappings":"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","file":"diffEditor.contribution.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveElement } from '../../../../base/browser/dom';\nimport { Codicon } from '../../../../base/common/codicons';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes';\nimport { ICodeEditor, IDiffEditor } from '../../editorBrowser';\nimport { EditorAction2, ServicesAccessor } from '../../editorExtensions';\nimport { ICodeEditorService } from '../../services/codeEditorService';\nimport { DiffEditorWidget } from './diffEditorWidget';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { localize, localize2 } from '../../../../nls';\nimport { ILocalizedString } from '../../../../platform/action/common/action';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration';\nimport { ContextKeyEqualsExpr, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\nimport './registrations.contribution';\n\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleCollapseUnchangedRegions',\n\t\t\ttitle: localize2('toggleCollapseUnchangedRegions', 'Toggle Collapse Unchanged Regions'),\n\t\t\ticon: Codicon.map,\n\t\t\ttoggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.hideUnchangedRegions.enabled');\n\t\tconfigurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n\t}\n}\n\nregisterAction2(ToggleCollapseUnchangedRegions);\n\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleShowMovedCodeBlocks',\n\t\t\ttitle: localize2('toggleShowMovedCodeBlocks', 'Toggle Show Moved Code Blocks'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.experimental.showMoves');\n\t\tconfigurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n\t}\n}\n\nregisterAction2(ToggleShowMovedCodeBlocks);\n\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleUseInlineViewWhenSpaceIsLimited',\n\t\t\ttitle: localize2('toggleUseInlineViewWhenSpaceIsLimited', 'Toggle Use Inline View When Space Is Limited'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.useInlineViewWhenSpaceIsLimited');\n\t\tconfigurationService.updateValue('diffEditor.useInlineViewWhenSpaceIsLimited', newValue);\n\t}\n}\n\nregisterAction2(ToggleUseInlineViewWhenSpaceIsLimited);\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: new ToggleUseInlineViewWhenSpaceIsLimited().desc.id,\n\t\ttitle: localize('useInlineViewWhenSpaceIsLimited', \"Use Inline View When Space Is Limited\"),\n\t\ttoggled: ContextKeyExpr.has('config.diffEditor.useInlineViewWhenSpaceIsLimited'),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 11,\n\tgroup: '1_diff',\n\twhen: ContextKeyExpr.and(\n\t\tEditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached,\n\t\tContextKeyExpr.has('isInDiffEditor'),\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: new ToggleShowMovedCodeBlocks().desc.id,\n\t\ttitle: localize('showMoves', \"Show Moved Code Blocks\"),\n\t\ticon: Codicon.move,\n\t\ttoggled: ContextKeyEqualsExpr.create('config.diffEditor.experimental.showMoves', true),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 10,\n\tgroup: '1_diff',\n\twhen: ContextKeyExpr.has('isInDiffEditor'),\n});\n\nconst diffEditorCategory: ILocalizedString = localize2('diffEditor', \"Diff Editor\");\n\nexport class SwitchSide extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.switchSide',\n\t\t\ttitle: localize2('switchSide', 'Switch Side'),\n\t\t\ticon: Codicon.arrowSwap,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, arg?: { dryRun: boolean }): unknown {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tif (arg && arg.dryRun) {\n\t\t\t\treturn { destinationSelection: diffEditor.mapToOtherSide().destinationSelection };\n\t\t\t} else {\n\t\t\t\tdiffEditor.switchSide();\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nregisterAction2(SwitchSide);\n\nexport class ExitCompareMove extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.exitCompareMove',\n\t\t\ttitle: localize2('exitCompareMove', 'Exit Compare Move'),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: EditorContextKeys.comparingMovedCode,\n\t\t\tf1: false,\n\t\t\tcategory: diffEditorCategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: 10000,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.exitCompareMove();\n\t\t}\n\t}\n}\n\nregisterAction2(ExitCompareMove);\n\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.collapseAllUnchangedRegions',\n\t\t\ttitle: localize2('collapseAllUnchangedRegions', 'Collapse All Unchanged Regions'),\n\t\t\ticon: Codicon.fold,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.collapseAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nregisterAction2(CollapseAllUnchangedRegions);\n\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.showAllUnchangedRegions',\n\t\t\ttitle: localize2('showAllUnchangedRegions', 'Show All Unchanged Regions'),\n\t\t\ticon: Codicon.unfold,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.showAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nregisterAction2(ShowAllUnchangedRegions);\n\nconst accessibleDiffViewerCategory: ILocalizedString = localize2('accessibleDiffViewer', \"Accessible Diff Viewer\");\n\nexport class AccessibleDiffViewerNext extends Action2 {\n\tpublic static id = 'editor.action.accessibleDiffViewer.next';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerNext.id,\n\t\t\ttitle: localize2('editor.action.accessibleDiffViewer.next', 'Go to Next Difference'),\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerNext();\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: AccessibleDiffViewerNext.id,\n\t\ttitle: localize('Open Accessible Diff Viewer', \"Open Accessible Diff Viewer\"),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 10,\n\tgroup: '2_diff',\n\twhen: ContextKeyExpr.and(\n\t\tEditorContextKeys.accessibleDiffViewerVisible.negate(),\n\t\tContextKeyExpr.has('isInDiffEditor'),\n\t),\n});\n\nexport class AccessibleDiffViewerPrev extends Action2 {\n\tpublic static id = 'editor.action.accessibleDiffViewer.prev';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerPrev.id,\n\t\t\ttitle: localize2('editor.action.accessibleDiffViewer.prev', 'Go to Previous Difference'),\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerPrev();\n\t}\n}\n\nexport function findFocusedDiffEditor(accessor: ServicesAccessor): IDiffEditor | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\tconst activeElement = getActiveElement();\n\tif (activeElement) {\n\t\tfor (const d of diffEditors) {\n\t\t\tconst container = d.getContainerDomNode();\n\t\t\tif (isElementOrParentOf(container, activeElement)) {\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction isElementOrParentOf(elementOrParent: Element, element: Element): boolean {\n\tlet e: Element | null = element;\n\twhile (e) {\n\t\tif (e === elementOrParent) {\n\t\t\treturn true;\n\t\t}\n\t\te = e.parentElement;\n\t}\n\treturn false;\n}\n\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.next', AccessibleDiffViewerNext.id);\nregisterAction2(AccessibleDiffViewerNext);\n\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.prev', AccessibleDiffViewerPrev.id);\nregisterAction2(AccessibleDiffViewerPrev);\n"]}