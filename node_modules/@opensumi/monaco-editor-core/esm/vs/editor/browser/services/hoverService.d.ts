import { IHoverService, IHoverOptions } from '../../../platform/hover/browser/hover';
import { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView';
import { IInstantiationService } from '../../../platform/instantiation/common/instantiation';
import { IKeybindingService } from '../../../platform/keybinding/common/keybinding';
import { IAccessibilityService } from '../../../platform/accessibility/common/accessibility';
import { ILayoutService } from '../../../platform/layout/browser/layoutService';
import { IHoverWidget } from '../../../base/browser/ui/iconLabel/iconHoverDelegate';
export declare class HoverService implements IHoverService {
    private readonly _instantiationService;
    private readonly _contextViewService;
    private readonly _keybindingService;
    private readonly _layoutService;
    private readonly _accessibilityService;
    readonly _serviceBrand: undefined;
    private _currentHoverOptions;
    private _currentHover;
    private _lastHoverOptions;
    private _lastFocusedElementBeforeOpen;
    constructor(_instantiationService: IInstantiationService, _contextViewService: IContextViewService, contextMenuService: IContextMenuService, _keybindingService: IKeybindingService, _layoutService: ILayoutService, _accessibilityService: IAccessibilityService);
    showHover(options: IHoverOptions, focus?: boolean, skipLastFocusedUpdate?: boolean): IHoverWidget | undefined;
    hideHover(): void;
    private doHideHover;
    private _intersectionChange;
    showAndFocusLastHover(): void;
    private _keyDown;
    private _keyUp;
}
