{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/standalone/browser/standaloneLayoutService.ts","vs/editor/standalone/browser/standaloneLayoutService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;;;;;;;;;;AAEhG,iDAAiD;AACjD,yDAA0D;AAC1D,wDAAuE;AACvE,sDAAmD;AACnD,gFAA8E;AAC9E,kFAAyG;AACzG,kFAAmG;AAEnG,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAU5B,IAAI,aAAa;;QAChB,OAAO,MAAA,MAAA,IAAA,uBAAc,EAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,0CAAE,mBAAmB,EAAE,mCAAI,mBAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;IACrH,CAAC;IAED,IAAI,eAAe;;QAClB,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,mCAAI,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;QAEzH,OAAO,MAAA,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,mBAAmB,EAAE,mCAAI,IAAI,CAAC,aAAa,CAAC;IACtE,CAAC;IAED,IAAI,sBAAsB;QACzB,OAAO,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,wBAAwB;QAC3B,OAAO,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAChD,CAAC;IAKD,IAAI,UAAU;QACb,OAAO,IAAA,iBAAQ,EAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;IAChH,CAAC;IAED,YAAY;QACX,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAED,KAAK;;QACJ,MAAA,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,0CAAE,KAAK,EAAE,CAAC;IACzD,CAAC;IAED,YACqB,kBAA8C;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAzC1D,6BAAwB,GAAG,aAAK,CAAC,IAAI,CAAC;QACtC,+BAA0B,GAAG,aAAK,CAAC,IAAI,CAAC;QACxC,yBAAoB,GAAG,aAAK,CAAC,IAAI,CAAC;QAClC,+BAA0B,GAAG,aAAK,CAAC,IAAI,CAAC;QACxC,sBAAiB,GAAG,aAAK,CAAC,IAAI,CAAC;QAC/B,oCAA+B,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAoBpD,wBAAmB,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;QACrE,0BAAqB,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;IAgB5E,CAAC;CAEL,CAAA;AA/CK,uBAAuB;IA4C1B,WAAA,sCAAkB,CAAA;GA5Cf,uBAAuB,CA+C5B;AAEM,IAAM,yBAAyB,GAA/B,MAAM,yBAA0B,SAAQ,uBAAuB;IACrE,IAAa,aAAa;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IACD,YACS,UAAuB,EACX,iBAAqC;QAEzD,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAa;IAIhC,CAAC;CACD,CAAA;AAVY,8DAAyB;oCAAzB,yBAAyB;IAMnC,WAAA,sCAAkB,CAAA;GANR,yBAAyB,CAUrC;AAED,IAAA,8BAAiB,EAAC,8BAAc,EAAE,uBAAuB,oCAA4B,CAAC","file":"standaloneLayoutService.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom';\nimport { mainWindow } from '../../../base/browser/window';\nimport { coalesce, firstOrDefault } from '../../../base/common/arrays';\nimport { Event } from '../../../base/common/event';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions';\nimport { ILayoutOffsetInfo, ILayoutService } from '../../../platform/layout/browser/layoutService';\n\nclass StandaloneLayoutService implements ILayoutService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onDidLayoutMainContainer = Event.None;\n\treadonly onDidLayoutActiveContainer = Event.None;\n\treadonly onDidLayoutContainer = Event.None;\n\treadonly onDidChangeActiveContainer = Event.None;\n\treadonly onDidAddContainer = Event.None;\n\treadonly whenActiveContainerStylesLoaded = Promise.resolve();\n\n\tget mainContainer(): HTMLElement {\n\t\treturn firstOrDefault(this._codeEditorService.listCodeEditors())?.getContainerDomNode() ?? mainWindow.document.body;\n\t}\n\n\tget activeContainer(): HTMLElement {\n\t\tconst activeCodeEditor = this._codeEditorService.getFocusedCodeEditor() ?? this._codeEditorService.getActiveCodeEditor();\n\n\t\treturn activeCodeEditor?.getContainerDomNode() ?? this.mainContainer;\n\t}\n\n\tget mainContainerDimension(): dom.IDimension {\n\t\treturn dom.getClientArea(this.mainContainer);\n\t}\n\n\tget activeContainerDimension() {\n\t\treturn dom.getClientArea(this.activeContainer);\n\t}\n\n\treadonly mainContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\treadonly activeContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\tget containers(): Iterable<HTMLElement> {\n\t\treturn coalesce(this._codeEditorService.listCodeEditors().map(codeEditor => codeEditor.getContainerDomNode()));\n\t}\n\n\tgetContainer() {\n\t\treturn this.activeContainer;\n\t}\n\n\tfocus(): void {\n\t\tthis._codeEditorService.getFocusedCodeEditor()?.focus();\n\t}\n\n\tconstructor(\n\t\t@ICodeEditorService private _codeEditorService: ICodeEditorService\n\t) { }\n\n}\n\nexport class EditorScopedLayoutService extends StandaloneLayoutService {\n\toverride get mainContainer(): HTMLElement {\n\t\treturn this._container;\n\t}\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(codeEditorService);\n\t}\n}\n\nregisterSingleton(ILayoutService, StandaloneLayoutService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom';\nimport { mainWindow } from '../../../base/browser/window';\nimport { coalesce, firstOrDefault } from '../../../base/common/arrays';\nimport { Event } from '../../../base/common/event';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions';\nimport { ILayoutOffsetInfo, ILayoutService } from '../../../platform/layout/browser/layoutService';\n\nclass StandaloneLayoutService implements ILayoutService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onDidLayoutMainContainer = Event.None;\n\treadonly onDidLayoutActiveContainer = Event.None;\n\treadonly onDidLayoutContainer = Event.None;\n\treadonly onDidChangeActiveContainer = Event.None;\n\treadonly onDidAddContainer = Event.None;\n\treadonly whenActiveContainerStylesLoaded = Promise.resolve();\n\n\tget mainContainer(): HTMLElement {\n\t\treturn firstOrDefault(this._codeEditorService.listCodeEditors())?.getContainerDomNode() ?? mainWindow.document.body;\n\t}\n\n\tget activeContainer(): HTMLElement {\n\t\tconst activeCodeEditor = this._codeEditorService.getFocusedCodeEditor() ?? this._codeEditorService.getActiveCodeEditor();\n\n\t\treturn activeCodeEditor?.getContainerDomNode() ?? this.mainContainer;\n\t}\n\n\tget mainContainerDimension(): dom.IDimension {\n\t\treturn dom.getClientArea(this.mainContainer);\n\t}\n\n\tget activeContainerDimension() {\n\t\treturn dom.getClientArea(this.activeContainer);\n\t}\n\n\treadonly mainContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\treadonly activeContainerOffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\tget containers(): Iterable<HTMLElement> {\n\t\treturn coalesce(this._codeEditorService.listCodeEditors().map(codeEditor => codeEditor.getContainerDomNode()));\n\t}\n\n\tgetContainer() {\n\t\treturn this.activeContainer;\n\t}\n\n\tfocus(): void {\n\t\tthis._codeEditorService.getFocusedCodeEditor()?.focus();\n\t}\n\n\tconstructor(\n\t\t@ICodeEditorService private _codeEditorService: ICodeEditorService\n\t) { }\n\n}\n\nexport class EditorScopedLayoutService extends StandaloneLayoutService {\n\toverride get mainContainer(): HTMLElement {\n\t\treturn this._container;\n\t}\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(codeEditorService);\n\t}\n}\n\nregisterSingleton(ILayoutService, StandaloneLayoutService, InstantiationType.Delayed);\n"]}