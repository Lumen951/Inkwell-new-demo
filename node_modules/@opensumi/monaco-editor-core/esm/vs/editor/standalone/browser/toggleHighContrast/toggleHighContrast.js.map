{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.ts","vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,wEAAyG;AACzG,kEAAuE;AACvE,yEAA0E;AAC1E,mEAAiF;AACjF,sEAA8H;AAE9H,MAAM,kBAAmB,SAAQ,+BAAY;IAI5C;QACC,KAAK,CAAC;YACL,EAAE,EAAE,kCAAkC;YACtC,KAAK,EAAE,yCAAqB,CAAC,kBAAkB;YAC/C,KAAK,EAAE,4BAA4B;YACnC,YAAY,EAAE,SAAS;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEM,GAAG,CAAC,QAA0B,EAAE,MAAmB;QACzD,MAAM,sBAAsB,GAAG,QAAQ,CAAC,GAAG,CAAC,yCAAuB,CAAC,CAAC;QACrE,MAAM,YAAY,GAAG,sBAAsB,CAAC,aAAa,EAAE,CAAC;QAC5D,IAAI,IAAA,sBAAc,EAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;YACvC,gDAAgD;YAChD,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAA,cAAM,EAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,2CAAkB,CAAC,CAAC,CAAC,4CAAmB,CAAC,CAAC,CAAC;YACnI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAChC,CAAC;aAAM,CAAC;YACP,sBAAsB,CAAC,QAAQ,CAAC,IAAA,cAAM,EAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,4CAAmB,CAAC,CAAC,CAAC,4CAAmB,CAAC,CAAC;YACvG,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,SAAS,CAAC;QAClD,CAAC;IACF,CAAC;CACD;AAED,IAAA,uCAAoB,EAAC,kBAAkB,CAAC,CAAC","file":"toggleHighContrast.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from '../../../browser/editorExtensions';\nimport { IStandaloneThemeService } from '../../common/standaloneTheme';\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings';\nimport { isDark, isHighContrast } from '../../../../platform/theme/common/theme';\nimport { HC_BLACK_THEME_NAME, HC_LIGHT_THEME_NAME, VS_DARK_THEME_NAME, VS_LIGHT_THEME_NAME } from '../standaloneThemeService';\n\nclass ToggleHighContrast extends EditorAction {\n\n\tprivate _originalThemeName: string | null;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.toggleHighContrast',\n\t\t\tlabel: ToggleHighContrastNLS.toggleHighContrast,\n\t\t\talias: 'Toggle High Contrast Theme',\n\t\t\tprecondition: undefined\n\t\t});\n\t\tthis._originalThemeName = null;\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst standaloneThemeService = accessor.get(IStandaloneThemeService);\n\t\tconst currentTheme = standaloneThemeService.getColorTheme();\n\t\tif (isHighContrast(currentTheme.type)) {\n\t\t\t// We must toggle back to the integrator's theme\n\t\t\tstandaloneThemeService.setTheme(this._originalThemeName || (isDark(currentTheme.type) ? VS_DARK_THEME_NAME : VS_LIGHT_THEME_NAME));\n\t\t\tthis._originalThemeName = null;\n\t\t} else {\n\t\t\tstandaloneThemeService.setTheme(isDark(currentTheme.type) ? HC_BLACK_THEME_NAME : HC_LIGHT_THEME_NAME);\n\t\t\tthis._originalThemeName = currentTheme.themeName;\n\t\t}\n\t}\n}\n\nregisterEditorAction(ToggleHighContrast);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from '../../../browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from '../../../browser/editorExtensions';\nimport { IStandaloneThemeService } from '../../common/standaloneTheme';\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings';\nimport { isDark, isHighContrast } from '../../../../platform/theme/common/theme';\nimport { HC_BLACK_THEME_NAME, HC_LIGHT_THEME_NAME, VS_DARK_THEME_NAME, VS_LIGHT_THEME_NAME } from '../standaloneThemeService';\n\nclass ToggleHighContrast extends EditorAction {\n\n\tprivate _originalThemeName: string | null;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.toggleHighContrast',\n\t\t\tlabel: ToggleHighContrastNLS.toggleHighContrast,\n\t\t\talias: 'Toggle High Contrast Theme',\n\t\t\tprecondition: undefined\n\t\t});\n\t\tthis._originalThemeName = null;\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst standaloneThemeService = accessor.get(IStandaloneThemeService);\n\t\tconst currentTheme = standaloneThemeService.getColorTheme();\n\t\tif (isHighContrast(currentTheme.type)) {\n\t\t\t// We must toggle back to the integrator's theme\n\t\t\tstandaloneThemeService.setTheme(this._originalThemeName || (isDark(currentTheme.type) ? VS_DARK_THEME_NAME : VS_LIGHT_THEME_NAME));\n\t\t\tthis._originalThemeName = null;\n\t\t} else {\n\t\t\tstandaloneThemeService.setTheme(isDark(currentTheme.type) ? HC_BLACK_THEME_NAME : HC_LIGHT_THEME_NAME);\n\t\t\tthis._originalThemeName = currentTheme.themeName;\n\t\t}\n\t}\n}\n\nregisterEditorAction(ToggleHighContrast);\n"]}