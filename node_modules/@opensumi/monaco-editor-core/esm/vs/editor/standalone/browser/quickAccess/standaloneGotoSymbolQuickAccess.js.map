{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.ts","vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;;;;;;;;;;AAEhG,8DAA4D,CAAC,gEAAgE;AAC7H,4DAA0D,CAAC,8EAA8E;AACzI,sGAAmH;AACnH,4EAAyE;AACzE,oFAAsG;AACtG,mFAAiF;AACjF,yEAAoE;AACpE,yDAAsD;AACtD,wEAAuF;AACvF,yEAAsE;AAItE,kFAAuG;AACvG,wFAA6F;AAC7F,gFAAqF;AAE9E,IAAM,uCAAuC,GAA7C,MAAM,uCAAwC,SAAQ,6DAAqC;IAIjG,YACqB,aAAkD,EAC5C,uBAAiD,EACrD,mBAAyC;QAE/D,KAAK,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,CAAC;QAJf,kBAAa,GAAb,aAAa,CAAoB;QAHpD,uCAAkC,GAAG,aAAK,CAAC,IAAI,CAAC;IAQnE,CAAC;IAED,IAAc,uBAAuB;;QACpC,OAAO,MAAA,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,mCAAI,SAAS,CAAC;IAC/D,CAAC;CACD,CAAA;AAfY,0FAAuC;kDAAvC,uCAAuC;IAKjD,WAAA,sCAAkB,CAAA;IAClB,WAAA,2CAAwB,CAAA;IACxB,WAAA,mCAAoB,CAAA;GAPV,uCAAuC,CAenD;AAED,MAAa,gBAAiB,SAAQ,+BAAY;IAIjD;QACC,KAAK,CAAC;YACL,EAAE,EAAE,gBAAgB,CAAC,EAAE;YACvB,KAAK,EAAE,mCAAe,CAAC,uBAAuB;YAC9C,KAAK,EAAE,iBAAiB;YACxB,YAAY,EAAE,qCAAiB,CAAC,yBAAyB;YACzD,MAAM,EAAE;gBACP,MAAM,EAAE,qCAAiB,CAAC,KAAK;gBAC/B,OAAO,EAAE,mDAA6B,wBAAe;gBACrD,MAAM,0CAAgC;aACtC;YACD,eAAe,EAAE;gBAChB,KAAK,EAAE,YAAY;gBACnB,KAAK,EAAE,CAAC;aACR;SACD,CAAC,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,QAA0B;QAC7B,QAAQ,CAAC,GAAG,CAAC,+BAAkB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,6DAAqC,CAAC,MAAM,EAAE,EAAE,cAAc,EAAE,2BAAc,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1I,CAAC;;AAxBF,4CAyBC;AAvBgB,mBAAE,GAAG,4BAA4B,CAAC;AAyBnD,IAAA,uCAAoB,EAAC,gBAAgB,CAAC,CAAC;AAEvC,mBAAQ,CAAC,EAAE,CAAuB,wBAAU,CAAC,WAAW,CAAC,CAAC,2BAA2B,CAAC;IACrF,IAAI,EAAE,uCAAuC;IAC7C,MAAM,EAAE,6DAAqC,CAAC,MAAM;IACpD,WAAW,EAAE;QACZ,EAAE,WAAW,EAAE,mCAAe,CAAC,uBAAuB,EAAE,MAAM,EAAE,6DAAqC,CAAC,MAAM,EAAE,SAAS,EAAE,gBAAgB,CAAC,EAAE,EAAE;QAC9I,EAAE,WAAW,EAAE,mCAAe,CAAC,iCAAiC,EAAE,MAAM,EAAE,6DAAqC,CAAC,kBAAkB,EAAE;KACpI;CACD,CAAC,CAAC","file":"standaloneGotoSymbolQuickAccess.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../../../../base/browser/ui/codicons/codiconStyles'; // The codicon symbol styles are defined here and must be loaded\nimport '../../../contrib/symbolIcons/browser/symbolIcons'; // The codicon symbol colors are defined here and must be loaded to get colors\nimport { AbstractGotoSymbolQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoSymbolQuickAccess';\nimport { Registry } from '../../../../platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService';\nimport { QuickOutlineNLS } from '../../../common/standaloneStrings';\nimport { Event } from '../../../../base/common/event';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation';\nimport { IQuickInputService, ItemActivation } from '../../../../platform/quickinput/common/quickInput';\nimport { IOutlineModelService } from '../../../contrib/documentSymbols/browser/outlineModel';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\n\nexport class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(\n\t\t@ICodeEditorService private readonly editorService: ICodeEditorService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService outlineModelService: IOutlineModelService,\n\t) {\n\t\tsuper(languageFeaturesService, outlineModelService);\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoSymbolAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.quickOutline';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoSymbolAction.ID,\n\t\t\tlabel: QuickOutlineNLS.quickOutlineActionLabel,\n\t\t\talias: 'Go to Symbol...',\n\t\t\tprecondition: EditorContextKeys.hasDocumentSymbolProvider,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX, { itemActivation: ItemActivation.NONE });\n\t}\n}\n\nregisterEditorAction(GotoSymbolAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoSymbolQuickAccessProvider,\n\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\n\thelpEntries: [\n\t\t{ description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, commandId: GotoSymbolAction.ID },\n\t\t{ description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY }\n\t]\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../../../../base/browser/ui/codicons/codiconStyles'; // The codicon symbol styles are defined here and must be loaded\nimport '../../../contrib/symbolIcons/browser/symbolIcons'; // The codicon symbol colors are defined here and must be loaded to get colors\nimport { AbstractGotoSymbolQuickAccessProvider } from '../../../contrib/quickAccess/browser/gotoSymbolQuickAccess';\nimport { Registry } from '../../../../platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService';\nimport { QuickOutlineNLS } from '../../../common/standaloneStrings';\nimport { Event } from '../../../../base/common/event';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions';\nimport { EditorContextKeys } from '../../../common/editorContextKeys';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation';\nimport { IQuickInputService, ItemActivation } from '../../../../platform/quickinput/common/quickInput';\nimport { IOutlineModelService } from '../../../contrib/documentSymbols/browser/outlineModel';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures';\n\nexport class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(\n\t\t@ICodeEditorService private readonly editorService: ICodeEditorService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService outlineModelService: IOutlineModelService,\n\t) {\n\t\tsuper(languageFeaturesService, outlineModelService);\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoSymbolAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.quickOutline';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoSymbolAction.ID,\n\t\t\tlabel: QuickOutlineNLS.quickOutlineActionLabel,\n\t\t\talias: 'Go to Symbol...',\n\t\t\tprecondition: EditorContextKeys.hasDocumentSymbolProvider,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX, { itemActivation: ItemActivation.NONE });\n\t}\n}\n\nregisterEditorAction(GotoSymbolAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoSymbolQuickAccessProvider,\n\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\n\thelpEntries: [\n\t\t{ description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, commandId: GotoSymbolAction.ID },\n\t\t{ description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY }\n\t]\n});\n"]}