{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/standalone/browser/standaloneServices.ts","vs/editor/standalone/browser/standaloneServices.ts"],"names":[],"mappings":"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","file":"standaloneServices.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../../common/languages/languageConfigurationRegistry';\nimport './standaloneCodeEditorService';\nimport './standaloneLayoutService';\nimport '../../../platform/undoRedo/common/undoRedoService';\nimport '../../common/services/languageFeatureDebounce';\nimport '../../common/services/semanticTokensStylingService';\nimport '../../common/services/languageFeaturesService';\nimport '../../browser/services/hoverService';\n\nimport * as strings from '../../../base/common/strings';\nimport * as dom from '../../../base/browser/dom';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { ResolvedKeybinding, KeyCodeChord, Keybinding, decodeKeybinding } from '../../../base/common/keybindings';\nimport { IDisposable, IReference, ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform';\nimport Severity from '../../../base/common/severity';\nimport { URI } from '../../../base/common/uri';\nimport { IBulkEditOptions, IBulkEditResult, IBulkEditService, ResourceEdit, ResourceTextEdit } from '../../browser/services/bulkEditService';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema';\nimport { EditOperation, ISingleEditOperation } from '../../common/core/editOperation';\nimport { IPosition, Position as Pos } from '../../common/core/position';\nimport { Range } from '../../common/core/range';\nimport { ITextModel, ITextSnapshot } from '../../common/model';\nimport { IModelService } from '../../common/services/model';\nimport { IResolvedTextEditorModel, ITextModelContentProvider, ITextModelService } from '../../common/services/resolverService';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService, ITextResourceConfigurationChangeEvent } from '../../common/services/textResourceConfiguration';\nimport { CommandsRegistry, ICommandEvent, ICommandHandler, ICommandService } from '../../../platform/commands/common/commands';\nimport { IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationModel, IConfigurationValue, ConfigurationTarget } from '../../../platform/configuration/common/configuration';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels';\nimport { IContextKeyService, ContextKeyExpression } from '../../../platform/contextkey/common/contextkey';\nimport { IConfirmation, IConfirmationResult, IDialogService, IInputResult, IPrompt, IPromptResult, IPromptWithCustomCancel, IPromptResultWithCancel, IPromptWithDefaultCancel, IPromptBaseButton } from '../../../platform/dialogs/common/dialogs';\nimport { createDecorator, IInstantiationService, ServiceIdentifier } from '../../../platform/instantiation/common/instantiation';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService';\nimport { IKeybindingService, IKeyboardEvent, KeybindingsSchemaContribution } from '../../../platform/keybinding/common/keybinding';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver';\nimport { IKeybindingItem, KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { ILabelService, ResourceLabelFormatter, IFormatterChangeEvent, Verbosity } from '../../../platform/label/common/label';\nimport { INotification, INotificationHandle, INotificationService, IPromptChoice, IPromptOptions, NoOpNotification, IStatusMessageOptions, INotificationSource, INotificationSourceFilter, NotificationsFilter } from '../../../platform/notification/common/notification';\nimport { IProgressRunner, IEditorProgressService, IProgressService, IProgress, IProgressCompositeOptions, IProgressDialogOptions, IProgressNotificationOptions, IProgressOptions, IProgressStep, IProgressWindowOptions } from '../../../platform/progress/common/progress';\nimport { ITelemetryService, TelemetryLevel } from '../../../platform/telemetry/common/telemetry';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, IWorkspace, IWorkspaceContextService, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, IWorkspaceFoldersWillChangeEvent, WorkbenchState, WorkspaceFolder, STANDALONE_EDITOR_WORKSPACE_ID } from '../../../platform/workspace/common/workspace';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings';\nimport { basename } from '../../../base/common/resources';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService';\nimport { ConsoleLogger, ILogService } from '../../../platform/log/common/log';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustTransitionParticipant, IWorkspaceTrustUriInfo } from '../../../platform/workspace/common/workspaceTrust';\nimport { EditorOption } from '../../common/config/editorOptions';\nimport { ICodeEditor, IDiffEditor } from '../../browser/editorBrowser';\nimport { IContextMenuService, IContextViewDelegate, IContextViewService } from '../../../platform/contextview/browser/contextView';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService';\nimport { LanguageService } from '../../common/services/languageService';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService';\nimport { getSingletonServiceDescriptors, InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions';\nimport { OpenerService } from '../../browser/services/openerService';\nimport { IEditorWorkerService } from '../../common/services/editorWorker';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService';\nimport { ILanguageService } from '../../common/languages/language';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations';\nimport { ModelService } from '../../common/services/modelService';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService';\nimport { StandaloneThemeService } from './standaloneThemeService';\nimport { IStandaloneThemeService } from '../common/standaloneTheme';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility';\nimport { IMenuService } from '../../../platform/actions/common/actions';\nimport { MenuService } from '../../../platform/actions/common/menuService';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection';\nimport { IListService, ListService } from '../../../platform/list/browser/listService';\nimport { IMarkerService } from '../../../platform/markers/common/markers';\nimport { MarkerService } from '../../../platform/markers/common/markerService';\nimport { IOpenerService } from '../../../platform/opener/common/opener';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage';\nimport { DefaultConfiguration } from '../../../platform/configuration/common/configurations';\nimport { WorkspaceEdit } from '../../common/languages';\nimport { AccessibilitySignal, IAccessibilitySignalService, Sound } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService';\nimport { LogService } from '../../../platform/log/common/logService';\nimport { getEditorFeatures } from '../../common/editorFeatures';\nimport { onUnexpectedError } from '../../../base/common/errors';\nimport { ExtensionKind, IEnvironmentService, IExtensionHostDebugParams } from '../../../platform/environment/common/environment';\nimport { mainWindow } from '../../../base/browser/window';\n\nclass SimpleModel implements IResolvedTextEditorModel {\n\n\tprivate readonly model: ITextModel;\n\tprivate readonly _onWillDispose: Emitter<void>;\n\n\tconstructor(model: ITextModel) {\n\t\tthis.model = model;\n\t\tthis._onWillDispose = new Emitter<void>();\n\t}\n\n\tpublic get onWillDispose(): Event<void> {\n\t\treturn this._onWillDispose.event;\n\t}\n\n\tpublic resolve(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic get textEditorModel(): ITextModel {\n\t\treturn this.model;\n\t}\n\n\tpublic createSnapshot(): ITextSnapshot {\n\t\treturn this.model.createSnapshot();\n\t}\n\n\tpublic isReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tprivate disposed = false;\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\n\t\tthis._onWillDispose.fire();\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\tpublic isResolved(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getLanguageId(): string | undefined {\n\t\treturn this.model.getLanguageId();\n\t}\n}\n\nclass StandaloneTextModelService implements ITextModelService {\n\tpublic _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService\n\t) { }\n\n\tpublic createModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst model = this.modelService.getModel(resource);\n\n\t\tif (!model) {\n\t\t\treturn Promise.reject(new Error(`Model not found`));\n\t\t}\n\n\t\treturn Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n\t}\n\n\tpublic registerTextModelContentProvider(scheme: string, provider: ITextModelContentProvider): IDisposable {\n\t\treturn {\n\t\t\tdispose: function () { /* no op */ }\n\t\t};\n\t}\n\n\tpublic canHandleResource(resource: URI): boolean {\n\t\treturn false;\n\t}\n}\n\nclass StandaloneEditorProgressService implements IEditorProgressService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static NULL_PROGRESS_RUNNER: IProgressRunner = {\n\t\tdone: () => { },\n\t\ttotal: () => { },\n\t\tworked: () => { }\n\t};\n\n\tshow(infinite: true, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\tshow(): IProgressRunner {\n\t\treturn StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n\t}\n\n\tasync showWhile(promise: Promise<any>, delay?: number): Promise<void> {\n\t\tawait promise;\n\t}\n}\n\nclass StandaloneProgressService implements IProgressService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\twithProgress<R>(_options: IProgressOptions | IProgressDialogOptions | IProgressNotificationOptions | IProgressWindowOptions | IProgressCompositeOptions, task: (progress: IProgress<IProgressStep>) => Promise<R>, onDidCancel?: ((choice?: number | undefined) => void) | undefined): Promise<R> {\n\t\treturn task({\n\t\t\treport: () => { },\n\t\t});\n\t}\n}\n\nclass StandaloneEnvironmentService implements IEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly stateResource: URI = URI.from({ scheme: 'monaco', authority: 'stateResource' });\n\treadonly userRoamingDataHome: URI = URI.from({ scheme: 'monaco', authority: 'userRoamingDataHome' });\n\treadonly keyboardLayoutResource: URI = URI.from({ scheme: 'monaco', authority: 'keyboardLayoutResource' });\n\treadonly argvResource: URI = URI.from({ scheme: 'monaco', authority: 'argvResource' });\n\treadonly untitledWorkspacesHome: URI = URI.from({ scheme: 'monaco', authority: 'untitledWorkspacesHome' });\n\treadonly workspaceStorageHome: URI = URI.from({ scheme: 'monaco', authority: 'workspaceStorageHome' });\n\treadonly localHistoryHome: URI = URI.from({ scheme: 'monaco', authority: 'localHistoryHome' });\n\treadonly cacheHome: URI = URI.from({ scheme: 'monaco', authority: 'cacheHome' });\n\treadonly userDataSyncHome: URI = URI.from({ scheme: 'monaco', authority: 'userDataSyncHome' });\n\treadonly sync: 'on' | 'off' | undefined = undefined;\n\treadonly continueOn?: string | undefined = undefined;\n\treadonly editSessionId?: string | undefined = undefined;\n\treadonly debugExtensionHost: IExtensionHostDebugParams = { port: null, break: false };\n\treadonly isExtensionDevelopment: boolean = false;\n\treadonly disableExtensions: boolean | string[] = false;\n\treadonly enableExtensions?: readonly string[] | undefined = undefined;\n\treadonly extensionDevelopmentLocationURI?: URI[] | undefined = undefined;\n\treadonly extensionDevelopmentKind?: ExtensionKind[] | undefined = undefined;\n\treadonly extensionTestsLocationURI?: URI | undefined = undefined;\n\treadonly logsHome: URI = URI.from({ scheme: 'monaco', authority: 'logsHome' });\n\treadonly logLevel?: string | undefined = undefined;\n\treadonly extensionLogLevel?: [string, string][] | undefined = undefined;\n\treadonly verbose: boolean = false;\n\treadonly isBuilt: boolean = false;\n\treadonly disableTelemetry: boolean = false;\n\treadonly serviceMachineIdResource: URI = URI.from({ scheme: 'monaco', authority: 'serviceMachineIdResource' });\n\treadonly policyFile?: URI | undefined = undefined;\n}\n\nclass StandaloneDialogService implements IDialogService {\n\n\t_serviceBrand: undefined;\n\n\treadonly onWillShowDialog = Event.None;\n\treadonly onDidShowDialog = Event.None;\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tconst confirmed = this.doConfirm(confirmation.message, confirmation.detail);\n\n\t\treturn {\n\t\t\tconfirmed,\n\t\t\tcheckboxChecked: false // unsupported\n\t\t} as IConfirmationResult;\n\t}\n\n\tprivate doConfirm(message: string, detail?: string): boolean {\n\t\tlet messageText = message;\n\t\tif (detail) {\n\t\t\tmessageText = messageText + '\\n\\n' + detail;\n\t\t}\n\n\t\treturn mainWindow.confirm(messageText);\n\t}\n\n\tprompt<T>(prompt: IPromptWithCustomCancel<T>): Promise<IPromptResultWithCancel<T>>;\n\tprompt<T>(prompt: IPrompt<T>): Promise<IPromptResult<T>>;\n\tprompt<T>(prompt: IPromptWithDefaultCancel<T>): Promise<IPromptResult<T>>;\n\tasync prompt<T>(prompt: IPrompt<T> | IPromptWithCustomCancel<T>): Promise<IPromptResult<T> | IPromptResultWithCancel<T>> {\n\t\tlet result: T | undefined = undefined;\n\t\tconst confirmed = this.doConfirm(prompt.message, prompt.detail);\n\t\tif (confirmed) {\n\t\t\tconst promptButtons: IPromptBaseButton<T>[] = [...(prompt.buttons ?? [])];\n\t\t\tif (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n\t\t\t\tpromptButtons.push(prompt.cancelButton);\n\t\t\t}\n\n\t\t\tresult = await promptButtons[0]?.run({ checkboxChecked: false });\n\t\t}\n\n\t\treturn { result };\n\t}\n\n\tasync info(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Info, message, detail });\n\t}\n\n\tasync warn(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Warning, message, detail });\n\t}\n\n\tasync error(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Error, message, detail });\n\t}\n\n\tinput(): Promise<IInputResult> {\n\t\treturn Promise.resolve({ confirmed: false }); // unsupported\n\t}\n\n\tabout(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class StandaloneNotificationService implements INotificationService {\n\n\treadonly onDidAddNotification: Event<INotification> = Event.None;\n\n\treadonly onDidRemoveNotification: Event<INotification> = Event.None;\n\n\treadonly onDidChangeFilter: Event<void> = Event.None;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly NO_OP: INotificationHandle = new NoOpNotification();\n\n\tpublic info(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Info, message });\n\t}\n\n\tpublic warn(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Warning, message });\n\t}\n\n\tpublic error(error: string | Error): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Error, message: error });\n\t}\n\n\tpublic notify(notification: INotification): INotificationHandle {\n\t\tswitch (notification.severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(notification.message);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(notification.message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(notification.message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn StandaloneNotificationService.NO_OP;\n\t}\n\n\tpublic prompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle {\n\t\treturn StandaloneNotificationService.NO_OP;\n\t}\n\n\tpublic status(message: string | Error, options?: IStatusMessageOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\n\tpublic setFilter(filter: NotificationsFilter | INotificationSourceFilter): void { }\n\n\tpublic getFilter(source?: INotificationSource): NotificationsFilter {\n\t\treturn NotificationsFilter.OFF;\n\t}\n\n\tpublic getFilters(): INotificationSourceFilter[] {\n\t\treturn [];\n\t}\n\n\tpublic removeFilter(sourceId: string): void { }\n}\n\nexport class StandaloneCommandService implements ICommandService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _instantiationService: IInstantiationService;\n\n\tprivate readonly _onWillExecuteCommand = new Emitter<ICommandEvent>();\n\tprivate readonly _onDidExecuteCommand = new Emitter<ICommandEvent>();\n\tpublic readonly onWillExecuteCommand: Event<ICommandEvent> = this._onWillExecuteCommand.event;\n\tpublic readonly onDidExecuteCommand: Event<ICommandEvent> = this._onDidExecuteCommand.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tthis._instantiationService = instantiationService;\n\t}\n\n\tpublic executeCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tconst command = CommandsRegistry.getCommand(id);\n\t\tif (!command) {\n\t\t\treturn Promise.reject(new Error(`command '${id}' not found`));\n\t\t}\n\n\t\ttry {\n\t\t\tthis._onWillExecuteCommand.fire({ commandId: id, args });\n\t\t\tconst result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]) as T;\n\n\t\t\tthis._onDidExecuteCommand.fire({ commandId: id, args });\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport interface IKeybindingRule {\n\tkeybinding: number;\n\tcommand?: string | null;\n\tcommandArgs?: any;\n\twhen?: ContextKeyExpression | null;\n}\n\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n\tprivate _cachedResolver: KeybindingResolver | null;\n\tprivate _dynamicKeybindings: IKeybindingItem[];\n\tprivate readonly _domNodeListeners: DomNodeListeners[];\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ILogService logService: ILogService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper(contextKeyService, commandService, telemetryService, notificationService, logService);\n\n\t\tthis._cachedResolver = null;\n\t\tthis._dynamicKeybindings = [];\n\t\tthis._domNodeListeners = [];\n\n\t\tconst addContainer = (domNode: HTMLElement) => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\t// for standard keybindings\n\t\t\tdisposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\t\tconst shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\t\t\t\tif (shouldPreventDefault) {\n\t\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\t\tkeyEvent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// for single modifier chord keybindings (e.g. shift shift)\n\t\t\tdisposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\t\tconst shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\t\t\t\tif (shouldPreventDefault) {\n\t\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n\t\t};\n\t\tconst removeContainer = (domNode: HTMLElement) => {\n\t\t\tfor (let i = 0; i < this._domNodeListeners.length; i++) {\n\t\t\t\tconst domNodeListeners = this._domNodeListeners[i];\n\t\t\t\tif (domNodeListeners.domNode === domNode) {\n\t\t\t\t\tthis._domNodeListeners.splice(i, 1);\n\t\t\t\t\tdomNodeListeners.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst addCodeEditor = (codeEditor: ICodeEditor) => {\n\t\t\tif (codeEditor.getOption(EditorOption.inDiffEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\taddContainer(codeEditor.getContainerDomNode());\n\t\t};\n\t\tconst removeCodeEditor = (codeEditor: ICodeEditor) => {\n\t\t\tif (codeEditor.getOption(EditorOption.inDiffEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tremoveContainer(codeEditor.getContainerDomNode());\n\t\t};\n\t\tthis._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n\t\tthis._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n\t\tcodeEditorService.listCodeEditors().forEach(addCodeEditor);\n\n\t\tconst addDiffEditor = (diffEditor: IDiffEditor) => {\n\t\t\taddContainer(diffEditor.getContainerDomNode());\n\t\t};\n\t\tconst removeDiffEditor = (diffEditor: IDiffEditor) => {\n\t\t\tremoveContainer(diffEditor.getContainerDomNode());\n\t\t};\n\t\tthis._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n\t\tthis._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n\t\tcodeEditorService.listDiffEditors().forEach(addDiffEditor);\n\t}\n\n\tpublic addDynamicKeybinding(command: string, keybinding: number, handler: ICommandHandler, when: ContextKeyExpression | undefined): IDisposable {\n\t\treturn combinedDisposable(\n\t\t\tCommandsRegistry.registerCommand(command, handler),\n\t\t\tthis.addDynamicKeybindings([{\n\t\t\t\tkeybinding,\n\t\t\t\tcommand,\n\t\t\t\twhen\n\t\t\t}])\n\t\t);\n\t}\n\n\tpublic addDynamicKeybindings(rules: IKeybindingRule[]): IDisposable {\n\t\tconst entries: IKeybindingItem[] = rules.map((rule) => {\n\t\t\tconst keybinding = decodeKeybinding(rule.keybinding, OS);\n\t\t\treturn {\n\t\t\t\tkeybinding,\n\t\t\t\tcommand: rule.command ?? null,\n\t\t\t\tcommandArgs: rule.commandArgs,\n\t\t\t\twhen: rule.when,\n\t\t\t\tweight1: 1000,\n\t\t\t\tweight2: 0,\n\t\t\t\textensionId: null,\n\t\t\t\tisBuiltinExtension: false\n\t\t\t};\n\t\t});\n\t\tthis._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n\n\t\tthis.updateResolver();\n\n\t\treturn toDisposable(() => {\n\t\t\t// Search the first entry and remove them all since they will be contiguous\n\t\t\tfor (let i = 0; i < this._dynamicKeybindings.length; i++) {\n\t\t\t\tif (this._dynamicKeybindings[i] === entries[0]) {\n\t\t\t\t\tthis._dynamicKeybindings.splice(i, entries.length);\n\t\t\t\t\tthis.updateResolver();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateResolver(): void {\n\t\tthis._cachedResolver = null;\n\t\tthis._onDidUpdateKeybindings.fire();\n\t}\n\n\tprotected _getResolver(): KeybindingResolver {\n\t\tif (!this._cachedResolver) {\n\t\t\tconst defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\t\t\tconst overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n\t\t\tthis._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n\t\t}\n\t\treturn this._cachedResolver;\n\t}\n\n\tprotected _documentHasFocus(): boolean {\n\t\treturn mainWindow.document.hasFocus();\n\t}\n\n\tprivate _toNormalizedKeybindingItems(items: IKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tconst result: ResolvedKeybindingItem[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst keybinding = item.keybinding;\n\n\t\t\tif (!keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t} else {\n\t\t\t\tconst resolvedKeybindings = USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n\t\t\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tconst chord = new KeyCodeChord(\n\t\t\tkeyboardEvent.ctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\tkeyboardEvent.altKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t);\n\t\treturn new USLayoutResolvedKeybinding([chord], OS);\n\t}\n\n\tpublic resolveUserBinding(userBinding: string): ResolvedKeybinding[] {\n\t\treturn [];\n\t}\n\n\tpublic _dumpDebugInfo(): string {\n\t\treturn '';\n\t}\n\n\tpublic _dumpDebugInfoJSON(): string {\n\t\treturn '';\n\t}\n\n\tpublic registerSchemaContribution(contribution: KeybindingsSchemaContribution): void {\n\t\t// noop\n\t}\n\n\t/**\n\t * not yet supported\n\t */\n\tpublic override enableKeybindingHoldMode(commandId: string): Promise<void> | undefined {\n\t\treturn undefined;\n\t}\n}\n\nclass DomNodeListeners extends Disposable {\n\tconstructor(\n\t\tpublic readonly domNode: HTMLElement,\n\t\tdisposables: DisposableStore\n\t) {\n\t\tsuper();\n\t\tthis._register(disposables);\n\t}\n}\n\nfunction isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport class StandaloneConfigurationService implements IConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<IConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly _configuration: Configuration;\n\n\tconstructor() {\n\t\tconst defaultConfiguration = new DefaultConfiguration();\n\t\tthis._configuration = new Configuration(defaultConfiguration.reload(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel());\n\t\tdefaultConfiguration.dispose();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this._configuration.getValue(section, overrides, undefined);\n\t}\n\n\tpublic updateValues(values: [string, any][]): Promise<void> {\n\t\tconst previous = { data: this._configuration.toData() };\n\n\t\tconst changedKeys: string[] = [];\n\n\t\tfor (const entry of values) {\n\t\t\tconst [key, value] = entry;\n\t\t\tif (this.getValue(key) === value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._configuration.updateValue(key, value);\n\t\t\tchangedKeys.push(key);\n\t\t}\n\n\t\tif (changedKeys.length > 0) {\n\t\t\tconst configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n\t\t\tconfigurationChangeEvent.source = ConfigurationTarget.MEMORY;\n\t\t\tthis._onDidChangeConfiguration.fire(configurationChangeEvent);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic updateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn this.updateValues([[key, value]]);\n\t}\n\n\tpublic inspect<C>(key: string, options: IConfigurationOverrides = {}): IConfigurationValue<C> {\n\t\treturn this._configuration.inspect<C>(key, options, undefined);\n\t}\n\n\tpublic keys() {\n\t\treturn this._configuration.keys(undefined);\n\t}\n\n\tpublic reloadConfiguration(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic getConfigurationData(): IConfigurationData | null {\n\t\tconst emptyModel: IConfigurationModel = {\n\t\t\tcontents: {},\n\t\t\tkeys: [],\n\t\t\toverrides: []\n\t\t};\n\t\treturn {\n\t\t\tdefaults: emptyModel,\n\t\t\tpolicy: emptyModel,\n\t\t\tapplication: emptyModel,\n\t\t\tuser: emptyModel,\n\t\t\tworkspace: emptyModel,\n\t\t\tfolders: []\n\t\t};\n\t}\n}\n\nclass StandaloneResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<ITextResourceConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: StandaloneConfigurationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tthis._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource: URI, configuration: string) => e.affectsConfiguration(configuration) });\n\t\t});\n\t}\n\n\tgetValue<T>(resource: URI, section?: string): T;\n\tgetValue<T>(resource: URI, position?: IPosition, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, arg2?: any, arg3?: any) {\n\t\tconst position: IPosition | null = Pos.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\tconst language = resource ? this.getLanguage(resource, position) : undefined;\n\t\tif (typeof section === 'undefined') {\n\t\t\treturn this.configurationService.getValue<T>({\n\t\t\t\tresource,\n\t\t\t\toverrideIdentifier: language\n\t\t\t});\n\t\t}\n\t\treturn this.configurationService.getValue<T>(section, {\n\t\t\tresource,\n\t\t\toverrideIdentifier: language\n\t\t});\n\t}\n\n\tinspect<T>(resource: URI | undefined, position: IPosition | null, section: string): IConfigurationValue<Readonly<T>> {\n\t\tconst language = resource ? this.getLanguage(resource, position) : undefined;\n\t\treturn this.configurationService.inspect<T>(section, { resource, overrideIdentifier: language });\n\t}\n\n\tprivate getLanguage(resource: URI, position: IPosition | null): string | null {\n\t\tconst model = this.modelService.getModel(resource);\n\t\tif (model) {\n\t\t\treturn position ? model.getLanguageIdAtPosition(position.lineNumber, position.column) : model.getLanguageId();\n\t\t}\n\t\treturn this.languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value, { resource }, configurationTarget);\n\t}\n}\n\nclass StandaloneResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n\nclass StandaloneTelemetryService implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly telemetryLevel = TelemetryLevel.NONE;\n\treadonly sessionId = 'someValue.sessionId';\n\treadonly machineId = 'someValue.machineId';\n\treadonly sqmId = 'someValue.sqmId';\n\treadonly firstSessionDate = 'someValue.firstSessionDate';\n\treadonly sendErrorTelemetry = false;\n\tsetEnabled(): void { }\n\tsetExperimentProperty(): void { }\n\tpublicLog() { }\n\tpublicLog2() { }\n\tpublicLogError() { }\n\tpublicLogError2() { }\n}\n\nclass StandaloneWorkspaceContextService implements IWorkspaceContextService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly SCHEME = 'inmemory';\n\n\tprivate readonly _onDidChangeWorkspaceName = new Emitter<void>();\n\tpublic readonly onDidChangeWorkspaceName: Event<void> = this._onDidChangeWorkspaceName.event;\n\n\tprivate readonly _onWillChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersWillChangeEvent>();\n\tpublic readonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent> = this._onWillChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersChangeEvent>();\n\tpublic readonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent> = this._onDidChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkbenchState = new Emitter<WorkbenchState>();\n\tpublic readonly onDidChangeWorkbenchState: Event<WorkbenchState> = this._onDidChangeWorkbenchState.event;\n\n\tprivate readonly workspace: IWorkspace;\n\n\tconstructor() {\n\t\tconst resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n\t\tthis.workspace = { id: STANDALONE_EDITOR_WORKSPACE_ID, folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n\t}\n\n\tgetCompleteWorkspace(): Promise<IWorkspace> {\n\t\treturn Promise.resolve(this.getWorkspace());\n\t}\n\n\tpublic getWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getWorkbenchState(): WorkbenchState {\n\t\tif (this.workspace) {\n\t\t\tif (this.workspace.configuration) {\n\t\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t\t}\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tpublic getWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\treturn resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME;\n\t}\n\n\tpublic isCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\treturn true;\n\t}\n}\n\nexport function updateConfigurationService(configurationService: IConfigurationService, source: any, isDiffEditor: boolean): void {\n\tif (!source) {\n\t\treturn;\n\t}\n\tif (!(configurationService instanceof StandaloneConfigurationService)) {\n\t\treturn;\n\t}\n\tconst toUpdate: [string, any][] = [];\n\tObject.keys(source).forEach((key) => {\n\t\tif (isEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`editor.${key}`, source[key]]);\n\t\t}\n\t\tif (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`diffEditor.${key}`, source[key]]);\n\t\t}\n\t});\n\tif (toUpdate.length > 0) {\n\t\tconfigurationService.updateValues(toUpdate);\n\t}\n}\n\nclass StandaloneBulkEditService implements IBulkEditService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService\n\t) {\n\t\t//\n\t}\n\n\thasPreviewHandler(): false {\n\t\treturn false;\n\t}\n\n\tsetPreviewHandler(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tasync apply(editsIn: ResourceEdit[] | WorkspaceEdit, _options?: IBulkEditOptions): Promise<IBulkEditResult> {\n\t\tconst edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n\t\tconst textEdits = new Map<ITextModel, ISingleEditOperation[]>();\n\n\t\tfor (const edit of edits) {\n\t\t\tif (!(edit instanceof ResourceTextEdit)) {\n\t\t\t\tthrow new Error('bad edit - only text edits are supported');\n\t\t\t}\n\t\t\tconst model = this._modelService.getModel(edit.resource);\n\t\t\tif (!model) {\n\t\t\t\tthrow new Error('bad edit - model not found');\n\t\t\t}\n\t\t\tif (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n\t\t\t\tthrow new Error('bad state - model changed in the meantime');\n\t\t\t}\n\t\t\tlet array = textEdits.get(model);\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\ttextEdits.set(model, array);\n\t\t\t}\n\t\t\tarray.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n\t\t}\n\n\n\t\tlet totalEdits = 0;\n\t\tlet totalFiles = 0;\n\t\tfor (const [model, edits] of textEdits) {\n\t\t\tmodel.pushStackElement();\n\t\t\tmodel.pushEditOperations([], edits, () => []);\n\t\t\tmodel.pushStackElement();\n\t\t\ttotalFiles += 1;\n\t\t\ttotalEdits += edits.length;\n\t\t}\n\n\t\treturn {\n\t\t\tariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles),\n\t\t\tisApplied: totalEdits > 0\n\t\t};\n\t}\n}\n\nclass StandaloneUriLabelService implements ILabelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic readonly onDidChangeFormatters: Event<IFormatterChangeEvent> = Event.None;\n\n\tpublic getUriLabel(resource: URI, options?: { relative?: boolean; forceNoTildify?: boolean }): string {\n\t\tif (resource.scheme === 'file') {\n\t\t\treturn resource.fsPath;\n\t\t}\n\t\treturn resource.path;\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\treturn basename(resource);\n\t}\n\n\tpublic getWorkspaceLabel(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI | IWorkspace, options?: { verbose: Verbosity }): string {\n\t\treturn '';\n\t}\n\n\tpublic getSeparator(scheme: string, authority?: string): '/' | '\\\\' {\n\t\treturn '/';\n\t}\n\n\tpublic registerFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic registerCachedFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\treturn this.registerFormatter(formatter);\n\t}\n\n\tpublic getHostLabel(): string {\n\t\treturn '';\n\t}\n\n\tpublic getHostTooltip(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n\n\nclass StandaloneContextViewService extends ContextViewService {\n\n\tconstructor(\n\t\t@ILayoutService layoutService: ILayoutService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(layoutService);\n\t}\n\n\toverride showContextView(delegate: IContextViewDelegate, container?: HTMLElement, shadowRoot?: boolean): IDisposable {\n\t\tif (!container) {\n\t\t\tconst codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n\t\t\tif (codeEditor) {\n\t\t\t\tcontainer = codeEditor.getContainerDomNode();\n\t\t\t}\n\t\t}\n\t\treturn super.showContextView(delegate, container, shadowRoot);\n\t}\n}\n\nclass StandaloneWorkspaceTrustManagementService implements IWorkspaceTrustManagementService {\n\t_serviceBrand: undefined;\n\n\tprivate _neverEmitter = new Emitter<never>();\n\tpublic readonly onDidChangeTrust: Event<boolean> = this._neverEmitter.event;\n\tonDidChangeTrustedFolders: Event<void> = this._neverEmitter.event;\n\tpublic readonly workspaceResolved = Promise.resolve();\n\tpublic readonly workspaceTrustInitialized = Promise.resolve();\n\tpublic readonly acceptsOutOfWorkspaceFiles = true;\n\n\tisWorkspaceTrusted(): boolean {\n\t\treturn true;\n\t}\n\tisWorkspaceTrustForced(): boolean {\n\t\treturn false;\n\t}\n\tcanSetParentFolderTrust(): boolean {\n\t\treturn false;\n\t}\n\tasync setParentFolderTrust(trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tcanSetWorkspaceTrust(): boolean {\n\t\treturn false;\n\t}\n\tasync setWorkspaceTrust(trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo> {\n\t\tthrow new Error('Method not supported.');\n\t}\n\tasync setUrisTrust(uri: URI[], trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tgetTrustedUris(): URI[] {\n\t\treturn [];\n\t}\n\tasync setTrustedUris(uris: URI[]): Promise<void> {\n\t\t// noop\n\t}\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable {\n\t\tthrow new Error('Method not supported.');\n\t}\n}\n\nclass StandaloneLanguageService extends LanguageService {\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nclass StandaloneLogService extends LogService {\n\tconstructor() {\n\t\tsuper(new ConsoleLogger());\n\t}\n}\n\nclass StandaloneContextMenuService extends ContextMenuService {\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService);\n\t\tthis.configure({ blockMouse: false }); // we do not want that in the standalone editor\n\t}\n}\n\nclass StandaloneAccessbilitySignalService implements IAccessibilitySignalService {\n\t_serviceBrand: undefined;\n\tasync playSignal(cue: AccessibilitySignal, options: {}): Promise<void> {\n\t}\n\n\tasync playAccessibilitySignals(cues: AccessibilitySignal[]): Promise<void> {\n\t}\n\n\tisSoundEnabled(cue: AccessibilitySignal): boolean {\n\t\treturn false;\n\t}\n\n\tisAnnouncementEnabled(cue: AccessibilitySignal): boolean {\n\t\treturn false;\n\t}\n\n\tonSoundEnabledChanged(cue: AccessibilitySignal): Event<void> {\n\t\treturn Event.None;\n\t}\n\n\tonAnnouncementEnabledChanged(cue: AccessibilitySignal): Event<void> {\n\t\treturn Event.None;\n\t}\n\n\tasync playSound(cue: Sound, allowManyInParallel?: boolean | undefined): Promise<void> {\n\t}\n\tplaySignalLoop(cue: AccessibilitySignal): IDisposable {\n\t\treturn toDisposable(() => { });\n\t}\n}\n\nexport interface IEditorOverrideServices {\n\t[index: string]: any;\n}\n\nregisterSingleton(IConfigurationService, StandaloneConfigurationService, InstantiationType.Eager);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService, InstantiationType.Eager);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService, InstantiationType.Eager);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService, InstantiationType.Eager);\nregisterSingleton(ILabelService, StandaloneUriLabelService, InstantiationType.Eager);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService, InstantiationType.Eager);\nregisterSingleton(IDialogService, StandaloneDialogService, InstantiationType.Eager);\nregisterSingleton(IEnvironmentService, StandaloneEnvironmentService, InstantiationType.Eager);\nregisterSingleton(INotificationService, StandaloneNotificationService, InstantiationType.Eager);\nregisterSingleton(IMarkerService, MarkerService, InstantiationType.Eager);\nregisterSingleton(ILanguageService, StandaloneLanguageService, InstantiationType.Eager);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService, InstantiationType.Eager);\nregisterSingleton(ILogService, StandaloneLogService, InstantiationType.Eager);\nregisterSingleton(IModelService, ModelService, InstantiationType.Eager);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService, InstantiationType.Eager);\nregisterSingleton(IContextKeyService, ContextKeyService, InstantiationType.Eager);\nregisterSingleton(IProgressService, StandaloneProgressService, InstantiationType.Eager);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService, InstantiationType.Eager);\nregisterSingleton(IStorageService, InMemoryStorageService, InstantiationType.Eager);\nregisterSingleton(IEditorWorkerService, EditorWorkerService, InstantiationType.Eager);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService, InstantiationType.Eager);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService, InstantiationType.Eager);\nregisterSingleton(ITextModelService, StandaloneTextModelService, InstantiationType.Eager);\nregisterSingleton(IAccessibilityService, AccessibilityService, InstantiationType.Eager);\nregisterSingleton(IListService, ListService, InstantiationType.Eager);\nregisterSingleton(ICommandService, StandaloneCommandService, InstantiationType.Eager);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService, InstantiationType.Eager);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService, InstantiationType.Eager);\nregisterSingleton(IContextViewService, StandaloneContextViewService, InstantiationType.Eager);\nregisterSingleton(IOpenerService, OpenerService, InstantiationType.Eager);\nregisterSingleton(IClipboardService, BrowserClipboardService, InstantiationType.Eager);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService, InstantiationType.Eager);\nregisterSingleton(IMenuService, MenuService, InstantiationType.Eager);\nregisterSingleton(IAccessibilitySignalService, StandaloneAccessbilitySignalService, InstantiationType.Eager);\n\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport module StandaloneServices {\n\n\tconst serviceCollection = new ServiceCollection();\n\tfor (const [id, descriptor] of getSingletonServiceDescriptors()) {\n\t\tserviceCollection.set(id, descriptor);\n\t}\n\n\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\tserviceCollection.set(IInstantiationService, instantiationService);\n\n\texport function get<T>(serviceId: ServiceIdentifier<T>): T {\n\t\t// we will initialize the services in need on demand on OpenSumi\n\t\t// if (!initialized) {\n\t\t// \tinitialize({});\n\t\t// }\n\t\tconst r = serviceCollection.get(serviceId);\n\t\tif (!r) {\n\t\t\tthrow new Error('Missing service ' + serviceId);\n\t\t}\n\t\tif (r instanceof SyncDescriptor) {\n\t\t\treturn instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n\t\t} else {\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tlet initialized = false;\n\tconst onDidInitialize = new Emitter<void>();\n\texport function initialize(overrides: IEditorOverrideServices): IInstantiationService {\n\t\tif (initialized) {\n\t\t\treturn instantiationService;\n\t\t}\n\t\tinitialized = true;\n\n\t\t// Add singletons that were registered after this module loaded\n\t\tfor (const [id, descriptor] of getSingletonServiceDescriptors()) {\n\t\t\tif (!serviceCollection.get(id)) {\n\t\t\t\tserviceCollection.set(id, descriptor);\n\t\t\t}\n\t\t}\n\n\t\t// Initialize the service collection with the overrides, but only if the\n\t\t// service was not instantiated in the meantime.\n\t\tfor (const serviceId in overrides) {\n\t\t\tif (overrides.hasOwnProperty(serviceId)) {\n\t\t\t\tconst serviceIdentifier = createDecorator(serviceId);\n\t\t\t\tconst r = serviceCollection.get(serviceIdentifier);\n\t\t\t\tif (r instanceof SyncDescriptor) {\n\t\t\t\t\tserviceCollection.set(serviceIdentifier, overrides[serviceId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Instantiate all editor features\n\t\tconst editorFeatures = getEditorFeatures();\n\t\tfor (const feature of editorFeatures) {\n\t\t\ttry {\n\t\t\t\tinstantiationService.createInstance(feature);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\tonDidInitialize.fire();\n\n\t\treturn instantiationService;\n\t}\n\n\t/**\n\t * Executes callback once services are initialized.\n\t */\n\texport function withServices(callback: () => IDisposable): IDisposable {\n\t\tif (initialized) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\n\t\tconst listener = disposable.add(onDidInitialize.event(() => {\n\t\t\tlistener.dispose();\n\t\t\tdisposable.add(callback());\n\t\t}));\n\n\t\treturn disposable;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../../common/languages/languageConfigurationRegistry';\nimport './standaloneCodeEditorService';\nimport './standaloneLayoutService';\nimport '../../../platform/undoRedo/common/undoRedoService';\nimport '../../common/services/languageFeatureDebounce';\nimport '../../common/services/semanticTokensStylingService';\nimport '../../common/services/languageFeaturesService';\nimport '../../browser/services/hoverService';\n\nimport * as strings from '../../../base/common/strings';\nimport * as dom from '../../../base/browser/dom';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { ResolvedKeybinding, KeyCodeChord, Keybinding, decodeKeybinding } from '../../../base/common/keybindings';\nimport { IDisposable, IReference, ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform';\nimport Severity from '../../../base/common/severity';\nimport { URI } from '../../../base/common/uri';\nimport { IBulkEditOptions, IBulkEditResult, IBulkEditService, ResourceEdit, ResourceTextEdit } from '../../browser/services/bulkEditService';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema';\nimport { EditOperation, ISingleEditOperation } from '../../common/core/editOperation';\nimport { IPosition, Position as Pos } from '../../common/core/position';\nimport { Range } from '../../common/core/range';\nimport { ITextModel, ITextSnapshot } from '../../common/model';\nimport { IModelService } from '../../common/services/model';\nimport { IResolvedTextEditorModel, ITextModelContentProvider, ITextModelService } from '../../common/services/resolverService';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService, ITextResourceConfigurationChangeEvent } from '../../common/services/textResourceConfiguration';\nimport { CommandsRegistry, ICommandEvent, ICommandHandler, ICommandService } from '../../../platform/commands/common/commands';\nimport { IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationModel, IConfigurationValue, ConfigurationTarget } from '../../../platform/configuration/common/configuration';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels';\nimport { IContextKeyService, ContextKeyExpression } from '../../../platform/contextkey/common/contextkey';\nimport { IConfirmation, IConfirmationResult, IDialogService, IInputResult, IPrompt, IPromptResult, IPromptWithCustomCancel, IPromptResultWithCancel, IPromptWithDefaultCancel, IPromptBaseButton } from '../../../platform/dialogs/common/dialogs';\nimport { createDecorator, IInstantiationService, ServiceIdentifier } from '../../../platform/instantiation/common/instantiation';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService';\nimport { IKeybindingService, IKeyboardEvent, KeybindingsSchemaContribution } from '../../../platform/keybinding/common/keybinding';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver';\nimport { IKeybindingItem, KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { ILabelService, ResourceLabelFormatter, IFormatterChangeEvent, Verbosity } from '../../../platform/label/common/label';\nimport { INotification, INotificationHandle, INotificationService, IPromptChoice, IPromptOptions, NoOpNotification, IStatusMessageOptions, INotificationSource, INotificationSourceFilter, NotificationsFilter } from '../../../platform/notification/common/notification';\nimport { IProgressRunner, IEditorProgressService, IProgressService, IProgress, IProgressCompositeOptions, IProgressDialogOptions, IProgressNotificationOptions, IProgressOptions, IProgressStep, IProgressWindowOptions } from '../../../platform/progress/common/progress';\nimport { ITelemetryService, TelemetryLevel } from '../../../platform/telemetry/common/telemetry';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, IWorkspace, IWorkspaceContextService, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, IWorkspaceFoldersWillChangeEvent, WorkbenchState, WorkspaceFolder, STANDALONE_EDITOR_WORKSPACE_ID } from '../../../platform/workspace/common/workspace';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings';\nimport { basename } from '../../../base/common/resources';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService';\nimport { ConsoleLogger, ILogService } from '../../../platform/log/common/log';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustTransitionParticipant, IWorkspaceTrustUriInfo } from '../../../platform/workspace/common/workspaceTrust';\nimport { EditorOption } from '../../common/config/editorOptions';\nimport { ICodeEditor, IDiffEditor } from '../../browser/editorBrowser';\nimport { IContextMenuService, IContextViewDelegate, IContextViewService } from '../../../platform/contextview/browser/contextView';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService';\nimport { LanguageService } from '../../common/services/languageService';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService';\nimport { getSingletonServiceDescriptors, InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions';\nimport { OpenerService } from '../../browser/services/openerService';\nimport { IEditorWorkerService } from '../../common/services/editorWorker';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService';\nimport { ILanguageService } from '../../common/languages/language';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations';\nimport { ModelService } from '../../common/services/modelService';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService';\nimport { StandaloneThemeService } from './standaloneThemeService';\nimport { IStandaloneThemeService } from '../common/standaloneTheme';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility';\nimport { IMenuService } from '../../../platform/actions/common/actions';\nimport { MenuService } from '../../../platform/actions/common/menuService';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection';\nimport { IListService, ListService } from '../../../platform/list/browser/listService';\nimport { IMarkerService } from '../../../platform/markers/common/markers';\nimport { MarkerService } from '../../../platform/markers/common/markerService';\nimport { IOpenerService } from '../../../platform/opener/common/opener';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage';\nimport { DefaultConfiguration } from '../../../platform/configuration/common/configurations';\nimport { WorkspaceEdit } from '../../common/languages';\nimport { AccessibilitySignal, IAccessibilitySignalService, Sound } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService';\nimport { LogService } from '../../../platform/log/common/logService';\nimport { getEditorFeatures } from '../../common/editorFeatures';\nimport { onUnexpectedError } from '../../../base/common/errors';\nimport { ExtensionKind, IEnvironmentService, IExtensionHostDebugParams } from '../../../platform/environment/common/environment';\nimport { mainWindow } from '../../../base/browser/window';\n\nclass SimpleModel implements IResolvedTextEditorModel {\n\n\tprivate readonly model: ITextModel;\n\tprivate readonly _onWillDispose: Emitter<void>;\n\n\tconstructor(model: ITextModel) {\n\t\tthis.model = model;\n\t\tthis._onWillDispose = new Emitter<void>();\n\t}\n\n\tpublic get onWillDispose(): Event<void> {\n\t\treturn this._onWillDispose.event;\n\t}\n\n\tpublic resolve(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic get textEditorModel(): ITextModel {\n\t\treturn this.model;\n\t}\n\n\tpublic createSnapshot(): ITextSnapshot {\n\t\treturn this.model.createSnapshot();\n\t}\n\n\tpublic isReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tprivate disposed = false;\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\n\t\tthis._onWillDispose.fire();\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\tpublic isResolved(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getLanguageId(): string | undefined {\n\t\treturn this.model.getLanguageId();\n\t}\n}\n\nclass StandaloneTextModelService implements ITextModelService {\n\tpublic _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService\n\t) { }\n\n\tpublic createModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst model = this.modelService.getModel(resource);\n\n\t\tif (!model) {\n\t\t\treturn Promise.reject(new Error(`Model not found`));\n\t\t}\n\n\t\treturn Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n\t}\n\n\tpublic registerTextModelContentProvider(scheme: string, provider: ITextModelContentProvider): IDisposable {\n\t\treturn {\n\t\t\tdispose: function () { /* no op */ }\n\t\t};\n\t}\n\n\tpublic canHandleResource(resource: URI): boolean {\n\t\treturn false;\n\t}\n}\n\nclass StandaloneEditorProgressService implements IEditorProgressService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static NULL_PROGRESS_RUNNER: IProgressRunner = {\n\t\tdone: () => { },\n\t\ttotal: () => { },\n\t\tworked: () => { }\n\t};\n\n\tshow(infinite: true, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\tshow(): IProgressRunner {\n\t\treturn StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n\t}\n\n\tasync showWhile(promise: Promise<any>, delay?: number): Promise<void> {\n\t\tawait promise;\n\t}\n}\n\nclass StandaloneProgressService implements IProgressService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\twithProgress<R>(_options: IProgressOptions | IProgressDialogOptions | IProgressNotificationOptions | IProgressWindowOptions | IProgressCompositeOptions, task: (progress: IProgress<IProgressStep>) => Promise<R>, onDidCancel?: ((choice?: number | undefined) => void) | undefined): Promise<R> {\n\t\treturn task({\n\t\t\treport: () => { },\n\t\t});\n\t}\n}\n\nclass StandaloneEnvironmentService implements IEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly stateResource: URI = URI.from({ scheme: 'monaco', authority: 'stateResource' });\n\treadonly userRoamingDataHome: URI = URI.from({ scheme: 'monaco', authority: 'userRoamingDataHome' });\n\treadonly keyboardLayoutResource: URI = URI.from({ scheme: 'monaco', authority: 'keyboardLayoutResource' });\n\treadonly argvResource: URI = URI.from({ scheme: 'monaco', authority: 'argvResource' });\n\treadonly untitledWorkspacesHome: URI = URI.from({ scheme: 'monaco', authority: 'untitledWorkspacesHome' });\n\treadonly workspaceStorageHome: URI = URI.from({ scheme: 'monaco', authority: 'workspaceStorageHome' });\n\treadonly localHistoryHome: URI = URI.from({ scheme: 'monaco', authority: 'localHistoryHome' });\n\treadonly cacheHome: URI = URI.from({ scheme: 'monaco', authority: 'cacheHome' });\n\treadonly userDataSyncHome: URI = URI.from({ scheme: 'monaco', authority: 'userDataSyncHome' });\n\treadonly sync: 'on' | 'off' | undefined = undefined;\n\treadonly continueOn?: string | undefined = undefined;\n\treadonly editSessionId?: string | undefined = undefined;\n\treadonly debugExtensionHost: IExtensionHostDebugParams = { port: null, break: false };\n\treadonly isExtensionDevelopment: boolean = false;\n\treadonly disableExtensions: boolean | string[] = false;\n\treadonly enableExtensions?: readonly string[] | undefined = undefined;\n\treadonly extensionDevelopmentLocationURI?: URI[] | undefined = undefined;\n\treadonly extensionDevelopmentKind?: ExtensionKind[] | undefined = undefined;\n\treadonly extensionTestsLocationURI?: URI | undefined = undefined;\n\treadonly logsHome: URI = URI.from({ scheme: 'monaco', authority: 'logsHome' });\n\treadonly logLevel?: string | undefined = undefined;\n\treadonly extensionLogLevel?: [string, string][] | undefined = undefined;\n\treadonly verbose: boolean = false;\n\treadonly isBuilt: boolean = false;\n\treadonly disableTelemetry: boolean = false;\n\treadonly serviceMachineIdResource: URI = URI.from({ scheme: 'monaco', authority: 'serviceMachineIdResource' });\n\treadonly policyFile?: URI | undefined = undefined;\n}\n\nclass StandaloneDialogService implements IDialogService {\n\n\t_serviceBrand: undefined;\n\n\treadonly onWillShowDialog = Event.None;\n\treadonly onDidShowDialog = Event.None;\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tconst confirmed = this.doConfirm(confirmation.message, confirmation.detail);\n\n\t\treturn {\n\t\t\tconfirmed,\n\t\t\tcheckboxChecked: false // unsupported\n\t\t} as IConfirmationResult;\n\t}\n\n\tprivate doConfirm(message: string, detail?: string): boolean {\n\t\tlet messageText = message;\n\t\tif (detail) {\n\t\t\tmessageText = messageText + '\\n\\n' + detail;\n\t\t}\n\n\t\treturn mainWindow.confirm(messageText);\n\t}\n\n\tprompt<T>(prompt: IPromptWithCustomCancel<T>): Promise<IPromptResultWithCancel<T>>;\n\tprompt<T>(prompt: IPrompt<T>): Promise<IPromptResult<T>>;\n\tprompt<T>(prompt: IPromptWithDefaultCancel<T>): Promise<IPromptResult<T>>;\n\tasync prompt<T>(prompt: IPrompt<T> | IPromptWithCustomCancel<T>): Promise<IPromptResult<T> | IPromptResultWithCancel<T>> {\n\t\tlet result: T | undefined = undefined;\n\t\tconst confirmed = this.doConfirm(prompt.message, prompt.detail);\n\t\tif (confirmed) {\n\t\t\tconst promptButtons: IPromptBaseButton<T>[] = [...(prompt.buttons ?? [])];\n\t\t\tif (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n\t\t\t\tpromptButtons.push(prompt.cancelButton);\n\t\t\t}\n\n\t\t\tresult = await promptButtons[0]?.run({ checkboxChecked: false });\n\t\t}\n\n\t\treturn { result };\n\t}\n\n\tasync info(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Info, message, detail });\n\t}\n\n\tasync warn(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Warning, message, detail });\n\t}\n\n\tasync error(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Error, message, detail });\n\t}\n\n\tinput(): Promise<IInputResult> {\n\t\treturn Promise.resolve({ confirmed: false }); // unsupported\n\t}\n\n\tabout(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class StandaloneNotificationService implements INotificationService {\n\n\treadonly onDidAddNotification: Event<INotification> = Event.None;\n\n\treadonly onDidRemoveNotification: Event<INotification> = Event.None;\n\n\treadonly onDidChangeFilter: Event<void> = Event.None;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly NO_OP: INotificationHandle = new NoOpNotification();\n\n\tpublic info(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Info, message });\n\t}\n\n\tpublic warn(message: string): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Warning, message });\n\t}\n\n\tpublic error(error: string | Error): INotificationHandle {\n\t\treturn this.notify({ severity: Severity.Error, message: error });\n\t}\n\n\tpublic notify(notification: INotification): INotificationHandle {\n\t\tswitch (notification.severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(notification.message);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(notification.message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(notification.message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn StandaloneNotificationService.NO_OP;\n\t}\n\n\tpublic prompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle {\n\t\treturn StandaloneNotificationService.NO_OP;\n\t}\n\n\tpublic status(message: string | Error, options?: IStatusMessageOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\n\tpublic setFilter(filter: NotificationsFilter | INotificationSourceFilter): void { }\n\n\tpublic getFilter(source?: INotificationSource): NotificationsFilter {\n\t\treturn NotificationsFilter.OFF;\n\t}\n\n\tpublic getFilters(): INotificationSourceFilter[] {\n\t\treturn [];\n\t}\n\n\tpublic removeFilter(sourceId: string): void { }\n}\n\nexport class StandaloneCommandService implements ICommandService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _instantiationService: IInstantiationService;\n\n\tprivate readonly _onWillExecuteCommand = new Emitter<ICommandEvent>();\n\tprivate readonly _onDidExecuteCommand = new Emitter<ICommandEvent>();\n\tpublic readonly onWillExecuteCommand: Event<ICommandEvent> = this._onWillExecuteCommand.event;\n\tpublic readonly onDidExecuteCommand: Event<ICommandEvent> = this._onDidExecuteCommand.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tthis._instantiationService = instantiationService;\n\t}\n\n\tpublic executeCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tconst command = CommandsRegistry.getCommand(id);\n\t\tif (!command) {\n\t\t\treturn Promise.reject(new Error(`command '${id}' not found`));\n\t\t}\n\n\t\ttry {\n\t\t\tthis._onWillExecuteCommand.fire({ commandId: id, args });\n\t\t\tconst result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]) as T;\n\n\t\t\tthis._onDidExecuteCommand.fire({ commandId: id, args });\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport interface IKeybindingRule {\n\tkeybinding: number;\n\tcommand?: string | null;\n\tcommandArgs?: any;\n\twhen?: ContextKeyExpression | null;\n}\n\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n\tprivate _cachedResolver: KeybindingResolver | null;\n\tprivate _dynamicKeybindings: IKeybindingItem[];\n\tprivate readonly _domNodeListeners: DomNodeListeners[];\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ILogService logService: ILogService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper(contextKeyService, commandService, telemetryService, notificationService, logService);\n\n\t\tthis._cachedResolver = null;\n\t\tthis._dynamicKeybindings = [];\n\t\tthis._domNodeListeners = [];\n\n\t\tconst addContainer = (domNode: HTMLElement) => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\t// for standard keybindings\n\t\t\tdisposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\t\tconst shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\t\t\t\tif (shouldPreventDefault) {\n\t\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\t\tkeyEvent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// for single modifier chord keybindings (e.g. shift shift)\n\t\t\tdisposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\t\tconst shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\t\t\t\tif (shouldPreventDefault) {\n\t\t\t\t\tkeyEvent.preventDefault();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n\t\t};\n\t\tconst removeContainer = (domNode: HTMLElement) => {\n\t\t\tfor (let i = 0; i < this._domNodeListeners.length; i++) {\n\t\t\t\tconst domNodeListeners = this._domNodeListeners[i];\n\t\t\t\tif (domNodeListeners.domNode === domNode) {\n\t\t\t\t\tthis._domNodeListeners.splice(i, 1);\n\t\t\t\t\tdomNodeListeners.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst addCodeEditor = (codeEditor: ICodeEditor) => {\n\t\t\tif (codeEditor.getOption(EditorOption.inDiffEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\taddContainer(codeEditor.getContainerDomNode());\n\t\t};\n\t\tconst removeCodeEditor = (codeEditor: ICodeEditor) => {\n\t\t\tif (codeEditor.getOption(EditorOption.inDiffEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tremoveContainer(codeEditor.getContainerDomNode());\n\t\t};\n\t\tthis._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n\t\tthis._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n\t\tcodeEditorService.listCodeEditors().forEach(addCodeEditor);\n\n\t\tconst addDiffEditor = (diffEditor: IDiffEditor) => {\n\t\t\taddContainer(diffEditor.getContainerDomNode());\n\t\t};\n\t\tconst removeDiffEditor = (diffEditor: IDiffEditor) => {\n\t\t\tremoveContainer(diffEditor.getContainerDomNode());\n\t\t};\n\t\tthis._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n\t\tthis._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n\t\tcodeEditorService.listDiffEditors().forEach(addDiffEditor);\n\t}\n\n\tpublic addDynamicKeybinding(command: string, keybinding: number, handler: ICommandHandler, when: ContextKeyExpression | undefined): IDisposable {\n\t\treturn combinedDisposable(\n\t\t\tCommandsRegistry.registerCommand(command, handler),\n\t\t\tthis.addDynamicKeybindings([{\n\t\t\t\tkeybinding,\n\t\t\t\tcommand,\n\t\t\t\twhen\n\t\t\t}])\n\t\t);\n\t}\n\n\tpublic addDynamicKeybindings(rules: IKeybindingRule[]): IDisposable {\n\t\tconst entries: IKeybindingItem[] = rules.map((rule) => {\n\t\t\tconst keybinding = decodeKeybinding(rule.keybinding, OS);\n\t\t\treturn {\n\t\t\t\tkeybinding,\n\t\t\t\tcommand: rule.command ?? null,\n\t\t\t\tcommandArgs: rule.commandArgs,\n\t\t\t\twhen: rule.when,\n\t\t\t\tweight1: 1000,\n\t\t\t\tweight2: 0,\n\t\t\t\textensionId: null,\n\t\t\t\tisBuiltinExtension: false\n\t\t\t};\n\t\t});\n\t\tthis._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n\n\t\tthis.updateResolver();\n\n\t\treturn toDisposable(() => {\n\t\t\t// Search the first entry and remove them all since they will be contiguous\n\t\t\tfor (let i = 0; i < this._dynamicKeybindings.length; i++) {\n\t\t\t\tif (this._dynamicKeybindings[i] === entries[0]) {\n\t\t\t\t\tthis._dynamicKeybindings.splice(i, entries.length);\n\t\t\t\t\tthis.updateResolver();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateResolver(): void {\n\t\tthis._cachedResolver = null;\n\t\tthis._onDidUpdateKeybindings.fire();\n\t}\n\n\tprotected _getResolver(): KeybindingResolver {\n\t\tif (!this._cachedResolver) {\n\t\t\tconst defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\t\t\tconst overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n\t\t\tthis._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n\t\t}\n\t\treturn this._cachedResolver;\n\t}\n\n\tprotected _documentHasFocus(): boolean {\n\t\treturn mainWindow.document.hasFocus();\n\t}\n\n\tprivate _toNormalizedKeybindingItems(items: IKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tconst result: ResolvedKeybindingItem[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst keybinding = item.keybinding;\n\n\t\t\tif (!keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t} else {\n\t\t\t\tconst resolvedKeybindings = USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n\t\t\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tconst chord = new KeyCodeChord(\n\t\t\tkeyboardEvent.ctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\tkeyboardEvent.altKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t);\n\t\treturn new USLayoutResolvedKeybinding([chord], OS);\n\t}\n\n\tpublic resolveUserBinding(userBinding: string): ResolvedKeybinding[] {\n\t\treturn [];\n\t}\n\n\tpublic _dumpDebugInfo(): string {\n\t\treturn '';\n\t}\n\n\tpublic _dumpDebugInfoJSON(): string {\n\t\treturn '';\n\t}\n\n\tpublic registerSchemaContribution(contribution: KeybindingsSchemaContribution): void {\n\t\t// noop\n\t}\n\n\t/**\n\t * not yet supported\n\t */\n\tpublic override enableKeybindingHoldMode(commandId: string): Promise<void> | undefined {\n\t\treturn undefined;\n\t}\n}\n\nclass DomNodeListeners extends Disposable {\n\tconstructor(\n\t\tpublic readonly domNode: HTMLElement,\n\t\tdisposables: DisposableStore\n\t) {\n\t\tsuper();\n\t\tthis._register(disposables);\n\t}\n}\n\nfunction isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport class StandaloneConfigurationService implements IConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<IConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly _configuration: Configuration;\n\n\tconstructor() {\n\t\tconst defaultConfiguration = new DefaultConfiguration();\n\t\tthis._configuration = new Configuration(defaultConfiguration.reload(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel());\n\t\tdefaultConfiguration.dispose();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this._configuration.getValue(section, overrides, undefined);\n\t}\n\n\tpublic updateValues(values: [string, any][]): Promise<void> {\n\t\tconst previous = { data: this._configuration.toData() };\n\n\t\tconst changedKeys: string[] = [];\n\n\t\tfor (const entry of values) {\n\t\t\tconst [key, value] = entry;\n\t\t\tif (this.getValue(key) === value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._configuration.updateValue(key, value);\n\t\t\tchangedKeys.push(key);\n\t\t}\n\n\t\tif (changedKeys.length > 0) {\n\t\t\tconst configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n\t\t\tconfigurationChangeEvent.source = ConfigurationTarget.MEMORY;\n\t\t\tthis._onDidChangeConfiguration.fire(configurationChangeEvent);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic updateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn this.updateValues([[key, value]]);\n\t}\n\n\tpublic inspect<C>(key: string, options: IConfigurationOverrides = {}): IConfigurationValue<C> {\n\t\treturn this._configuration.inspect<C>(key, options, undefined);\n\t}\n\n\tpublic keys() {\n\t\treturn this._configuration.keys(undefined);\n\t}\n\n\tpublic reloadConfiguration(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic getConfigurationData(): IConfigurationData | null {\n\t\tconst emptyModel: IConfigurationModel = {\n\t\t\tcontents: {},\n\t\t\tkeys: [],\n\t\t\toverrides: []\n\t\t};\n\t\treturn {\n\t\t\tdefaults: emptyModel,\n\t\t\tpolicy: emptyModel,\n\t\t\tapplication: emptyModel,\n\t\t\tuser: emptyModel,\n\t\t\tworkspace: emptyModel,\n\t\t\tfolders: []\n\t\t};\n\t}\n}\n\nclass StandaloneResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<ITextResourceConfigurationChangeEvent>();\n\tpublic readonly onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: StandaloneConfigurationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tthis._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource: URI, configuration: string) => e.affectsConfiguration(configuration) });\n\t\t});\n\t}\n\n\tgetValue<T>(resource: URI, section?: string): T;\n\tgetValue<T>(resource: URI, position?: IPosition, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, arg2?: any, arg3?: any) {\n\t\tconst position: IPosition | null = Pos.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\tconst language = resource ? this.getLanguage(resource, position) : undefined;\n\t\tif (typeof section === 'undefined') {\n\t\t\treturn this.configurationService.getValue<T>({\n\t\t\t\tresource,\n\t\t\t\toverrideIdentifier: language\n\t\t\t});\n\t\t}\n\t\treturn this.configurationService.getValue<T>(section, {\n\t\t\tresource,\n\t\t\toverrideIdentifier: language\n\t\t});\n\t}\n\n\tinspect<T>(resource: URI | undefined, position: IPosition | null, section: string): IConfigurationValue<Readonly<T>> {\n\t\tconst language = resource ? this.getLanguage(resource, position) : undefined;\n\t\treturn this.configurationService.inspect<T>(section, { resource, overrideIdentifier: language });\n\t}\n\n\tprivate getLanguage(resource: URI, position: IPosition | null): string | null {\n\t\tconst model = this.modelService.getModel(resource);\n\t\tif (model) {\n\t\t\treturn position ? model.getLanguageIdAtPosition(position.lineNumber, position.column) : model.getLanguageId();\n\t\t}\n\t\treturn this.languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value, { resource }, configurationTarget);\n\t}\n}\n\nclass StandaloneResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n\nclass StandaloneTelemetryService implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly telemetryLevel = TelemetryLevel.NONE;\n\treadonly sessionId = 'someValue.sessionId';\n\treadonly machineId = 'someValue.machineId';\n\treadonly sqmId = 'someValue.sqmId';\n\treadonly firstSessionDate = 'someValue.firstSessionDate';\n\treadonly sendErrorTelemetry = false;\n\tsetEnabled(): void { }\n\tsetExperimentProperty(): void { }\n\tpublicLog() { }\n\tpublicLog2() { }\n\tpublicLogError() { }\n\tpublicLogError2() { }\n}\n\nclass StandaloneWorkspaceContextService implements IWorkspaceContextService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate static readonly SCHEME = 'inmemory';\n\n\tprivate readonly _onDidChangeWorkspaceName = new Emitter<void>();\n\tpublic readonly onDidChangeWorkspaceName: Event<void> = this._onDidChangeWorkspaceName.event;\n\n\tprivate readonly _onWillChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersWillChangeEvent>();\n\tpublic readonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent> = this._onWillChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersChangeEvent>();\n\tpublic readonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent> = this._onDidChangeWorkspaceFolders.event;\n\n\tprivate readonly _onDidChangeWorkbenchState = new Emitter<WorkbenchState>();\n\tpublic readonly onDidChangeWorkbenchState: Event<WorkbenchState> = this._onDidChangeWorkbenchState.event;\n\n\tprivate readonly workspace: IWorkspace;\n\n\tconstructor() {\n\t\tconst resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n\t\tthis.workspace = { id: STANDALONE_EDITOR_WORKSPACE_ID, folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n\t}\n\n\tgetCompleteWorkspace(): Promise<IWorkspace> {\n\t\treturn Promise.resolve(this.getWorkspace());\n\t}\n\n\tpublic getWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getWorkbenchState(): WorkbenchState {\n\t\tif (this.workspace) {\n\t\t\tif (this.workspace.configuration) {\n\t\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t\t}\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tpublic getWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\treturn resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME;\n\t}\n\n\tpublic isCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\treturn true;\n\t}\n}\n\nexport function updateConfigurationService(configurationService: IConfigurationService, source: any, isDiffEditor: boolean): void {\n\tif (!source) {\n\t\treturn;\n\t}\n\tif (!(configurationService instanceof StandaloneConfigurationService)) {\n\t\treturn;\n\t}\n\tconst toUpdate: [string, any][] = [];\n\tObject.keys(source).forEach((key) => {\n\t\tif (isEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`editor.${key}`, source[key]]);\n\t\t}\n\t\tif (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n\t\t\ttoUpdate.push([`diffEditor.${key}`, source[key]]);\n\t\t}\n\t});\n\tif (toUpdate.length > 0) {\n\t\tconfigurationService.updateValues(toUpdate);\n\t}\n}\n\nclass StandaloneBulkEditService implements IBulkEditService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService\n\t) {\n\t\t//\n\t}\n\n\thasPreviewHandler(): false {\n\t\treturn false;\n\t}\n\n\tsetPreviewHandler(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tasync apply(editsIn: ResourceEdit[] | WorkspaceEdit, _options?: IBulkEditOptions): Promise<IBulkEditResult> {\n\t\tconst edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n\t\tconst textEdits = new Map<ITextModel, ISingleEditOperation[]>();\n\n\t\tfor (const edit of edits) {\n\t\t\tif (!(edit instanceof ResourceTextEdit)) {\n\t\t\t\tthrow new Error('bad edit - only text edits are supported');\n\t\t\t}\n\t\t\tconst model = this._modelService.getModel(edit.resource);\n\t\t\tif (!model) {\n\t\t\t\tthrow new Error('bad edit - model not found');\n\t\t\t}\n\t\t\tif (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n\t\t\t\tthrow new Error('bad state - model changed in the meantime');\n\t\t\t}\n\t\t\tlet array = textEdits.get(model);\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\ttextEdits.set(model, array);\n\t\t\t}\n\t\t\tarray.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n\t\t}\n\n\n\t\tlet totalEdits = 0;\n\t\tlet totalFiles = 0;\n\t\tfor (const [model, edits] of textEdits) {\n\t\t\tmodel.pushStackElement();\n\t\t\tmodel.pushEditOperations([], edits, () => []);\n\t\t\tmodel.pushStackElement();\n\t\t\ttotalFiles += 1;\n\t\t\ttotalEdits += edits.length;\n\t\t}\n\n\t\treturn {\n\t\t\tariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles),\n\t\t\tisApplied: totalEdits > 0\n\t\t};\n\t}\n}\n\nclass StandaloneUriLabelService implements ILabelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic readonly onDidChangeFormatters: Event<IFormatterChangeEvent> = Event.None;\n\n\tpublic getUriLabel(resource: URI, options?: { relative?: boolean; forceNoTildify?: boolean }): string {\n\t\tif (resource.scheme === 'file') {\n\t\t\treturn resource.fsPath;\n\t\t}\n\t\treturn resource.path;\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\treturn basename(resource);\n\t}\n\n\tpublic getWorkspaceLabel(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI | IWorkspace, options?: { verbose: Verbosity }): string {\n\t\treturn '';\n\t}\n\n\tpublic getSeparator(scheme: string, authority?: string): '/' | '\\\\' {\n\t\treturn '/';\n\t}\n\n\tpublic registerFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic registerCachedFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\treturn this.registerFormatter(formatter);\n\t}\n\n\tpublic getHostLabel(): string {\n\t\treturn '';\n\t}\n\n\tpublic getHostTooltip(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n\n\nclass StandaloneContextViewService extends ContextViewService {\n\n\tconstructor(\n\t\t@ILayoutService layoutService: ILayoutService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(layoutService);\n\t}\n\n\toverride showContextView(delegate: IContextViewDelegate, container?: HTMLElement, shadowRoot?: boolean): IDisposable {\n\t\tif (!container) {\n\t\t\tconst codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n\t\t\tif (codeEditor) {\n\t\t\t\tcontainer = codeEditor.getContainerDomNode();\n\t\t\t}\n\t\t}\n\t\treturn super.showContextView(delegate, container, shadowRoot);\n\t}\n}\n\nclass StandaloneWorkspaceTrustManagementService implements IWorkspaceTrustManagementService {\n\t_serviceBrand: undefined;\n\n\tprivate _neverEmitter = new Emitter<never>();\n\tpublic readonly onDidChangeTrust: Event<boolean> = this._neverEmitter.event;\n\tonDidChangeTrustedFolders: Event<void> = this._neverEmitter.event;\n\tpublic readonly workspaceResolved = Promise.resolve();\n\tpublic readonly workspaceTrustInitialized = Promise.resolve();\n\tpublic readonly acceptsOutOfWorkspaceFiles = true;\n\n\tisWorkspaceTrusted(): boolean {\n\t\treturn true;\n\t}\n\tisWorkspaceTrustForced(): boolean {\n\t\treturn false;\n\t}\n\tcanSetParentFolderTrust(): boolean {\n\t\treturn false;\n\t}\n\tasync setParentFolderTrust(trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tcanSetWorkspaceTrust(): boolean {\n\t\treturn false;\n\t}\n\tasync setWorkspaceTrust(trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo> {\n\t\tthrow new Error('Method not supported.');\n\t}\n\tasync setUrisTrust(uri: URI[], trusted: boolean): Promise<void> {\n\t\t// noop\n\t}\n\tgetTrustedUris(): URI[] {\n\t\treturn [];\n\t}\n\tasync setTrustedUris(uris: URI[]): Promise<void> {\n\t\t// noop\n\t}\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable {\n\t\tthrow new Error('Method not supported.');\n\t}\n}\n\nclass StandaloneLanguageService extends LanguageService {\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nclass StandaloneLogService extends LogService {\n\tconstructor() {\n\t\tsuper(new ConsoleLogger());\n\t}\n}\n\nclass StandaloneContextMenuService extends ContextMenuService {\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService);\n\t\tthis.configure({ blockMouse: false }); // we do not want that in the standalone editor\n\t}\n}\n\nclass StandaloneAccessbilitySignalService implements IAccessibilitySignalService {\n\t_serviceBrand: undefined;\n\tasync playSignal(cue: AccessibilitySignal, options: {}): Promise<void> {\n\t}\n\n\tasync playAccessibilitySignals(cues: AccessibilitySignal[]): Promise<void> {\n\t}\n\n\tisSoundEnabled(cue: AccessibilitySignal): boolean {\n\t\treturn false;\n\t}\n\n\tisAnnouncementEnabled(cue: AccessibilitySignal): boolean {\n\t\treturn false;\n\t}\n\n\tonSoundEnabledChanged(cue: AccessibilitySignal): Event<void> {\n\t\treturn Event.None;\n\t}\n\n\tonAnnouncementEnabledChanged(cue: AccessibilitySignal): Event<void> {\n\t\treturn Event.None;\n\t}\n\n\tasync playSound(cue: Sound, allowManyInParallel?: boolean | undefined): Promise<void> {\n\t}\n\tplaySignalLoop(cue: AccessibilitySignal): IDisposable {\n\t\treturn toDisposable(() => { });\n\t}\n}\n\nexport interface IEditorOverrideServices {\n\t[index: string]: any;\n}\n\nregisterSingleton(IConfigurationService, StandaloneConfigurationService, InstantiationType.Eager);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService, InstantiationType.Eager);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService, InstantiationType.Eager);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService, InstantiationType.Eager);\nregisterSingleton(ILabelService, StandaloneUriLabelService, InstantiationType.Eager);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService, InstantiationType.Eager);\nregisterSingleton(IDialogService, StandaloneDialogService, InstantiationType.Eager);\nregisterSingleton(IEnvironmentService, StandaloneEnvironmentService, InstantiationType.Eager);\nregisterSingleton(INotificationService, StandaloneNotificationService, InstantiationType.Eager);\nregisterSingleton(IMarkerService, MarkerService, InstantiationType.Eager);\nregisterSingleton(ILanguageService, StandaloneLanguageService, InstantiationType.Eager);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService, InstantiationType.Eager);\nregisterSingleton(ILogService, StandaloneLogService, InstantiationType.Eager);\nregisterSingleton(IModelService, ModelService, InstantiationType.Eager);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService, InstantiationType.Eager);\nregisterSingleton(IContextKeyService, ContextKeyService, InstantiationType.Eager);\nregisterSingleton(IProgressService, StandaloneProgressService, InstantiationType.Eager);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService, InstantiationType.Eager);\nregisterSingleton(IStorageService, InMemoryStorageService, InstantiationType.Eager);\nregisterSingleton(IEditorWorkerService, EditorWorkerService, InstantiationType.Eager);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService, InstantiationType.Eager);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService, InstantiationType.Eager);\nregisterSingleton(ITextModelService, StandaloneTextModelService, InstantiationType.Eager);\nregisterSingleton(IAccessibilityService, AccessibilityService, InstantiationType.Eager);\nregisterSingleton(IListService, ListService, InstantiationType.Eager);\nregisterSingleton(ICommandService, StandaloneCommandService, InstantiationType.Eager);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService, InstantiationType.Eager);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService, InstantiationType.Eager);\nregisterSingleton(IContextViewService, StandaloneContextViewService, InstantiationType.Eager);\nregisterSingleton(IOpenerService, OpenerService, InstantiationType.Eager);\nregisterSingleton(IClipboardService, BrowserClipboardService, InstantiationType.Eager);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService, InstantiationType.Eager);\nregisterSingleton(IMenuService, MenuService, InstantiationType.Eager);\nregisterSingleton(IAccessibilitySignalService, StandaloneAccessbilitySignalService, InstantiationType.Eager);\n\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport module StandaloneServices {\n\n\tconst serviceCollection = new ServiceCollection();\n\tfor (const [id, descriptor] of getSingletonServiceDescriptors()) {\n\t\tserviceCollection.set(id, descriptor);\n\t}\n\n\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\tserviceCollection.set(IInstantiationService, instantiationService);\n\n\texport function get<T>(serviceId: ServiceIdentifier<T>): T {\n\t\t// we will initialize the services in need on demand on OpenSumi\n\t\t// if (!initialized) {\n\t\t// \tinitialize({});\n\t\t// }\n\t\tconst r = serviceCollection.get(serviceId);\n\t\tif (!r) {\n\t\t\tthrow new Error('Missing service ' + serviceId);\n\t\t}\n\t\tif (r instanceof SyncDescriptor) {\n\t\t\treturn instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n\t\t} else {\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tlet initialized = false;\n\tconst onDidInitialize = new Emitter<void>();\n\texport function initialize(overrides: IEditorOverrideServices): IInstantiationService {\n\t\tif (initialized) {\n\t\t\treturn instantiationService;\n\t\t}\n\t\tinitialized = true;\n\n\t\t// Add singletons that were registered after this module loaded\n\t\tfor (const [id, descriptor] of getSingletonServiceDescriptors()) {\n\t\t\tif (!serviceCollection.get(id)) {\n\t\t\t\tserviceCollection.set(id, descriptor);\n\t\t\t}\n\t\t}\n\n\t\t// Initialize the service collection with the overrides, but only if the\n\t\t// service was not instantiated in the meantime.\n\t\tfor (const serviceId in overrides) {\n\t\t\tif (overrides.hasOwnProperty(serviceId)) {\n\t\t\t\tconst serviceIdentifier = createDecorator(serviceId);\n\t\t\t\tconst r = serviceCollection.get(serviceIdentifier);\n\t\t\t\tif (r instanceof SyncDescriptor) {\n\t\t\t\t\tserviceCollection.set(serviceIdentifier, overrides[serviceId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Instantiate all editor features\n\t\tconst editorFeatures = getEditorFeatures();\n\t\tfor (const feature of editorFeatures) {\n\t\t\ttry {\n\t\t\t\tinstantiationService.createInstance(feature);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\tonDidInitialize.fire();\n\n\t\treturn instantiationService;\n\t}\n\n\t/**\n\t * Executes callback once services are initialized.\n\t */\n\texport function withServices(callback: () => IDisposable): IDisposable {\n\t\tif (initialized) {\n\t\t\treturn callback();\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\n\t\tconst listener = disposable.add(onDidInitialize.event(() => {\n\t\t\tlistener.dispose();\n\t\t\tdisposable.add(callback());\n\t\t}));\n\n\t\treturn disposable;\n\t}\n\n}\n"]}