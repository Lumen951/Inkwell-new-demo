{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/editor/common/services/model.ts","vs/editor/common/services/model.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAMhG,wFAAuF;AAG1E,QAAA,aAAa,GAAG,IAAA,+BAAe,EAAgB,cAAc,CAAC,CAAC","file":"model.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event';\nimport { URI } from '../../../base/common/uri';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from '../model';\nimport { ILanguageSelection } from '../languages/language';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from '../languages';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface IModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget?: boolean): ITextModel;\n\n\tupdateModel(model: ITextModel, value: string | ITextBufferFactory): void;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\tonModelAdded: Event<ITextModel>;\n\n\tonModelRemoved: Event<ITextModel>;\n\n\tonModelLanguageChanged: Event<{ model: ITextModel; oldLanguageId: string }>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event';\nimport { URI } from '../../../base/common/uri';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from '../model';\nimport { ILanguageSelection } from '../languages/language';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from '../languages';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface IModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget?: boolean): ITextModel;\n\n\tupdateModel(model: ITextModel, value: string | ITextBufferFactory): void;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\tonModelAdded: Event<ITextModel>;\n\n\tonModelRemoved: Event<ITextModel>;\n\n\tonModelLanguageChanged: Event<{ model: ITextModel; oldLanguageId: string }>;\n}\n"]}