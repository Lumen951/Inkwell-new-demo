{"version":3,"sources":["vs/editor/common/languages/modesRegistry.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,oCAAoC;AACpC,sDAA4D;AAE5D,yEAAsE;AAEtE,oDAAkD;AAClD,wGAA6I;AAE7I,6BAA6B;AAChB,QAAA,UAAU,GAAG;IACzB,aAAa,EAAE,sBAAsB;CACrC,CAAC;AAEF,MAAa,mBAAmB;IAO/B;QAHiB,0BAAqB,GAAG,IAAI,eAAO,EAAQ,CAAC;QAC7C,yBAAoB,GAAgB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QAGpF,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAEM,gBAAgB,CAAC,GAA4B;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,OAAO;YACN,OAAO,EAAE,GAAG,EAAE;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5D,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;wBAChC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7B,OAAO;oBACR,CAAC;gBACF,CAAC;YACF,CAAC;SACD,CAAC;IACH,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;CACD;AA7BD,kDA6BC;AAEY,QAAA,aAAa,GAAG,IAAI,mBAAmB,EAAE,CAAC;AACvD,mBAAQ,CAAC,GAAG,CAAC,kBAAU,CAAC,aAAa,EAAE,qBAAa,CAAC,CAAC;AAEzC,QAAA,qBAAqB,GAAG,WAAW,CAAC;AACpC,QAAA,mBAAmB,GAAG,MAAM,CAAC;AAE1C,qBAAa,CAAC,gBAAgB,CAAC;IAC9B,EAAE,EAAE,6BAAqB;IACzB,UAAU,EAAE,CAAC,2BAAmB,CAAC;IACjC,OAAO,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,2CAAiB,EAAE,YAAY,CAAC,EAAE,MAAM,CAAC;IAChE,SAAS,EAAE,CAAC,YAAK,CAAC,IAAI,CAAC;CACvB,CAAC,CAAC;AAEH,mBAAQ,CAAC,EAAE,CAAyB,kCAAuB,CAAC,aAAa,CAAC;KACxE,6BAA6B,CAAC,CAAC;QAC/B,SAAS,EAAE;YACV,aAAa,EAAE;gBACd,6CAA6C,EAAE,KAAK;gBACpD,6CAA6C,EAAE,KAAK;aACpD;SACD;KACD,CAAC,CAAC,CAAC","file":"modesRegistry.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../nls';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { ILanguageExtensionPoint } from './language';\nimport { Registry } from '../../../platform/registry/common/platform';\nimport { IDisposable } from '../../../base/common/lifecycle';\nimport { Mimes } from '../../../base/common/mime';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../platform/configuration/common/configurationRegistry';\n\n// Define extension point ids\nexport const Extensions = {\n\tModesRegistry: 'editor.modesRegistry'\n};\n\nexport class EditorModesRegistry {\n\n\tprivate readonly _languages: ILanguageExtensionPoint[];\n\n\tprivate readonly _onDidChangeLanguages = new Emitter<void>();\n\tpublic readonly onDidChangeLanguages: Event<void> = this._onDidChangeLanguages.event;\n\n\tconstructor() {\n\t\tthis._languages = [];\n\t}\n\n\tpublic registerLanguage(def: ILanguageExtensionPoint): IDisposable {\n\t\tthis._languages.push(def);\n\t\tthis._onDidChangeLanguages.fire(undefined);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0, len = this._languages.length; i < len; i++) {\n\t\t\t\t\tif (this._languages[i] === def) {\n\t\t\t\t\t\tthis._languages.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLanguages(): ReadonlyArray<ILanguageExtensionPoint> {\n\t\treturn this._languages;\n\t}\n}\n\nexport const ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\n\nexport const PLAINTEXT_LANGUAGE_ID = 'plaintext';\nexport const PLAINTEXT_EXTENSION = '.txt';\n\nModesRegistry.registerLanguage({\n\tid: PLAINTEXT_LANGUAGE_ID,\n\textensions: [PLAINTEXT_EXTENSION],\n\taliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n\tmimetypes: [Mimes.text]\n});\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerDefaultConfigurations([{\n\t\toverrides: {\n\t\t\t'[plaintext]': {\n\t\t\t\t'editor.unicodeHighlight.ambiguousCharacters': false,\n\t\t\t\t'editor.unicodeHighlight.invisibleCharacters': false\n\t\t\t}\n\t\t}\n\t}]);\n"]}