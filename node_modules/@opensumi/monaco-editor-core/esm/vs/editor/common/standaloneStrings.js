"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.StandaloneServicesNLS = exports.ToggleHighContrastNLS = exports.StandaloneCodeEditorNLS = exports.QuickOutlineNLS = exports.QuickCommandNLS = exports.QuickHelpNLS = exports.GoToLineNLS = exports.InspectTokensNLS = exports.AccessibilityHelpNLS = void 0;
const nls = require("../../nls");
var AccessibilityHelpNLS;
(function (AccessibilityHelpNLS) {
    AccessibilityHelpNLS.accessibilityHelpTitle = nls.localize("vs/editor/common/standaloneStrings",0, "Accessibility Help");
    AccessibilityHelpNLS.openingDocs = nls.localize("vs/editor/common/standaloneStrings",1, "Opening the Accessibility documentation page.");
    AccessibilityHelpNLS.readonlyDiffEditor = nls.localize("vs/editor/common/standaloneStrings",2, "You are in a read-only pane of a diff editor.");
    AccessibilityHelpNLS.editableDiffEditor = nls.localize("vs/editor/common/standaloneStrings",3, "You are in a pane of a diff editor.");
    AccessibilityHelpNLS.readonlyEditor = nls.localize("vs/editor/common/standaloneStrings",4, "You are in a read-only code editor.");
    AccessibilityHelpNLS.editableEditor = nls.localize("vs/editor/common/standaloneStrings",5, "You are in a code editor.");
    AccessibilityHelpNLS.changeConfigToOnMac = nls.localize("vs/editor/common/standaloneStrings",6, "Configure the application to be optimized for usage with a Screen Reader (Command+E).");
    AccessibilityHelpNLS.changeConfigToOnWinLinux = nls.localize("vs/editor/common/standaloneStrings",7, "Configure the application to be optimized for usage with a Screen Reader (Control+E).");
    AccessibilityHelpNLS.auto_on = nls.localize("vs/editor/common/standaloneStrings",8, "The application is configured to be optimized for usage with a Screen Reader.");
    AccessibilityHelpNLS.auto_off = nls.localize("vs/editor/common/standaloneStrings",9, "The application is configured to never be optimized for usage with a Screen Reader.");
    AccessibilityHelpNLS.screenReaderModeEnabled = nls.localize("vs/editor/common/standaloneStrings",10, "Screen Reader Optimized Mode enabled.");
    AccessibilityHelpNLS.screenReaderModeDisabled = nls.localize("vs/editor/common/standaloneStrings",11, "Screen Reader Optimized Mode disabled.");
    AccessibilityHelpNLS.tabFocusModeOnMsg = nls.localize("vs/editor/common/standaloneStrings",12, "Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior {0}.");
    AccessibilityHelpNLS.tabFocusModeOnMsgNoKb = nls.localize("vs/editor/common/standaloneStrings",13, "Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.");
    AccessibilityHelpNLS.stickScrollKb = nls.localize("vs/editor/common/standaloneStrings",14, "Focus Sticky Scroll ({0}) to focus the currently nested scopes.");
    AccessibilityHelpNLS.stickScrollNoKb = nls.localize("vs/editor/common/standaloneStrings",15, "Focus Sticky Scroll to focus the currently nested scopes. It is currently not triggerable by a keybinding.");
    AccessibilityHelpNLS.tabFocusModeOffMsg = nls.localize("vs/editor/common/standaloneStrings",16, "Pressing Tab in the current editor will insert the tab character. Toggle this behavior {0}.");
    AccessibilityHelpNLS.tabFocusModeOffMsgNoKb = nls.localize("vs/editor/common/standaloneStrings",17, "Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.");
    AccessibilityHelpNLS.showAccessibilityHelpAction = nls.localize("vs/editor/common/standaloneStrings",18, "Show Accessibility Help");
    AccessibilityHelpNLS.listSignalSounds = nls.localize("vs/editor/common/standaloneStrings",19, "Run the command: List Signal Sounds for an overview of all sounds and their current status.");
    AccessibilityHelpNLS.listAlerts = nls.localize("vs/editor/common/standaloneStrings",20, "Run the command: List Signal Announcements for an overview of announcements and their current status.");
    AccessibilityHelpNLS.quickChat = nls.localize("vs/editor/common/standaloneStrings",21, "Toggle quick chat ({0}) to open or close a chat session.");
    AccessibilityHelpNLS.quickChatNoKb = nls.localize("vs/editor/common/standaloneStrings",22, "Toggle quick chat is not currently triggerable by a keybinding.");
    AccessibilityHelpNLS.startInlineChat = nls.localize("vs/editor/common/standaloneStrings",23, "Start inline chat ({0}) to create an in editor chat session.");
    AccessibilityHelpNLS.startInlineChatNoKb = nls.localize("vs/editor/common/standaloneStrings",24, "The command: Start inline chat is not currentlyt riggerable by a keybinding.");
})(AccessibilityHelpNLS || (exports.AccessibilityHelpNLS = AccessibilityHelpNLS = {}));
var InspectTokensNLS;
(function (InspectTokensNLS) {
    InspectTokensNLS.inspectTokensAction = nls.localize("vs/editor/common/standaloneStrings",25, "Developer: Inspect Tokens");
})(InspectTokensNLS || (exports.InspectTokensNLS = InspectTokensNLS = {}));
var GoToLineNLS;
(function (GoToLineNLS) {
    GoToLineNLS.gotoLineActionLabel = nls.localize("vs/editor/common/standaloneStrings",26, "Go to Line/Column...");
})(GoToLineNLS || (exports.GoToLineNLS = GoToLineNLS = {}));
var QuickHelpNLS;
(function (QuickHelpNLS) {
    QuickHelpNLS.helpQuickAccessActionLabel = nls.localize("vs/editor/common/standaloneStrings",27, "Show all Quick Access Providers");
})(QuickHelpNLS || (exports.QuickHelpNLS = QuickHelpNLS = {}));
var QuickCommandNLS;
(function (QuickCommandNLS) {
    QuickCommandNLS.quickCommandActionLabel = nls.localize("vs/editor/common/standaloneStrings",28, "Command Palette");
    QuickCommandNLS.quickCommandHelp = nls.localize("vs/editor/common/standaloneStrings",29, "Show And Run Commands");
})(QuickCommandNLS || (exports.QuickCommandNLS = QuickCommandNLS = {}));
var QuickOutlineNLS;
(function (QuickOutlineNLS) {
    QuickOutlineNLS.quickOutlineActionLabel = nls.localize("vs/editor/common/standaloneStrings",30, "Go to Symbol...");
    QuickOutlineNLS.quickOutlineByCategoryActionLabel = nls.localize("vs/editor/common/standaloneStrings",31, "Go to Symbol by Category...");
})(QuickOutlineNLS || (exports.QuickOutlineNLS = QuickOutlineNLS = {}));
var StandaloneCodeEditorNLS;
(function (StandaloneCodeEditorNLS) {
    StandaloneCodeEditorNLS.editorViewAccessibleLabel = nls.localize("vs/editor/common/standaloneStrings",32, "Editor content");
    StandaloneCodeEditorNLS.accessibilityHelpMessage = nls.localize("vs/editor/common/standaloneStrings",33, "Press Alt+F1 for Accessibility Options.");
})(StandaloneCodeEditorNLS || (exports.StandaloneCodeEditorNLS = StandaloneCodeEditorNLS = {}));
var ToggleHighContrastNLS;
(function (ToggleHighContrastNLS) {
    ToggleHighContrastNLS.toggleHighContrast = nls.localize("vs/editor/common/standaloneStrings",34, "Toggle High Contrast Theme");
})(ToggleHighContrastNLS || (exports.ToggleHighContrastNLS = ToggleHighContrastNLS = {}));
var StandaloneServicesNLS;
(function (StandaloneServicesNLS) {
    StandaloneServicesNLS.bulkEditServiceSummary = nls.localize("vs/editor/common/standaloneStrings",35, "Made {0} edits in {1} files");
})(StandaloneServicesNLS || (exports.StandaloneServicesNLS = StandaloneServicesNLS = {}));
//# sourceMappingURL=standaloneStrings.js.map