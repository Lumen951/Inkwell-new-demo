{"version":3,"sources":["vs/platform/quickinput/browser/quickInputUtils.ts"],"names":[],"mappings":"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","file":"quickInputUtils.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom';\nimport { DomEmitter } from '../../../base/browser/event';\nimport { Event } from '../../../base/common/event';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent';\nimport { Gesture, EventType as GestureEventType } from '../../../base/browser/touch';\nimport { renderLabelWithIcons } from '../../../base/browser/ui/iconLabel/iconLabels';\nimport { IdGenerator } from '../../../base/common/idGenerator';\nimport { KeyCode } from '../../../base/common/keyCodes';\nimport { parseLinkedText } from '../../../base/common/linkedText';\nimport { URI } from '../../../base/common/uri';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls';\nimport { DisposableStore } from '../../../base/common/lifecycle';\nimport { IQuickInputButton } from '../common/quickInput';\nimport { IAction } from '../../../base/common/actions';\n\nconst iconPathToClass: Record<string, string> = {};\nconst iconClassGenerator = new IdGenerator('quick-input-button-icon-');\n\nfunction getIconClass(iconPath: { dark: URI; light?: URI } | undefined): string | undefined {\n\tif (!iconPath) {\n\t\treturn undefined;\n\t}\n\tlet iconClass: string;\n\n\tconst key = iconPath.dark.toString();\n\tif (iconPathToClass[key]) {\n\t\ticonClass = iconPathToClass[key];\n\t} else {\n\t\ticonClass = iconClassGenerator.nextId();\n\t\tdom.createCSSRule(`.${iconClass}, .hc-light .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.light || iconPath.dark)}`);\n\t\tdom.createCSSRule(`.vs-dark .${iconClass}, .hc-black .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.dark)}`);\n\t\ticonPathToClass[key] = iconClass;\n\t}\n\n\treturn iconClass;\n}\n\nexport function quickInputButtonToAction(button: IQuickInputButton, id: string, run: () => unknown): IAction {\n\tlet cssClasses = button.iconClass || getIconClass(button.iconPath);\n\tif (button.alwaysVisible) {\n\t\tcssClasses = cssClasses ? `${cssClasses} always-visible` : 'always-visible';\n\t}\n\n\treturn {\n\t\tid,\n\t\tlabel: '',\n\t\ttooltip: button.tooltip || '',\n\t\tclass: cssClasses,\n\t\tenabled: true,\n\t\trun\n\t};\n}\n\nexport function renderQuickInputDescription(description: string, container: HTMLElement, actionHandler: { callback: (content: string) => void; disposables: DisposableStore }) {\n\tdom.reset(container);\n\tconst parsed = parseLinkedText(description);\n\tlet tabIndex = 0;\n\tfor (const node of parsed.nodes) {\n\t\tif (typeof node === 'string') {\n\t\t\tcontainer.append(...renderLabelWithIcons(node));\n\t\t} else {\n\t\t\tlet title = node.title;\n\n\t\t\tif (!title && node.href.startsWith('command:')) {\n\t\t\t\ttitle = localize('executeCommand', \"Click to execute command '{0}'\", node.href.substring('command:'.length));\n\t\t\t} else if (!title) {\n\t\t\t\ttitle = node.href;\n\t\t\t}\n\n\t\t\tconst anchor = dom.$('a', { href: node.href, title, tabIndex: tabIndex++ }, node.label);\n\t\t\tanchor.style.textDecoration = 'underline';\n\t\t\tconst handleOpen = (e: unknown) => {\n\t\t\t\tif (dom.isEventLike(e)) {\n\t\t\t\t\tdom.EventHelper.stop(e, true);\n\t\t\t\t}\n\n\t\t\t\tactionHandler.callback(node.href);\n\t\t\t};\n\n\t\t\tconst onClick = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.CLICK)).event;\n\t\t\tconst onKeydown = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.KEY_DOWN)).event;\n\t\t\tconst onSpaceOrEnter = Event.chain(onKeydown, $ => $.filter(e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\t\treturn event.equals(KeyCode.Space) || event.equals(KeyCode.Enter);\n\t\t\t}));\n\n\t\t\tactionHandler.disposables.add(Gesture.addTarget(anchor));\n\t\t\tconst onTap = actionHandler.disposables.add(new DomEmitter(anchor, GestureEventType.Tap)).event;\n\n\t\t\tEvent.any(onClick, onTap, onSpaceOrEnter)(handleOpen, null, actionHandler.disposables);\n\t\t\tcontainer.appendChild(anchor);\n\t\t}\n\t}\n}\n"]}