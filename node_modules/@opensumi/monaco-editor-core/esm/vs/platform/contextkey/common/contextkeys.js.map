{"version":3,"sources":["vs/platform/contextkey/common/contextkeys.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4DAAwG;AACxG,sCAAwC;AACxC,6CAA6C;AAEhC,QAAA,YAAY,GAAG,IAAI,0BAAa,CAAU,OAAO,EAAE,sBAAW,EAAE,IAAA,cAAQ,EAAC,4CAAO,EAAE,uCAAuC,CAAC,CAAC,CAAC;AAC5H,QAAA,cAAc,GAAG,IAAI,0BAAa,CAAU,SAAS,EAAE,kBAAO,EAAE,IAAA,cAAQ,EAAC,SAAS,EAAE,uCAAuC,CAAC,CAAC,CAAC;AAC9H,QAAA,gBAAgB,GAAG,IAAI,0BAAa,CAAU,WAAW,EAAE,oBAAS,EAAE,IAAA,cAAQ,EAAC,WAAW,EAAE,yCAAyC,CAAC,CAAC,CAAC;AAExI,QAAA,YAAY,GAAG,IAAI,0BAAa,CAAU,OAAO,EAAE,gBAAK,EAAE,IAAA,cAAQ,EAAC,OAAO,EAAE,uCAAuC,CAAC,CAAC,CAAC;AACtH,QAAA,kBAAkB,GAAG,IAAI,0BAAa,CAAU,aAAa,EAAE,sBAAW,IAAI,CAAC,gBAAK,EAAE,IAAA,cAAQ,EAAC,aAAa,EAAE,iEAAiE,CAAC,CAAC,CAAC;AAClL,QAAA,YAAY,GAAG,IAAI,0BAAa,CAAU,OAAO,EAAE,gBAAK,EAAE,IAAA,cAAQ,EAAC,OAAO,EAAE,qCAAqC,CAAC,CAAC,CAAC;AACpH,QAAA,eAAe,GAAG,IAAI,0BAAa,CAAU,UAAU,EAAE,mBAAQ,EAAE,IAAA,cAAQ,EAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC,CAAC;AAEzI,QAAA,oBAAoB,GAAG,IAAI,0BAAa,CAAU,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAChF,QAAA,qBAAqB,GAAG,IAAI,0BAAa,CAAS,oBAAoB,EAAE,EAAE,EAAE,IAAA,cAAQ,EAAC,oBAAoB,EAAE,yBAAyB,CAAC,CAAC,CAAC;AAEvI,QAAA,sBAAsB,GAAG,YAAY,CAAC;AACtC,QAAA,mBAAmB,GAAG,IAAI,0BAAa,CAAU,8BAAsB,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,YAAY,EAAE,+CAA+C,CAAC,CAAC,CAAC","file":"contextkeys.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform';\nimport { localize } from '../../../nls';\nimport { RawContextKey } from './contextkey';\n\nexport const IsMacContext = new RawContextKey<boolean>('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey<boolean>('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey<boolean>('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\n\nexport const IsWebContext = new RawContextKey<boolean>('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey<boolean>('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey<boolean>('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey<boolean>('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\n\nexport const IsDevelopmentContext = new RawContextKey<boolean>('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey<string>('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\n\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey<boolean>(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n"]}