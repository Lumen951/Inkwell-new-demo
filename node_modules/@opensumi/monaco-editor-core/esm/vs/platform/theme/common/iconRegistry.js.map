{"version":3,"sources":["vs/platform/theme/common/iconRegistry.ts"],"names":[],"mappings":"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","file":"iconRegistry.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../base/common/async';\nimport { Codicon, getCodiconFontCharacters } from '../../../base/common/codicons';\nimport { ThemeIcon, IconIdentifier } from '../../../base/common/themables';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { IJSONSchema, IJSONSchemaMap } from '../../../base/common/jsonSchema';\nimport { isString } from '../../../base/common/types';\nimport { URI } from '../../../base/common/uri';\nimport { localize } from '../../../nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from '../../jsonschemas/common/jsonContributionRegistry';\nimport * as platform from '../../registry/common/platform';\n\n//  ------ API types\n\n\n// icon registry\nexport const Extensions = {\n\tIconContribution: 'base.contributions.icons'\n};\n\nexport type IconDefaults = ThemeIcon | IconDefinition;\n\nexport interface IconDefinition {\n\tfont?: IconFontContribution; // undefined for the default font (codicon)\n\tfontCharacter: string;\n}\n\n\nexport interface IconContribution {\n\treadonly id: string;\n\tdescription: string | undefined;\n\tdeprecationMessage?: string;\n\treadonly defaults: IconDefaults;\n}\n\nexport namespace IconContribution {\n\texport function getDefinition(contribution: IconContribution, registry: IIconRegistry): IconDefinition | undefined {\n\t\tlet definition = contribution.defaults;\n\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\tif (!c) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdefinition = c.defaults;\n\t\t}\n\t\treturn definition;\n\t}\n}\n\nexport interface IconFontContribution {\n\treadonly id: string;\n\treadonly definition: IconFontDefinition;\n}\n\nexport interface IconFontDefinition {\n\treadonly weight?: string;\n\treadonly style?: string;\n\treadonly src: IconFontSource[];\n}\n\nexport namespace IconFontDefinition {\n\texport function toJSONObject(iconFont: IconFontDefinition): any {\n\t\treturn {\n\t\t\tweight: iconFont.weight,\n\t\t\tstyle: iconFont.style,\n\t\t\tsrc: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n\t\t};\n\t}\n\texport function fromJSONObject(json: any): IconFontDefinition | undefined {\n\t\tconst stringOrUndef = (s: any) => isString(s) ? s : undefined;\n\t\tif (json && Array.isArray(json.src) && json.src.every((s: any) => isString(s.format) && isString(s.location))) {\n\t\t\treturn {\n\t\t\t\tweight: stringOrUndef(json.weight),\n\t\t\t\tstyle: stringOrUndef(json.style),\n\t\t\t\tsrc: json.src.map((s: any) => ({ format: s.format, location: URI.parse(s.location) }))\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nexport interface IconFontSource {\n\treadonly location: URI;\n\treadonly format: string;\n}\n\nexport interface IIconRegistry {\n\n\treadonly onDidChange: Event<void>;\n\n\t/**\n\t * Register a icon to the registry.\n\t * @param id The icon id\n\t * @param defaults The default values\n\t * @param description The description\n\t */\n\tregisterIcon(id: IconIdentifier, defaults: IconDefaults, description?: string): ThemeIcon;\n\n\t/**\n\t * Deregister a icon from the registry.\n\t */\n\tderegisterIcon(id: IconIdentifier): void;\n\n\t/**\n\t * Get all icon contributions\n\t */\n\tgetIcons(): IconContribution[];\n\n\t/**\n\t * Get the icon for the given id\n\t */\n\tgetIcon(id: IconIdentifier): IconContribution | undefined;\n\n\t/**\n\t * JSON schema for an object to assign icon values to one of the icon contributions.\n\t */\n\tgetIconSchema(): IJSONSchema;\n\n\t/**\n\t * JSON schema to for a reference to a icon contribution.\n\t */\n\tgetIconReferenceSchema(): IJSONSchema;\n\n\t/**\n\t * Register a icon font to the registry.\n\t * @param id The icon font id\n\t * @param definition The icon font definition\n\t */\n\tregisterIconFont(id: string, definition: IconFontDefinition): IconFontDefinition;\n\n\t/**\n\t * Deregister an icon font to the registry.\n\t */\n\tderegisterIconFont(id: string): void;\n\n\t/**\n\t * Get the icon font for the given id\n\t */\n\tgetIconFont(id: string): IconFontDefinition | undefined;\n}\n\nclass IconRegistry implements IIconRegistry {\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate iconsById: { [key: string]: IconContribution };\n\tprivate iconSchema: IJSONSchema & { properties: IJSONSchemaMap } = {\n\t\tdefinitions: {\n\t\t\ticons: {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\tfontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n\t\t\t\t\tfontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n\t\t\t\t},\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdefaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n\t\t\t}\n\t\t},\n\t\ttype: 'object',\n\t\tproperties: {}\n\t};\n\tprivate iconReferenceSchema: IJSONSchema & { enum: string[]; enumDescriptions: string[] } = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n\n\tprivate iconFontsById: { [key: string]: IconFontDefinition };\n\n\tconstructor() {\n\t\tthis.iconsById = {};\n\t\tthis.iconFontsById = {};\n\t}\n\n\tpublic registerIcon(id: string, defaults: IconDefaults, description?: string, deprecationMessage?: string): ThemeIcon {\n\t\tconst existing = this.iconsById[id];\n\t\tif (existing) {\n\t\t\tif (description && !existing.description) {\n\t\t\t\texisting.description = description;\n\t\t\t\tthis.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n\t\t\t\tconst enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n\t\t\t\tif (enumIndex !== -1) {\n\t\t\t\t\tthis.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n\t\t\t\t}\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t\treturn existing;\n\t\t}\n\t\tconst iconContribution: IconContribution = { id, description, defaults, deprecationMessage };\n\t\tthis.iconsById[id] = iconContribution;\n\t\tconst propertySchema: IJSONSchema = { $ref: '#/definitions/icons' };\n\t\tif (deprecationMessage) {\n\t\t\tpropertySchema.deprecationMessage = deprecationMessage;\n\t\t}\n\t\tif (description) {\n\t\t\tpropertySchema.markdownDescription = `${description}: $(${id})`;\n\t\t}\n\t\tthis.iconSchema.properties[id] = propertySchema;\n\t\tthis.iconReferenceSchema.enum.push(id);\n\t\tthis.iconReferenceSchema.enumDescriptions.push(description || '');\n\n\t\tthis._onDidChange.fire();\n\t\treturn { id };\n\t}\n\n\n\tpublic deregisterIcon(id: string): void {\n\t\tdelete this.iconsById[id];\n\t\tdelete this.iconSchema.properties[id];\n\t\tconst index = this.iconReferenceSchema.enum.indexOf(id);\n\t\tif (index !== -1) {\n\t\t\tthis.iconReferenceSchema.enum.splice(index, 1);\n\t\t\tthis.iconReferenceSchema.enumDescriptions.splice(index, 1);\n\t\t}\n\t\tthis._onDidChange.fire();\n\t}\n\n\tpublic getIcons(): IconContribution[] {\n\t\treturn Object.keys(this.iconsById).map(id => this.iconsById[id]);\n\t}\n\n\tpublic getIcon(id: string): IconContribution | undefined {\n\t\treturn this.iconsById[id];\n\t}\n\n\tpublic getIconSchema(): IJSONSchema {\n\t\treturn this.iconSchema;\n\t}\n\n\tpublic getIconReferenceSchema(): IJSONSchema {\n\t\treturn this.iconReferenceSchema;\n\t}\n\n\tpublic registerIconFont(id: string, definition: IconFontDefinition): IconFontDefinition {\n\t\tconst existing = this.iconFontsById[id];\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tthis.iconFontsById[id] = definition;\n\t\tthis._onDidChange.fire();\n\t\treturn definition;\n\t}\n\n\tpublic deregisterIconFont(id: string): void {\n\t\tdelete this.iconFontsById[id];\n\t}\n\n\tpublic getIconFont(id: string): IconFontDefinition | undefined {\n\t\treturn this.iconFontsById[id];\n\t}\n\n\tpublic toString() {\n\t\tconst sorter = (i1: IconContribution, i2: IconContribution) => {\n\t\t\treturn i1.id.localeCompare(i2.id);\n\t\t};\n\t\tconst classNames = (i: IconContribution) => {\n\t\t\twhile (ThemeIcon.isThemeIcon(i.defaults)) {\n\t\t\t\ti = this.iconsById[i.defaults.id];\n\t\t\t}\n\t\t\treturn `codicon codicon-${i ? i.id : ''}`;\n\t\t};\n\n\t\tconst reference = [];\n\n\t\treference.push(`| preview     | identifier                        | default codicon ID                | description`);\n\t\treference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n\t\tconst contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n\n\t\tfor (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n\t\t\treference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n\t\t}\n\n\t\treference.push(`| preview     | identifier                        `);\n\t\treference.push(`| ----------- | --------------------------------- |`);\n\n\t\tfor (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n\t\t\treference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n\n\t\t}\n\n\t\treturn reference.join('\\n');\n\t}\n\n}\n\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\n\nexport function registerIcon(id: string, defaults: IconDefaults, description: string, deprecationMessage?: string): ThemeIcon {\n\treturn iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\n\nexport function getIconRegistry(): IIconRegistry {\n\treturn iconRegistry;\n}\n\nfunction initialize() {\n\tconst codiconFontCharacters = getCodiconFontCharacters();\n\tfor (const icon in codiconFontCharacters) {\n\t\tconst fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n\t\ticonRegistry.registerIcon(icon, { fontCharacter });\n\t}\n}\ninitialize();\n\nexport const iconsSchemaId = 'vscode://schemas/icons';\n\nconst schemaRegistry = platform.Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\n\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n\tif (!delayer.isScheduled()) {\n\t\tdelayer.schedule();\n\t}\n});\n\n\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n\n\n// common icons\n\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\n\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\n\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n"]}