{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/platform/theme/browser/iconsStyleSheet.ts","vs/platform/theme/browser/iconsStyleSheet.ts"],"names":[],"mappings":"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","file":"iconsStyleSheet.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle';\nimport { ThemeIcon } from '../../../base/common/themables';\nimport { getIconRegistry, IconContribution, IconFontDefinition } from '../common/iconRegistry';\nimport { IProductIconTheme, IThemeService } from '../common/themeService';\n\nexport interface IIconsStyleSheet extends IDisposable {\n\tgetCSS(): string;\n\treadonly onDidChange: Event<void>;\n}\n\nexport function getIconsStyleSheet(themeService: IThemeService | undefined): IIconsStyleSheet {\n\tconst disposable = new DisposableStore();\n\n\tconst onDidChangeEmmiter = disposable.add(new Emitter<void>());\n\tconst iconRegistry = getIconRegistry();\n\tdisposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n\tif (themeService) {\n\t\tdisposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n\t}\n\n\treturn {\n\t\tdispose: () => disposable.dispose(),\n\t\tonDidChange: onDidChangeEmmiter.event,\n\t\tgetCSS() {\n\t\t\tconst productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n\t\t\tconst usedFontIds: { [id: string]: IconFontDefinition } = {};\n\t\t\tconst formatIconRule = (contribution: IconContribution): string | undefined => {\n\t\t\t\tconst definition = productIconTheme.getIcon(contribution);\n\t\t\t\tif (!definition) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst fontContribution = definition.font;\n\t\t\t\tif (fontContribution) {\n\t\t\t\t\tusedFontIds[fontContribution.id] = fontContribution.definition;\n\t\t\t\t\treturn `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n\t\t\t\t}\n\t\t\t\t// default font (codicon)\n\t\t\t\treturn `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n\t\t\t};\n\n\t\t\tconst rules = [];\n\t\t\tfor (const contribution of iconRegistry.getIcons()) {\n\t\t\t\tconst rule = formatIconRule(contribution);\n\t\t\t\tif (rule) {\n\t\t\t\t\trules.push(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const id in usedFontIds) {\n\t\t\t\tconst definition = usedFontIds[id];\n\t\t\t\tconst fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n\t\t\t\tconst fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n\t\t\t\tconst src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n\t\t\t\trules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n\t\t\t}\n\t\t\treturn rules.join('\\n');\n\t\t}\n\t};\n}\n\nexport class UnthemedProductIconTheme implements IProductIconTheme {\n\tgetIcon(contribution: IconContribution) {\n\t\tconst iconRegistry = getIconRegistry();\n\t\tlet definition = contribution.defaults;\n\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\tif (!c) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdefinition = c.defaults;\n\t\t}\n\t\treturn definition;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle';\nimport { ThemeIcon } from '../../../base/common/themables';\nimport { getIconRegistry, IconContribution, IconFontDefinition } from '../common/iconRegistry';\nimport { IProductIconTheme, IThemeService } from '../common/themeService';\n\nexport interface IIconsStyleSheet extends IDisposable {\n\tgetCSS(): string;\n\treadonly onDidChange: Event<void>;\n}\n\nexport function getIconsStyleSheet(themeService: IThemeService | undefined): IIconsStyleSheet {\n\tconst disposable = new DisposableStore();\n\n\tconst onDidChangeEmmiter = disposable.add(new Emitter<void>());\n\tconst iconRegistry = getIconRegistry();\n\tdisposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n\tif (themeService) {\n\t\tdisposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n\t}\n\n\treturn {\n\t\tdispose: () => disposable.dispose(),\n\t\tonDidChange: onDidChangeEmmiter.event,\n\t\tgetCSS() {\n\t\t\tconst productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n\t\t\tconst usedFontIds: { [id: string]: IconFontDefinition } = {};\n\t\t\tconst formatIconRule = (contribution: IconContribution): string | undefined => {\n\t\t\t\tconst definition = productIconTheme.getIcon(contribution);\n\t\t\t\tif (!definition) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst fontContribution = definition.font;\n\t\t\t\tif (fontContribution) {\n\t\t\t\t\tusedFontIds[fontContribution.id] = fontContribution.definition;\n\t\t\t\t\treturn `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n\t\t\t\t}\n\t\t\t\t// default font (codicon)\n\t\t\t\treturn `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n\t\t\t};\n\n\t\t\tconst rules = [];\n\t\t\tfor (const contribution of iconRegistry.getIcons()) {\n\t\t\t\tconst rule = formatIconRule(contribution);\n\t\t\t\tif (rule) {\n\t\t\t\t\trules.push(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const id in usedFontIds) {\n\t\t\t\tconst definition = usedFontIds[id];\n\t\t\t\tconst fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n\t\t\t\tconst fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n\t\t\t\tconst src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n\t\t\t\trules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n\t\t\t}\n\t\t\treturn rules.join('\\n');\n\t\t}\n\t};\n}\n\nexport class UnthemedProductIconTheme implements IProductIconTheme {\n\tgetIcon(contribution: IconContribution) {\n\t\tconst iconRegistry = getIconRegistry();\n\t\tlet definition = contribution.defaults;\n\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\tif (!c) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdefinition = c.defaults;\n\t\t}\n\t\treturn definition;\n\t}\n}\n"]}