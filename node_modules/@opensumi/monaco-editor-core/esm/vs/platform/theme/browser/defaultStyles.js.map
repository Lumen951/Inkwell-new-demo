{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/platform/theme/browser/defaultStyles.ts","vs/platform/theme/browser/defaultStyles.ts"],"names":[],"mappings":"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","file":"defaultStyles.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IButtonStyles } from '../../../base/browser/ui/button/button';\nimport { IKeybindingLabelStyles } from '../../../base/browser/ui/keybindingLabel/keybindingLabel';\nimport { ColorIdentifier, keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropOverBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, listDropBetweenBackground } from '../common/colorRegistry';\nimport { IProgressBarStyles } from '../../../base/browser/ui/progressbar/progressbar';\nimport { ICheckboxStyles, IToggleStyles } from '../../../base/browser/ui/toggle/toggle';\nimport { IDialogStyles } from '../../../base/browser/ui/dialog/dialog';\nimport { IInputBoxStyles } from '../../../base/browser/ui/inputbox/inputBox';\nimport { IFindWidgetStyles } from '../../../base/browser/ui/tree/abstractTree';\nimport { ICountBadgeStyles } from '../../../base/browser/ui/countBadge/countBadge';\nimport { IBreadcrumbsWidgetStyles } from '../../../base/browser/ui/breadcrumbs/breadcrumbsWidget';\nimport { IListStyles } from '../../../base/browser/ui/list/listWidget';\nimport { ISelectBoxStyles } from '../../../base/browser/ui/selectBox/selectBox';\nimport { Color } from '../../../base/common/color';\nimport { IMenuStyles } from '../../../base/browser/ui/menu/menu';\n\nexport type IStyleOverride<T> = {\n\t[P in keyof T]?: ColorIdentifier | undefined;\n};\n\nfunction overrideStyles<T>(override: IStyleOverride<T>, styles: T): any {\n\tconst result = { ...styles } as { [P in keyof T]: string | undefined };\n\tfor (const key in override) {\n\t\tconst val = override[key];\n\t\tresult[key] = val !== undefined ? asCssVariable(val) : undefined;\n\t}\n\treturn result;\n}\n\nexport const defaultKeybindingLabelStyles: IKeybindingLabelStyles = {\n\tkeybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n\tkeybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n\tkeybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n\tkeybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n\tkeybindingLabelShadow: asCssVariable(widgetShadow)\n};\n\nexport function getKeybindingLabelStyles(override: IStyleOverride<IKeybindingLabelStyles>): IKeybindingLabelStyles {\n\treturn overrideStyles(override, defaultKeybindingLabelStyles);\n}\nexport const defaultButtonStyles: IButtonStyles = {\n\tbuttonForeground: asCssVariable(buttonForeground),\n\tbuttonSeparator: asCssVariable(buttonSeparator),\n\tbuttonBackground: asCssVariable(buttonBackground),\n\tbuttonHoverBackground: asCssVariable(buttonHoverBackground),\n\tbuttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n\tbuttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n\tbuttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n\tbuttonBorder: asCssVariable(buttonBorder),\n};\n\nexport function getButtonStyles(override: IStyleOverride<IButtonStyles>): IButtonStyles {\n\treturn overrideStyles(override, defaultButtonStyles);\n}\n\nexport const defaultProgressBarStyles: IProgressBarStyles = {\n\tprogressBarBackground: asCssVariable(progressBarBackground)\n};\n\nexport function getProgressBarStyles(override: IStyleOverride<IProgressBarStyles>): IProgressBarStyles {\n\treturn overrideStyles(override, defaultProgressBarStyles);\n}\n\nexport const defaultToggleStyles: IToggleStyles = {\n\tinputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n\tinputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n\tinputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\n\nexport function getToggleStyles(override: IStyleOverride<IToggleStyles>): IToggleStyles {\n\treturn overrideStyles(override, defaultToggleStyles);\n}\n\nexport const defaultCheckboxStyles: ICheckboxStyles = {\n\tcheckboxBackground: asCssVariable(checkboxBackground),\n\tcheckboxBorder: asCssVariable(checkboxBorder),\n\tcheckboxForeground: asCssVariable(checkboxForeground)\n};\n\nexport function getCheckboxStyles(override: IStyleOverride<ICheckboxStyles>): ICheckboxStyles {\n\treturn overrideStyles(override, defaultCheckboxStyles);\n}\n\nexport const defaultDialogStyles: IDialogStyles = {\n\tdialogBackground: asCssVariable(editorWidgetBackground),\n\tdialogForeground: asCssVariable(editorWidgetForeground),\n\tdialogShadow: asCssVariable(widgetShadow),\n\tdialogBorder: asCssVariable(contrastBorder),\n\terrorIconForeground: asCssVariable(problemsErrorIconForeground),\n\twarningIconForeground: asCssVariable(problemsWarningIconForeground),\n\tinfoIconForeground: asCssVariable(problemsInfoIconForeground),\n\ttextLinkForeground: asCssVariable(textLinkForeground)\n};\n\nexport function getDialogStyle(override: IStyleOverride<IDialogStyles>): IDialogStyles {\n\treturn overrideStyles(override, defaultDialogStyles);\n}\n\nexport const defaultInputBoxStyles: IInputBoxStyles = {\n\tinputBackground: asCssVariable(inputBackground),\n\tinputForeground: asCssVariable(inputForeground),\n\tinputBorder: asCssVariable(inputBorder),\n\tinputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n\tinputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n\tinputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n\tinputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n\tinputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n\tinputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n\tinputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n\tinputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n\tinputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\n\nexport function getInputBoxStyle(override: IStyleOverride<IInputBoxStyles>): IInputBoxStyles {\n\treturn overrideStyles(override, defaultInputBoxStyles);\n}\n\nexport const defaultFindWidgetStyles: IFindWidgetStyles = {\n\tlistFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n\tlistFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n\tlistFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n\tlistFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n\tinputBoxStyles: defaultInputBoxStyles,\n\ttoggleStyles: defaultToggleStyles\n};\n\nexport const defaultCountBadgeStyles: ICountBadgeStyles = {\n\tbadgeBackground: asCssVariable(badgeBackground),\n\tbadgeForeground: asCssVariable(badgeForeground),\n\tbadgeBorder: asCssVariable(contrastBorder)\n};\n\nexport function getCountBadgeStyle(override: IStyleOverride<ICountBadgeStyles>): ICountBadgeStyles {\n\treturn overrideStyles(override, defaultCountBadgeStyles);\n}\n\nexport const defaultBreadcrumbsWidgetStyles: IBreadcrumbsWidgetStyles = {\n\tbreadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n\tbreadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n\tbreadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n\tbreadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n\tbreadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\n\nexport function getBreadcrumbsWidgetStyles(override: IStyleOverride<IBreadcrumbsWidgetStyles>): IBreadcrumbsWidgetStyles {\n\treturn overrideStyles(override, defaultBreadcrumbsWidgetStyles);\n}\n\nexport const defaultListStyles: IListStyles = {\n\tlistBackground: undefined,\n\tlistInactiveFocusForeground: undefined,\n\tlistFocusBackground: asCssVariable(listFocusBackground),\n\tlistFocusForeground: asCssVariable(listFocusForeground),\n\tlistFocusOutline: asCssVariable(listFocusOutline),\n\tlistActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n\tlistActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n\tlistActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n\tlistFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n\tlistFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n\tlistFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n\tlistInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n\tlistInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n\tlistInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n\tlistInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n\tlistInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n\tlistHoverBackground: asCssVariable(listHoverBackground),\n\tlistHoverForeground: asCssVariable(listHoverForeground),\n\tlistDropOverBackground: asCssVariable(listDropOverBackground),\n\tlistDropBetweenBackground: asCssVariable(listDropBetweenBackground),\n\tlistSelectionOutline: asCssVariable(activeContrastBorder),\n\tlistHoverOutline: asCssVariable(activeContrastBorder),\n\ttreeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n\ttreeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n\ttableColumnsBorder: asCssVariable(tableColumnsBorder),\n\ttableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\n\nexport function getListStyles(override: IStyleOverride<IListStyles>): IListStyles {\n\treturn overrideStyles(override, defaultListStyles);\n}\n\nexport const defaultSelectBoxStyles: ISelectBoxStyles = {\n\tselectBackground: asCssVariable(selectBackground),\n\tselectListBackground: asCssVariable(selectListBackground),\n\tselectForeground: asCssVariable(selectForeground),\n\tdecoratorRightForeground: asCssVariable(pickerGroupForeground),\n\tselectBorder: asCssVariable(selectBorder),\n\tfocusBorder: asCssVariable(focusBorder),\n\tlistFocusBackground: asCssVariable(quickInputListFocusBackground),\n\tlistInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n\tlistFocusForeground: asCssVariable(quickInputListFocusForeground),\n\tlistFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n\tlistHoverBackground: asCssVariable(listHoverBackground),\n\tlistHoverForeground: asCssVariable(listHoverForeground),\n\tlistHoverOutline: asCssVariable(activeContrastBorder),\n\tselectListBorder: asCssVariable(editorWidgetBorder),\n\tlistBackground: undefined,\n\tlistActiveSelectionBackground: undefined,\n\tlistActiveSelectionForeground: undefined,\n\tlistActiveSelectionIconForeground: undefined,\n\tlistFocusAndSelectionBackground: undefined,\n\tlistDropOverBackground: undefined,\n\tlistDropBetweenBackground: undefined,\n\tlistInactiveSelectionBackground: undefined,\n\tlistInactiveSelectionForeground: undefined,\n\tlistInactiveFocusBackground: undefined,\n\tlistInactiveFocusOutline: undefined,\n\tlistSelectionOutline: undefined,\n\tlistFocusAndSelectionForeground: undefined,\n\tlistFocusAndSelectionOutline: undefined,\n\tlistInactiveFocusForeground: undefined,\n\ttableColumnsBorder: undefined,\n\ttableOddRowsBackgroundColor: undefined,\n\ttreeIndentGuidesStroke: undefined,\n\ttreeInactiveIndentGuidesStroke: undefined,\n};\n\nexport function getSelectBoxStyles(override: IStyleOverride<ISelectBoxStyles>): ISelectBoxStyles {\n\treturn overrideStyles(override, defaultSelectBoxStyles);\n}\n\nexport const defaultMenuStyles: IMenuStyles = {\n\tshadowColor: asCssVariable(widgetShadow),\n\tborderColor: asCssVariable(menuBorder),\n\tforegroundColor: asCssVariable(menuForeground),\n\tbackgroundColor: asCssVariable(menuBackground),\n\tselectionForegroundColor: asCssVariable(menuSelectionForeground),\n\tselectionBackgroundColor: asCssVariable(menuSelectionBackground),\n\tselectionBorderColor: asCssVariable(menuSelectionBorder),\n\tseparatorColor: asCssVariable(menuSeparatorBackground),\n\tscrollbarShadow: asCssVariable(scrollbarShadow),\n\tscrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n\tscrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n\tscrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n\nexport function getMenuStyles(override: IStyleOverride<IMenuStyles>): IMenuStyles {\n\treturn overrideStyles(override, defaultMenuStyles);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IButtonStyles } from '../../../base/browser/ui/button/button';\nimport { IKeybindingLabelStyles } from '../../../base/browser/ui/keybindingLabel/keybindingLabel';\nimport { ColorIdentifier, keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropOverBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, listDropBetweenBackground } from '../common/colorRegistry';\nimport { IProgressBarStyles } from '../../../base/browser/ui/progressbar/progressbar';\nimport { ICheckboxStyles, IToggleStyles } from '../../../base/browser/ui/toggle/toggle';\nimport { IDialogStyles } from '../../../base/browser/ui/dialog/dialog';\nimport { IInputBoxStyles } from '../../../base/browser/ui/inputbox/inputBox';\nimport { IFindWidgetStyles } from '../../../base/browser/ui/tree/abstractTree';\nimport { ICountBadgeStyles } from '../../../base/browser/ui/countBadge/countBadge';\nimport { IBreadcrumbsWidgetStyles } from '../../../base/browser/ui/breadcrumbs/breadcrumbsWidget';\nimport { IListStyles } from '../../../base/browser/ui/list/listWidget';\nimport { ISelectBoxStyles } from '../../../base/browser/ui/selectBox/selectBox';\nimport { Color } from '../../../base/common/color';\nimport { IMenuStyles } from '../../../base/browser/ui/menu/menu';\n\nexport type IStyleOverride<T> = {\n\t[P in keyof T]?: ColorIdentifier | undefined;\n};\n\nfunction overrideStyles<T>(override: IStyleOverride<T>, styles: T): any {\n\tconst result = { ...styles } as { [P in keyof T]: string | undefined };\n\tfor (const key in override) {\n\t\tconst val = override[key];\n\t\tresult[key] = val !== undefined ? asCssVariable(val) : undefined;\n\t}\n\treturn result;\n}\n\nexport const defaultKeybindingLabelStyles: IKeybindingLabelStyles = {\n\tkeybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n\tkeybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n\tkeybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n\tkeybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n\tkeybindingLabelShadow: asCssVariable(widgetShadow)\n};\n\nexport function getKeybindingLabelStyles(override: IStyleOverride<IKeybindingLabelStyles>): IKeybindingLabelStyles {\n\treturn overrideStyles(override, defaultKeybindingLabelStyles);\n}\nexport const defaultButtonStyles: IButtonStyles = {\n\tbuttonForeground: asCssVariable(buttonForeground),\n\tbuttonSeparator: asCssVariable(buttonSeparator),\n\tbuttonBackground: asCssVariable(buttonBackground),\n\tbuttonHoverBackground: asCssVariable(buttonHoverBackground),\n\tbuttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n\tbuttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n\tbuttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n\tbuttonBorder: asCssVariable(buttonBorder),\n};\n\nexport function getButtonStyles(override: IStyleOverride<IButtonStyles>): IButtonStyles {\n\treturn overrideStyles(override, defaultButtonStyles);\n}\n\nexport const defaultProgressBarStyles: IProgressBarStyles = {\n\tprogressBarBackground: asCssVariable(progressBarBackground)\n};\n\nexport function getProgressBarStyles(override: IStyleOverride<IProgressBarStyles>): IProgressBarStyles {\n\treturn overrideStyles(override, defaultProgressBarStyles);\n}\n\nexport const defaultToggleStyles: IToggleStyles = {\n\tinputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n\tinputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n\tinputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\n\nexport function getToggleStyles(override: IStyleOverride<IToggleStyles>): IToggleStyles {\n\treturn overrideStyles(override, defaultToggleStyles);\n}\n\nexport const defaultCheckboxStyles: ICheckboxStyles = {\n\tcheckboxBackground: asCssVariable(checkboxBackground),\n\tcheckboxBorder: asCssVariable(checkboxBorder),\n\tcheckboxForeground: asCssVariable(checkboxForeground)\n};\n\nexport function getCheckboxStyles(override: IStyleOverride<ICheckboxStyles>): ICheckboxStyles {\n\treturn overrideStyles(override, defaultCheckboxStyles);\n}\n\nexport const defaultDialogStyles: IDialogStyles = {\n\tdialogBackground: asCssVariable(editorWidgetBackground),\n\tdialogForeground: asCssVariable(editorWidgetForeground),\n\tdialogShadow: asCssVariable(widgetShadow),\n\tdialogBorder: asCssVariable(contrastBorder),\n\terrorIconForeground: asCssVariable(problemsErrorIconForeground),\n\twarningIconForeground: asCssVariable(problemsWarningIconForeground),\n\tinfoIconForeground: asCssVariable(problemsInfoIconForeground),\n\ttextLinkForeground: asCssVariable(textLinkForeground)\n};\n\nexport function getDialogStyle(override: IStyleOverride<IDialogStyles>): IDialogStyles {\n\treturn overrideStyles(override, defaultDialogStyles);\n}\n\nexport const defaultInputBoxStyles: IInputBoxStyles = {\n\tinputBackground: asCssVariable(inputBackground),\n\tinputForeground: asCssVariable(inputForeground),\n\tinputBorder: asCssVariable(inputBorder),\n\tinputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n\tinputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n\tinputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n\tinputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n\tinputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n\tinputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n\tinputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n\tinputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n\tinputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\n\nexport function getInputBoxStyle(override: IStyleOverride<IInputBoxStyles>): IInputBoxStyles {\n\treturn overrideStyles(override, defaultInputBoxStyles);\n}\n\nexport const defaultFindWidgetStyles: IFindWidgetStyles = {\n\tlistFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n\tlistFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n\tlistFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n\tlistFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n\tinputBoxStyles: defaultInputBoxStyles,\n\ttoggleStyles: defaultToggleStyles\n};\n\nexport const defaultCountBadgeStyles: ICountBadgeStyles = {\n\tbadgeBackground: asCssVariable(badgeBackground),\n\tbadgeForeground: asCssVariable(badgeForeground),\n\tbadgeBorder: asCssVariable(contrastBorder)\n};\n\nexport function getCountBadgeStyle(override: IStyleOverride<ICountBadgeStyles>): ICountBadgeStyles {\n\treturn overrideStyles(override, defaultCountBadgeStyles);\n}\n\nexport const defaultBreadcrumbsWidgetStyles: IBreadcrumbsWidgetStyles = {\n\tbreadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n\tbreadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n\tbreadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n\tbreadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n\tbreadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\n\nexport function getBreadcrumbsWidgetStyles(override: IStyleOverride<IBreadcrumbsWidgetStyles>): IBreadcrumbsWidgetStyles {\n\treturn overrideStyles(override, defaultBreadcrumbsWidgetStyles);\n}\n\nexport const defaultListStyles: IListStyles = {\n\tlistBackground: undefined,\n\tlistInactiveFocusForeground: undefined,\n\tlistFocusBackground: asCssVariable(listFocusBackground),\n\tlistFocusForeground: asCssVariable(listFocusForeground),\n\tlistFocusOutline: asCssVariable(listFocusOutline),\n\tlistActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n\tlistActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n\tlistActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n\tlistFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n\tlistFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n\tlistFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n\tlistInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n\tlistInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n\tlistInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n\tlistInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n\tlistInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n\tlistHoverBackground: asCssVariable(listHoverBackground),\n\tlistHoverForeground: asCssVariable(listHoverForeground),\n\tlistDropOverBackground: asCssVariable(listDropOverBackground),\n\tlistDropBetweenBackground: asCssVariable(listDropBetweenBackground),\n\tlistSelectionOutline: asCssVariable(activeContrastBorder),\n\tlistHoverOutline: asCssVariable(activeContrastBorder),\n\ttreeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n\ttreeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n\ttableColumnsBorder: asCssVariable(tableColumnsBorder),\n\ttableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\n\nexport function getListStyles(override: IStyleOverride<IListStyles>): IListStyles {\n\treturn overrideStyles(override, defaultListStyles);\n}\n\nexport const defaultSelectBoxStyles: ISelectBoxStyles = {\n\tselectBackground: asCssVariable(selectBackground),\n\tselectListBackground: asCssVariable(selectListBackground),\n\tselectForeground: asCssVariable(selectForeground),\n\tdecoratorRightForeground: asCssVariable(pickerGroupForeground),\n\tselectBorder: asCssVariable(selectBorder),\n\tfocusBorder: asCssVariable(focusBorder),\n\tlistFocusBackground: asCssVariable(quickInputListFocusBackground),\n\tlistInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n\tlistFocusForeground: asCssVariable(quickInputListFocusForeground),\n\tlistFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n\tlistHoverBackground: asCssVariable(listHoverBackground),\n\tlistHoverForeground: asCssVariable(listHoverForeground),\n\tlistHoverOutline: asCssVariable(activeContrastBorder),\n\tselectListBorder: asCssVariable(editorWidgetBorder),\n\tlistBackground: undefined,\n\tlistActiveSelectionBackground: undefined,\n\tlistActiveSelectionForeground: undefined,\n\tlistActiveSelectionIconForeground: undefined,\n\tlistFocusAndSelectionBackground: undefined,\n\tlistDropOverBackground: undefined,\n\tlistDropBetweenBackground: undefined,\n\tlistInactiveSelectionBackground: undefined,\n\tlistInactiveSelectionForeground: undefined,\n\tlistInactiveFocusBackground: undefined,\n\tlistInactiveFocusOutline: undefined,\n\tlistSelectionOutline: undefined,\n\tlistFocusAndSelectionForeground: undefined,\n\tlistFocusAndSelectionOutline: undefined,\n\tlistInactiveFocusForeground: undefined,\n\ttableColumnsBorder: undefined,\n\ttableOddRowsBackgroundColor: undefined,\n\ttreeIndentGuidesStroke: undefined,\n\ttreeInactiveIndentGuidesStroke: undefined,\n};\n\nexport function getSelectBoxStyles(override: IStyleOverride<ISelectBoxStyles>): ISelectBoxStyles {\n\treturn overrideStyles(override, defaultSelectBoxStyles);\n}\n\nexport const defaultMenuStyles: IMenuStyles = {\n\tshadowColor: asCssVariable(widgetShadow),\n\tborderColor: asCssVariable(menuBorder),\n\tforegroundColor: asCssVariable(menuForeground),\n\tbackgroundColor: asCssVariable(menuBackground),\n\tselectionForegroundColor: asCssVariable(menuSelectionForeground),\n\tselectionBackgroundColor: asCssVariable(menuSelectionBackground),\n\tselectionBorderColor: asCssVariable(menuSelectionBorder),\n\tseparatorColor: asCssVariable(menuSeparatorBackground),\n\tscrollbarShadow: asCssVariable(scrollbarShadow),\n\tscrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n\tscrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n\tscrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n\nexport function getMenuStyles(override: IStyleOverride<IMenuStyles>): IMenuStyles {\n\treturn overrideStyles(override, defaultMenuStyles);\n}\n"]}