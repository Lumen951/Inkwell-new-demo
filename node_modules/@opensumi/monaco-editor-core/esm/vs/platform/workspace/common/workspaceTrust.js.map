{"version":3,"sources":["vs/platform/workspace/common/workspaceTrust.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAKhG,sCAAwC;AACxC,4EAA2E;AAE3E,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC9B,+DAAS,CAAA;IACT,iEAAU,CAAA;AACX,CAAC,EAHW,mBAAmB,mCAAnB,mBAAmB,QAG9B;AAED,SAAgB,sBAAsB,CAAC,UAAmB;IACzD,IAAI,UAAU,EAAE,CAAC;QAChB,OAAO,IAAA,cAAQ,EAAC,8CAAS,EAAE,SAAS,CAAC,CAAC;IACvC,CAAC;SAAM,CAAC;QACP,OAAO,IAAA,cAAQ,EAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;IACjD,CAAC;AACF,CAAC;AAND,wDAMC;AAYY,QAAA,gCAAgC,GAAG,IAAA,+BAAe,EAAmC,iCAAiC,CAAC,CAAC;AAQxH,QAAA,gCAAgC,GAAG,IAAA,+BAAe,EAAmC,iCAAiC,CAAC,CAAC;AA8BrI,IAAkB,yBAIjB;AAJD,WAAkB,yBAAyB;IAC1C,yEAAQ,CAAA;IACR,+FAAmB,CAAA;IACnB,6EAAU,CAAA;AACX,CAAC,EAJiB,yBAAyB,yCAAzB,yBAAyB,QAI1C;AAEY,QAAA,6BAA6B,GAAG,IAAA,+BAAe,EAAgC,8BAA8B,CAAC,CAAC","file":"workspaceTrust.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event';\nimport { IDisposable } from '../../../base/common/lifecycle';\nimport { URI } from '../../../base/common/uri';\nimport { localize } from '../../../nls';\nimport { createDecorator } from '../../instantiation/common/instantiation';\n\nexport enum WorkspaceTrustScope {\n\tLocal = 0,\n\tRemote = 1\n}\n\nexport function workspaceTrustToString(trustState: boolean) {\n\tif (trustState) {\n\t\treturn localize('trusted', \"Trusted\");\n\t} else {\n\t\treturn localize('untrusted', \"Restricted Mode\");\n\t}\n}\n\nexport interface WorkspaceTrustRequestButton {\n\treadonly label: string;\n\treadonly type: 'ContinueWithTrust' | 'ContinueWithoutTrust' | 'Manage' | 'Cancel';\n}\n\nexport interface WorkspaceTrustRequestOptions {\n\treadonly buttons?: WorkspaceTrustRequestButton[];\n\treadonly message?: string;\n}\n\nexport const IWorkspaceTrustEnablementService = createDecorator<IWorkspaceTrustEnablementService>('workspaceTrustEnablementService');\n\nexport interface IWorkspaceTrustEnablementService {\n\treadonly _serviceBrand: undefined;\n\n\tisWorkspaceTrustEnabled(): boolean;\n}\n\nexport const IWorkspaceTrustManagementService = createDecorator<IWorkspaceTrustManagementService>('workspaceTrustManagementService');\n\nexport interface IWorkspaceTrustManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeTrust: Event<boolean>;\n\tonDidChangeTrustedFolders: Event<void>;\n\n\treadonly workspaceResolved: Promise<void>;\n\treadonly workspaceTrustInitialized: Promise<void>;\n\tacceptsOutOfWorkspaceFiles: boolean;\n\n\tisWorkspaceTrusted(): boolean;\n\tisWorkspaceTrustForced(): boolean;\n\n\tcanSetParentFolderTrust(): boolean;\n\tsetParentFolderTrust(trusted: boolean): Promise<void>;\n\n\tcanSetWorkspaceTrust(): boolean;\n\tsetWorkspaceTrust(trusted: boolean): Promise<void>;\n\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo>;\n\tsetUrisTrust(uri: URI[], trusted: boolean): Promise<void>;\n\n\tgetTrustedUris(): URI[];\n\tsetTrustedUris(uris: URI[]): Promise<void>;\n\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable;\n}\n\nexport const enum WorkspaceTrustUriResponse {\n\tOpen = 1,\n\tOpenInNewWindow = 2,\n\tCancel = 3\n}\n\nexport const IWorkspaceTrustRequestService = createDecorator<IWorkspaceTrustRequestService>('workspaceTrustRequestService');\n\nexport interface IWorkspaceTrustRequestService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidInitiateOpenFilesTrustRequest: Event<void>;\n\treadonly onDidInitiateWorkspaceTrustRequest: Event<WorkspaceTrustRequestOptions | undefined>;\n\treadonly onDidInitiateWorkspaceTrustRequestOnStartup: Event<void>;\n\n\tcompleteOpenFilesTrustRequest(result: WorkspaceTrustUriResponse, saveResponse?: boolean): Promise<void>;\n\trequestOpenFilesTrust(openFiles: URI[]): Promise<WorkspaceTrustUriResponse>;\n\n\tcancelWorkspaceTrustRequest(): void;\n\tcompleteWorkspaceTrustRequest(trusted?: boolean): Promise<void>;\n\trequestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean | undefined>;\n\trequestWorkspaceTrustOnStartup(): void;\n}\n\nexport interface IWorkspaceTrustTransitionParticipant {\n\tparticipate(trusted: boolean): Promise<void>;\n}\n\nexport interface IWorkspaceTrustUriInfo {\n\turi: URI;\n\ttrusted: boolean;\n}\n\nexport interface IWorkspaceTrustInfo {\n\turiTrustInfo: IWorkspaceTrustUriInfo[];\n}\n"]}