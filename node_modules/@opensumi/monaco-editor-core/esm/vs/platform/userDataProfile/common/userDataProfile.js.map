{"version":3,"sources":["vs/platform/userDataProfile/common/userDataProfile.ts"],"names":[],"mappings":"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","file":"userDataProfile.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hash } from '../../../base/common/hash';\nimport { Emitter, Event } from '../../../base/common/event';\nimport { Disposable } from '../../../base/common/lifecycle';\nimport { basename, joinPath } from '../../../base/common/resources';\nimport { URI, UriDto } from '../../../base/common/uri';\nimport { localize } from '../../../nls';\nimport { IEnvironmentService } from '../../environment/common/environment';\nimport { FileOperationResult, IFileService, toFileOperationResult } from '../../files/common/files';\nimport { createDecorator } from '../../instantiation/common/instantiation';\nimport { ILogService } from '../../log/common/log';\nimport { IAnyWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from '../../workspace/common/workspace';\nimport { ResourceMap } from '../../../base/common/map';\nimport { IStringDictionary } from '../../../base/common/collections';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity';\nimport { Promises } from '../../../base/common/async';\nimport { generateUuid } from '../../../base/common/uuid';\nimport { escapeRegExpCharacters } from '../../../base/common/strings';\nimport { isString } from '../../../base/common/types';\n\nexport const enum ProfileResourceType {\n\tSettings = 'settings',\n\tKeybindings = 'keybindings',\n\tSnippets = 'snippets',\n\tTasks = 'tasks',\n\tExtensions = 'extensions',\n\tGlobalState = 'globalState',\n}\n\n/**\n * Flags to indicate whether to use the default profile or not.\n */\nexport type UseDefaultProfileFlags = { [key in ProfileResourceType]?: boolean };\n\nexport interface IUserDataProfile {\n\treadonly id: string;\n\treadonly isDefault: boolean;\n\treadonly name: string;\n\treadonly shortName?: string;\n\treadonly icon?: string;\n\treadonly location: URI;\n\treadonly globalStorageHome: URI;\n\treadonly settingsResource: URI;\n\treadonly keybindingsResource: URI;\n\treadonly tasksResource: URI;\n\treadonly snippetsHome: URI;\n\treadonly extensionsResource: URI;\n\treadonly cacheHome: URI;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n\treadonly isTransient?: boolean;\n}\n\nexport function isUserDataProfile(thing: unknown): thing is IUserDataProfile {\n\tconst candidate = thing as IUserDataProfile | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& typeof candidate.id === 'string'\n\t\t&& typeof candidate.isDefault === 'boolean'\n\t\t&& typeof candidate.name === 'string'\n\t\t&& URI.isUri(candidate.location)\n\t\t&& URI.isUri(candidate.globalStorageHome)\n\t\t&& URI.isUri(candidate.settingsResource)\n\t\t&& URI.isUri(candidate.keybindingsResource)\n\t\t&& URI.isUri(candidate.tasksResource)\n\t\t&& URI.isUri(candidate.snippetsHome)\n\t\t&& URI.isUri(candidate.extensionsResource)\n\t);\n}\n\nexport type DidChangeProfilesEvent = { readonly added: readonly IUserDataProfile[]; readonly removed: readonly IUserDataProfile[]; readonly updated: readonly IUserDataProfile[]; readonly all: readonly IUserDataProfile[] };\n\nexport type WillCreateProfileEvent = {\n\tprofile: IUserDataProfile;\n\tjoin(promise: Promise<void>): void;\n};\n\nexport type WillRemoveProfileEvent = {\n\tprofile: IUserDataProfile;\n\tjoin(promise: Promise<void>): void;\n};\n\nexport interface IUserDataProfileOptions {\n\treadonly shortName?: string;\n\treadonly icon?: string;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n\treadonly transient?: boolean;\n}\n\nexport interface IUserDataProfileUpdateOptions extends Omit<IUserDataProfileOptions, 'icon'> {\n\treadonly name?: string;\n\treadonly icon?: string | null;\n}\n\nexport const IUserDataProfilesService = createDecorator<IUserDataProfilesService>('IUserDataProfilesService');\nexport interface IUserDataProfilesService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly profilesHome: URI;\n\treadonly defaultProfile: IUserDataProfile;\n\n\treadonly onDidChangeProfiles: Event<DidChangeProfilesEvent>;\n\treadonly profiles: readonly IUserDataProfile[];\n\n\treadonly onDidResetWorkspaces: Event<void>;\n\n\tisEnabled(): boolean;\n\tcreateNamedProfile(name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile>;\n\tcreateTransientProfile(workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile>;\n\tcreateProfile(id: string, name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile>;\n\tupdateProfile(profile: IUserDataProfile, options?: IUserDataProfileUpdateOptions,): Promise<IUserDataProfile>;\n\tremoveProfile(profile: IUserDataProfile): Promise<void>;\n\n\tsetProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, profile: IUserDataProfile): Promise<void>;\n\tresetWorkspaces(): Promise<void>;\n\n\tcleanUp(): Promise<void>;\n\tcleanUpTransientProfiles(): Promise<void>;\n}\n\nexport function reviveProfile(profile: UriDto<IUserDataProfile>, scheme: string): IUserDataProfile {\n\treturn {\n\t\tid: profile.id,\n\t\tisDefault: profile.isDefault,\n\t\tname: profile.name,\n\t\tshortName: profile.shortName,\n\t\ticon: profile.icon,\n\t\tlocation: URI.revive(profile.location).with({ scheme }),\n\t\tglobalStorageHome: URI.revive(profile.globalStorageHome).with({ scheme }),\n\t\tsettingsResource: URI.revive(profile.settingsResource).with({ scheme }),\n\t\tkeybindingsResource: URI.revive(profile.keybindingsResource).with({ scheme }),\n\t\ttasksResource: URI.revive(profile.tasksResource).with({ scheme }),\n\t\tsnippetsHome: URI.revive(profile.snippetsHome).with({ scheme }),\n\t\textensionsResource: URI.revive(profile.extensionsResource).with({ scheme }),\n\t\tcacheHome: URI.revive(profile.cacheHome).with({ scheme }),\n\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\tisTransient: profile.isTransient,\n\t};\n}\n\nexport function toUserDataProfile(id: string, name: string, location: URI, profilesCacheHome: URI, options?: IUserDataProfileOptions, defaultProfile?: IUserDataProfile): IUserDataProfile {\n\treturn {\n\t\tid,\n\t\tname,\n\t\tlocation,\n\t\tisDefault: false,\n\t\tshortName: options?.shortName,\n\t\ticon: options?.icon,\n\t\tglobalStorageHome: defaultProfile && options?.useDefaultFlags?.globalState ? defaultProfile.globalStorageHome : joinPath(location, 'globalStorage'),\n\t\tsettingsResource: defaultProfile && options?.useDefaultFlags?.settings ? defaultProfile.settingsResource : joinPath(location, 'settings.json'),\n\t\tkeybindingsResource: defaultProfile && options?.useDefaultFlags?.keybindings ? defaultProfile.keybindingsResource : joinPath(location, 'keybindings.json'),\n\t\ttasksResource: defaultProfile && options?.useDefaultFlags?.tasks ? defaultProfile.tasksResource : joinPath(location, 'tasks.json'),\n\t\tsnippetsHome: defaultProfile && options?.useDefaultFlags?.snippets ? defaultProfile.snippetsHome : joinPath(location, 'snippets'),\n\t\textensionsResource: defaultProfile && options?.useDefaultFlags?.extensions ? defaultProfile.extensionsResource : joinPath(location, 'extensions.json'),\n\t\tcacheHome: joinPath(profilesCacheHome, id),\n\t\tuseDefaultFlags: options?.useDefaultFlags,\n\t\tisTransient: options?.transient\n\t};\n}\n\nexport type UserDataProfilesObject = {\n\tprofiles: IUserDataProfile[];\n\tworkspaces: ResourceMap<IUserDataProfile>;\n\temptyWindows: Map<string, IUserDataProfile>;\n};\n\nexport type StoredUserDataProfile = {\n\tname: string;\n\tlocation: URI;\n\tshortName?: string;\n\ticon?: string;\n\tuseDefaultFlags?: UseDefaultProfileFlags;\n};\n\nexport type StoredProfileAssociations = {\n\tworkspaces?: IStringDictionary<string>;\n\temptyWindows?: IStringDictionary<string>;\n};\n\nexport class UserDataProfilesService extends Disposable implements IUserDataProfilesService {\n\n\tprotected static readonly PROFILES_KEY = 'userDataProfiles';\n\tprotected static readonly PROFILE_ASSOCIATIONS_KEY = 'profileAssociations';\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected enabled: boolean = true;\n\treadonly profilesHome: URI;\n\tprivate readonly profilesCacheHome: URI;\n\n\tget defaultProfile(): IUserDataProfile { return this.profiles[0]; }\n\tget profiles(): IUserDataProfile[] { return [...this.profilesObject.profiles, ...this.transientProfilesObject.profiles]; }\n\n\tprotected readonly _onDidChangeProfiles = this._register(new Emitter<DidChangeProfilesEvent>());\n\treadonly onDidChangeProfiles = this._onDidChangeProfiles.event;\n\n\tprotected readonly _onWillCreateProfile = this._register(new Emitter<WillCreateProfileEvent>());\n\treadonly onWillCreateProfile = this._onWillCreateProfile.event;\n\n\tprotected readonly _onWillRemoveProfile = this._register(new Emitter<WillRemoveProfileEvent>());\n\treadonly onWillRemoveProfile = this._onWillRemoveProfile.event;\n\n\tprivate readonly _onDidResetWorkspaces = this._register(new Emitter<void>());\n\treadonly onDidResetWorkspaces = this._onDidResetWorkspaces.event;\n\n\tprivate profileCreationPromises = new Map<string, Promise<IUserDataProfile>>();\n\n\tprotected readonly transientProfilesObject: UserDataProfilesObject = {\n\t\tprofiles: [],\n\t\tworkspaces: new ResourceMap(),\n\t\temptyWindows: new Map()\n\t};\n\n\tconstructor(\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t\t@ILogService protected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.profilesHome = joinPath(this.environmentService.userRoamingDataHome, 'profiles');\n\t\tthis.profilesCacheHome = joinPath(this.environmentService.cacheHome, 'CachedProfilesData');\n\t}\n\n\tinit(): void {\n\t\tthis._profilesObject = undefined;\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (this.enabled !== enabled) {\n\t\t\tthis._profilesObject = undefined;\n\t\t\tthis.enabled = enabled;\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tprotected _profilesObject: UserDataProfilesObject | undefined;\n\tprotected get profilesObject(): UserDataProfilesObject {\n\t\tif (!this._profilesObject) {\n\t\t\tconst defaultProfile = this.createDefaultProfile();\n\t\t\tconst profiles = [defaultProfile];\n\t\t\tif (this.enabled) {\n\t\t\t\ttry {\n\t\t\t\t\tfor (const storedProfile of this.getStoredProfiles()) {\n\t\t\t\t\t\tif (!storedProfile.name || !isString(storedProfile.name) || !storedProfile.location) {\n\t\t\t\t\t\t\tthis.logService.warn('Skipping the invalid stored profile', storedProfile.location || storedProfile.name);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprofiles.push(toUserDataProfile(basename(storedProfile.location), storedProfile.name, storedProfile.location, this.profilesCacheHome, { shortName: storedProfile.shortName, icon: storedProfile.icon, useDefaultFlags: storedProfile.useDefaultFlags }, defaultProfile));\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst workspaces = new ResourceMap<IUserDataProfile>();\n\t\t\tconst emptyWindows = new Map<string, IUserDataProfile>();\n\t\t\tif (profiles.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst profileAssociaitions = this.getStoredProfileAssociations();\n\t\t\t\t\tif (profileAssociaitions.workspaces) {\n\t\t\t\t\t\tfor (const [workspacePath, profileId] of Object.entries(profileAssociaitions.workspaces)) {\n\t\t\t\t\t\t\tconst workspace = URI.parse(workspacePath);\n\t\t\t\t\t\t\tconst profile = profiles.find(p => p.id === profileId);\n\t\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\t\tworkspaces.set(workspace, profile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (profileAssociaitions.emptyWindows) {\n\t\t\t\t\t\tfor (const [windowId, profileId] of Object.entries(profileAssociaitions.emptyWindows)) {\n\t\t\t\t\t\t\tconst profile = profiles.find(p => p.id === profileId);\n\t\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\t\temptyWindows.set(windowId, profile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._profilesObject = { profiles, workspaces, emptyWindows };\n\t\t}\n\t\treturn this._profilesObject;\n\t}\n\n\tprivate createDefaultProfile() {\n\t\tconst defaultProfile = toUserDataProfile('__default__profile__', localize('defaultProfile', \"Default\"), this.environmentService.userRoamingDataHome, this.profilesCacheHome);\n\t\treturn { ...defaultProfile, extensionsResource: this.getDefaultProfileExtensionsLocation() ?? defaultProfile.extensionsResource, isDefault: true };\n\t}\n\n\tasync createTransientProfile(workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tconst namePrefix = `Temp`;\n\t\tconst nameRegEx = new RegExp(`${escapeRegExpCharacters(namePrefix)}\\\\s(\\\\d+)`);\n\t\tlet nameIndex = 0;\n\t\tfor (const profile of this.profiles) {\n\t\t\tconst matches = nameRegEx.exec(profile.name);\n\t\t\tconst index = matches ? parseInt(matches[1]) : 0;\n\t\t\tnameIndex = index > nameIndex ? index : nameIndex;\n\t\t}\n\t\tconst name = `${namePrefix} ${nameIndex + 1}`;\n\t\treturn this.createProfile(hash(generateUuid()).toString(16), name, { transient: true }, workspaceIdentifier);\n\t}\n\n\tasync createNamedProfile(name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\treturn this.createProfile(hash(generateUuid()).toString(16), name, options, workspaceIdentifier);\n\t}\n\n\tasync createProfile(id: string, name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tconst profile = await this.doCreateProfile(id, name, options);\n\n\t\tif (workspaceIdentifier) {\n\t\t\tawait this.setProfileForWorkspace(workspaceIdentifier, profile);\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tprivate async doCreateProfile(id: string, name: string, options?: IUserDataProfileOptions): Promise<IUserDataProfile> {\n\t\tif (!isString(name) || !name) {\n\t\t\tthrow new Error('Name of the profile is mandatory and must be of type `string`');\n\t\t}\n\t\tlet profileCreationPromise = this.profileCreationPromises.get(name);\n\t\tif (!profileCreationPromise) {\n\t\t\tprofileCreationPromise = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst existing = this.profiles.find(p => p.name === name || p.id === id);\n\t\t\t\t\tif (existing) {\n\t\t\t\t\t\treturn existing;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst profile = toUserDataProfile(id, name, joinPath(this.profilesHome, id), this.profilesCacheHome, options, this.defaultProfile);\n\t\t\t\t\tawait this.fileService.createFolder(profile.location);\n\n\t\t\t\t\tconst joiners: Promise<void>[] = [];\n\t\t\t\t\tthis._onWillCreateProfile.fire({\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t\tjoin(promise) {\n\t\t\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tawait Promises.settled(joiners);\n\n\t\t\t\t\tthis.updateProfiles([profile], [], []);\n\t\t\t\t\treturn profile;\n\t\t\t\t} finally {\n\t\t\t\t\tthis.profileCreationPromises.delete(name);\n\t\t\t\t}\n\t\t\t})();\n\t\t\tthis.profileCreationPromises.set(name, profileCreationPromise);\n\t\t}\n\t\treturn profileCreationPromise;\n\t}\n\n\tasync updateProfile(profileToUpdate: IUserDataProfile, options: IUserDataProfileUpdateOptions): Promise<IUserDataProfile> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tlet profile = this.profiles.find(p => p.id === profileToUpdate.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToUpdate.name}' does not exist`);\n\t\t}\n\n\t\tprofile = toUserDataProfile(profile.id, options.name ?? profile.name, profile.location, this.profilesCacheHome, {\n\t\t\tshortName: options.shortName ?? profile.shortName,\n\t\t\ticon: options.icon === null ? undefined : options.icon ?? profile.icon,\n\t\t\ttransient: options.transient ?? profile.isTransient,\n\t\t\tuseDefaultFlags: options.useDefaultFlags ?? profile.useDefaultFlags\n\t\t}, this.defaultProfile);\n\t\tthis.updateProfiles([], [], [profile]);\n\n\t\treturn profile;\n\t}\n\n\tasync removeProfile(profileToRemove: IUserDataProfile): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\t\tif (profileToRemove.isDefault) {\n\t\t\tthrow new Error('Cannot remove default profile');\n\t\t}\n\t\tconst profile = this.profiles.find(p => p.id === profileToRemove.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToRemove.name}' does not exist`);\n\t\t}\n\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillRemoveProfile.fire({\n\t\t\tprofile,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\tawait Promise.allSettled(joiners);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\n\t\tfor (const windowId of [...this.profilesObject.emptyWindows.keys()]) {\n\t\t\tif (profile.id === this.profilesObject.emptyWindows.get(windowId)?.id) {\n\t\t\t\tthis.profilesObject.emptyWindows.delete(windowId);\n\t\t\t}\n\t\t}\n\t\tfor (const workspace of [...this.profilesObject.workspaces.keys()]) {\n\t\t\tif (profile.id === this.profilesObject.workspaces.get(workspace)?.id) {\n\t\t\t\tthis.profilesObject.workspaces.delete(workspace);\n\t\t\t}\n\t\t}\n\t\tthis.updateStoredProfileAssociations();\n\n\t\tthis.updateProfiles([], [profile], []);\n\n\t\ttry {\n\t\t\tawait this.fileService.del(profile.cacheHome, { recursive: true });\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync setProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, profileToSet: IUserDataProfile): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tconst profile = this.profiles.find(p => p.id === profileToSet.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToSet.name}' does not exist`);\n\t\t}\n\n\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, profile);\n\t}\n\n\tunsetWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, transient?: boolean): void {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, undefined, transient);\n\t}\n\n\tasync resetWorkspaces(): Promise<void> {\n\t\tthis.transientProfilesObject.workspaces.clear();\n\t\tthis.transientProfilesObject.emptyWindows.clear();\n\t\tthis.profilesObject.workspaces.clear();\n\t\tthis.profilesObject.emptyWindows.clear();\n\t\tthis.updateStoredProfileAssociations();\n\t\tthis._onDidResetWorkspaces.fire();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tif (await this.fileService.exists(this.profilesHome)) {\n\t\t\tconst stat = await this.fileService.resolve(this.profilesHome);\n\t\t\tawait Promise.all((stat.children || [])\n\t\t\t\t.filter(child => child.isDirectory && this.profiles.every(p => !this.uriIdentityService.extUri.isEqual(p.location, child.resource)))\n\t\t\t\t.map(child => this.fileService.del(child.resource, { recursive: true })));\n\t\t}\n\t}\n\n\tasync cleanUpTransientProfiles(): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst unAssociatedTransientProfiles = this.transientProfilesObject.profiles.filter(p => !this.isProfileAssociatedToWorkspace(p));\n\t\tawait Promise.allSettled(unAssociatedTransientProfiles.map(p => this.removeProfile(p)));\n\t}\n\n\tgetProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier): IUserDataProfile | undefined {\n\t\tconst workspace = this.getWorkspace(workspaceIdentifier);\n\t\treturn URI.isUri(workspace) ? this.transientProfilesObject.workspaces.get(workspace) ?? this.profilesObject.workspaces.get(workspace) : this.transientProfilesObject.emptyWindows.get(workspace) ?? this.profilesObject.emptyWindows.get(workspace);\n\t}\n\n\tprotected getWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier): URI | string {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn workspaceIdentifier.uri;\n\t\t}\n\t\tif (isWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn workspaceIdentifier.configPath;\n\t\t}\n\t\treturn workspaceIdentifier.id;\n\t}\n\n\tprivate isProfileAssociatedToWorkspace(profile: IUserDataProfile): boolean {\n\t\tif ([...this.transientProfilesObject.emptyWindows.values()].some(windowProfile => this.uriIdentityService.extUri.isEqual(windowProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\tif ([...this.transientProfilesObject.workspaces.values()].some(workspaceProfile => this.uriIdentityService.extUri.isEqual(workspaceProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\tif ([...this.profilesObject.emptyWindows.values()].some(windowProfile => this.uriIdentityService.extUri.isEqual(windowProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\tif ([...this.profilesObject.workspaces.values()].some(workspaceProfile => this.uriIdentityService.extUri.isEqual(workspaceProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate updateProfiles(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]): void {\n\t\tconst allProfiles = [...this.profiles, ...added];\n\t\tconst storedProfiles: StoredUserDataProfile[] = [];\n\t\tthis.transientProfilesObject.profiles = [];\n\t\tfor (let profile of allProfiles) {\n\t\t\tif (profile.isDefault) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (removed.some(p => profile.id === p.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprofile = updated.find(p => profile.id === p.id) ?? profile;\n\t\t\tif (profile.isTransient) {\n\t\t\t\tthis.transientProfilesObject.profiles.push(profile);\n\t\t\t} else {\n\t\t\t\tstoredProfiles.push({ location: profile.location, name: profile.name, shortName: profile.shortName, icon: profile.icon, useDefaultFlags: profile.useDefaultFlags });\n\t\t\t}\n\t\t}\n\t\tthis.saveStoredProfiles(storedProfiles);\n\t\tthis._profilesObject = undefined;\n\t\tthis.triggerProfilesChanges(added, removed, updated);\n\t}\n\n\tprotected triggerProfilesChanges(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]) {\n\t\tthis._onDidChangeProfiles.fire({ added, removed, updated, all: this.profiles });\n\t}\n\n\tprivate updateWorkspaceAssociation(workspaceIdentifier: IAnyWorkspaceIdentifier, newProfile?: IUserDataProfile, transient?: boolean): void {\n\t\t// Force transient if the new profile to associate is transient\n\t\ttransient = newProfile?.isTransient ? true : transient;\n\n\t\tif (!transient) {\n\t\t\t// Unset the transiet workspace association if any\n\t\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, undefined, true);\n\t\t}\n\n\t\tconst workspace = this.getWorkspace(workspaceIdentifier);\n\t\tconst profilesObject = transient ? this.transientProfilesObject : this.profilesObject;\n\n\t\t// Folder or Multiroot workspace\n\t\tif (URI.isUri(workspace)) {\n\t\t\tprofilesObject.workspaces.delete(workspace);\n\t\t\tif (newProfile) {\n\t\t\t\tprofilesObject.workspaces.set(workspace, newProfile);\n\t\t\t}\n\t\t}\n\t\t// Empty Window\n\t\telse {\n\t\t\tprofilesObject.emptyWindows.delete(workspace);\n\t\t\tif (newProfile) {\n\t\t\t\tprofilesObject.emptyWindows.set(workspace, newProfile);\n\t\t\t}\n\t\t}\n\n\t\tif (!transient) {\n\t\t\tthis.updateStoredProfileAssociations();\n\t\t}\n\t}\n\n\tprivate updateStoredProfileAssociations() {\n\t\tconst workspaces: IStringDictionary<string> = {};\n\t\tfor (const [workspace, profile] of this.profilesObject.workspaces.entries()) {\n\t\t\tworkspaces[workspace.toString()] = profile.id;\n\t\t}\n\t\tconst emptyWindows: IStringDictionary<string> = {};\n\t\tfor (const [windowId, profile] of this.profilesObject.emptyWindows.entries()) {\n\t\t\temptyWindows[windowId.toString()] = profile.id;\n\t\t}\n\t\tthis.saveStoredProfileAssociations({ workspaces, emptyWindows });\n\t\tthis._profilesObject = undefined;\n\t}\n\n\t// TODO: @sandy081 Remove migration after couple of releases\n\tprotected migrateStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): StoredProfileAssociations {\n\t\tconst workspaces: IStringDictionary<string> = {};\n\t\tconst defaultProfile = this.createDefaultProfile();\n\t\tif (storedProfileAssociations.workspaces) {\n\t\t\tfor (const [workspace, location] of Object.entries(storedProfileAssociations.workspaces)) {\n\t\t\t\tconst uri = URI.parse(location);\n\t\t\t\tworkspaces[workspace] = this.uriIdentityService.extUri.isEqual(uri, defaultProfile.location) ? defaultProfile.id : this.uriIdentityService.extUri.basename(uri);\n\t\t\t}\n\t\t}\n\t\tconst emptyWindows: IStringDictionary<string> = {};\n\t\tif (storedProfileAssociations.emptyWindows) {\n\t\t\tfor (const [workspace, location] of Object.entries(storedProfileAssociations.emptyWindows)) {\n\t\t\t\tconst uri = URI.parse(location);\n\t\t\t\temptyWindows[workspace] = this.uriIdentityService.extUri.isEqual(uri, defaultProfile.location) ? defaultProfile.id : this.uriIdentityService.extUri.basename(uri);\n\t\t\t}\n\t\t}\n\t\treturn { workspaces, emptyWindows };\n\t}\n\n\tprotected getStoredProfiles(): StoredUserDataProfile[] { return []; }\n\tprotected saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void { throw new Error('not implemented'); }\n\n\tprotected getStoredProfileAssociations(): StoredProfileAssociations { return {}; }\n\tprotected saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void { throw new Error('not implemented'); }\n\tprotected getDefaultProfileExtensionsLocation(): URI | undefined { return undefined; }\n}\n\nexport class InMemoryUserDataProfilesService extends UserDataProfilesService {\n\tprivate storedProfiles: StoredUserDataProfile[] = [];\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] { return this.storedProfiles; }\n\tprotected override saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void { this.storedProfiles = storedProfiles; }\n\n\tprivate storedProfileAssociations: StoredProfileAssociations = {};\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations { return this.storedProfileAssociations; }\n\tprotected override saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void { this.storedProfileAssociations = storedProfileAssociations; }\n}\n"]}