{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/platform/files/browser/webFileSystemAccess.ts","vs/platform/files/browser/webFileSystemAccess.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG;;;;GAIG;AACH,IAAiB,mBAAmB,CA0BnC;AA1BD,WAAiB,mBAAmB;IAEnC,SAAgB,SAAS,CAAC,GAAiB;QAC1C,IAAI,OAAO,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,mBAAmB,CAAA,KAAK,UAAU,EAAE,CAAC;YACpD,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IANe,6BAAS,YAMxB,CAAA;IAED,SAAgB,kBAAkB,CAAC,MAAe;QACjD,MAAM,SAAS,GAAG,MAAsC,CAAC;QACzD,IAAI,CAAC,SAAS,EAAE,CAAC;YAChB,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,SAAS,CAAC,eAAe,KAAK,UAAU,IAAI,OAAO,SAAS,CAAC,iBAAiB,KAAK,UAAU,CAAC;IACnJ,CAAC;IAPe,sCAAkB,qBAOjC,CAAA;IAED,SAAgB,sBAAsB,CAAC,MAAwB;QAC9D,OAAO,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC;IAC/B,CAAC;IAFe,0CAAsB,yBAErC,CAAA;IAED,SAAgB,2BAA2B,CAAC,MAAwB;QACnE,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW,CAAC;IACpC,CAAC;IAFe,+CAA2B,8BAE1C,CAAA;AACF,CAAC,EA1BgB,mBAAmB,mCAAnB,mBAAmB,QA0BnC","file":"webFileSystemAccess.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Typings for the https://wicg.github.io/file-system-access\n *\n * Use `supported(window)` to find out if the browser supports this kind of API.\n */\nexport namespace WebFileSystemAccess {\n\n\texport function supported(obj: any & Window): boolean {\n\t\tif (typeof obj?.showDirectoryPicker === 'function') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\texport function isFileSystemHandle(handle: unknown): handle is FileSystemHandle {\n\t\tconst candidate = handle as FileSystemHandle | undefined;\n\t\tif (!candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn typeof candidate.kind === 'string' && typeof candidate.queryPermission === 'function' && typeof candidate.requestPermission === 'function';\n\t}\n\n\texport function isFileSystemFileHandle(handle: FileSystemHandle): handle is FileSystemFileHandle {\n\t\treturn handle.kind === 'file';\n\t}\n\n\texport function isFileSystemDirectoryHandle(handle: FileSystemHandle): handle is FileSystemDirectoryHandle {\n\t\treturn handle.kind === 'directory';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Typings for the https://wicg.github.io/file-system-access\n *\n * Use `supported(window)` to find out if the browser supports this kind of API.\n */\nexport namespace WebFileSystemAccess {\n\n\texport function supported(obj: any & Window): boolean {\n\t\tif (typeof obj?.showDirectoryPicker === 'function') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\texport function isFileSystemHandle(handle: unknown): handle is FileSystemHandle {\n\t\tconst candidate = handle as FileSystemHandle | undefined;\n\t\tif (!candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn typeof candidate.kind === 'string' && typeof candidate.queryPermission === 'function' && typeof candidate.requestPermission === 'function';\n\t}\n\n\texport function isFileSystemFileHandle(handle: FileSystemHandle): handle is FileSystemFileHandle {\n\t\treturn handle.kind === 'file';\n\t}\n\n\texport function isFileSystemDirectoryHandle(handle: FileSystemHandle): handle is FileSystemDirectoryHandle {\n\t\treturn handle.kind === 'directory';\n\t}\n}\n"]}