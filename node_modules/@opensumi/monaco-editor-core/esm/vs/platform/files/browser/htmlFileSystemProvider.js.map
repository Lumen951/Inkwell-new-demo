{"version":3,"sources":["vs/platform/files/browser/htmlFileSystemProvider.ts"],"names":[],"mappings":"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","file":"htmlFileSystemProvider.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls';\nimport { URI } from '../../../base/common/uri';\nimport { VSBuffer } from '../../../base/common/buffer';\nimport { CancellationToken } from '../../../base/common/cancellation';\nimport { Event } from '../../../base/common/event';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle';\nimport { Schemas } from '../../../base/common/network';\nimport { basename, extname, normalize } from '../../../base/common/path';\nimport { isLinux } from '../../../base/common/platform';\nimport { extUri, extUriIgnorePathCase } from '../../../base/common/resources';\nimport { newWriteableStream, ReadableStreamEvents } from '../../../base/common/stream';\nimport { createFileSystemProviderError, IFileDeleteOptions, IFileOverwriteOptions, IFileReadStreamOptions, FileSystemProviderCapabilities, FileSystemProviderError, FileSystemProviderErrorCode, FileType, IFileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IStat, IWatchOptions } from '../common/files';\nimport { WebFileSystemAccess } from './webFileSystemAccess';\nimport { IndexedDB } from '../../../base/browser/indexedDB';\nimport { ILogService } from '../../log/common/log';\n\nexport class HTMLFileSystemProvider implements IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability {\n\n\t//#region Events (unsupported)\n\n\treadonly onDidChangeCapabilities = Event.None;\n\treadonly onDidChangeFile = Event.None;\n\n\t//#endregion\n\n\t//#region File Capabilities\n\n\tprivate extUri = isLinux ? extUri : extUriIgnorePathCase;\n\n\tprivate _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\n\tconstructor(\n\t\tprivate indexedDB: IndexedDB | undefined,\n\t\tprivate readonly store: string,\n\t\tprivate logService: ILogService\n\t) { }\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst handle = await this.getHandle(resource);\n\t\t\tif (!handle) {\n\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such file or directory, stat', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t}\n\n\t\t\tif (WebFileSystemAccess.isFileSystemFileHandle(handle)) {\n\t\t\t\tconst file = await handle.getFile();\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\tmtime: file.lastModified,\n\t\t\t\t\tctime: 0,\n\t\t\t\t\tsize: file.size\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttype: FileType.Directory,\n\t\t\t\tmtime: 0,\n\t\t\t\tctime: 0,\n\t\t\t\tsize: 0\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst handle = await this.getDirectoryHandle(resource);\n\t\t\tif (!handle) {\n\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such file or directory, readdir', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t}\n\n\t\t\tconst result: [string, FileType][] = [];\n\n\t\t\tfor await (const [name, child] of handle) {\n\t\t\t\tresult.push([name, WebFileSystemAccess.isFileSystemFileHandle(child) ? FileType.File : FileType.Directory]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer, {\n\t\t\t// Set a highWaterMark to prevent the stream\n\t\t\t// for file upload to produce large buffers\n\t\t\t// in-memory\n\t\t\thighWaterMark: 10\n\t\t});\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst handle = await this.getFileHandle(resource);\n\t\t\t\tif (!handle) {\n\t\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such file or directory, readFile', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t}\n\n\t\t\t\tconst file = await handle.getFile();\n\n\t\t\t\t// Partial file: implemented simply via `readFile`\n\t\t\t\tif (typeof opts.length === 'number' || typeof opts.position === 'number') {\n\t\t\t\t\tlet buffer = new Uint8Array(await file.arrayBuffer());\n\n\t\t\t\t\tif (typeof opts?.position === 'number') {\n\t\t\t\t\t\tbuffer = buffer.slice(opts.position);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof opts?.length === 'number') {\n\t\t\t\t\t\tbuffer = buffer.slice(0, opts.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(buffer);\n\t\t\t\t}\n\n\t\t\t\t// Entire file\n\t\t\t\telse {\n\t\t\t\t\tconst reader: ReadableStreamDefaultReader<Uint8Array> = file.stream().getReader();\n\n\t\t\t\t\tlet res = await reader.read();\n\t\t\t\t\twhile (!res.done) {\n\t\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Write buffer into stream but make sure to wait\n\t\t\t\t\t\t// in case the `highWaterMark` is reached\n\t\t\t\t\t\tawait stream.write(res.value);\n\n\t\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tres = await reader.read();\n\t\t\t\t\t}\n\t\t\t\t\tstream.end(undefined);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tstream.error(this.toFileSystemProviderError(error));\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst handle = await this.getFileHandle(resource);\n\t\t\tif (!handle) {\n\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such file or directory, readFile', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t}\n\n\t\t\tconst file = await handle.getFile();\n\n\t\t\treturn new Uint8Array(await file.arrayBuffer());\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> {\n\t\ttry {\n\t\t\tlet handle = await this.getFileHandle(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tif (handle) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow this.createFileSystemProviderError(resource, 'File already exists, writeFile', FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such file, writeFile', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create target as needed\n\t\t\tif (!handle) {\n\t\t\t\tconst parent = await this.getDirectoryHandle(this.extUri.dirname(resource));\n\t\t\t\tif (!parent) {\n\t\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such parent directory, writeFile', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t}\n\n\t\t\t\thandle = await parent.getFileHandle(this.extUri.basename(resource), { create: true });\n\t\t\t\tif (!handle) {\n\t\t\t\t\tthrow this.createFileSystemProviderError(resource, 'Unable to create file , writeFile', FileSystemProviderErrorCode.Unknown);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Write to target overwriting any existing contents\n\t\t\tconst writable = await handle.createWritable();\n\t\t\tawait writable.write(content);\n\t\t\tawait writable.close();\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tconst parent = await this.getDirectoryHandle(this.extUri.dirname(resource));\n\t\t\tif (!parent) {\n\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such parent directory, mkdir', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t}\n\n\t\t\tawait parent.getDirectoryHandle(this.extUri.basename(resource), { create: true });\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: IFileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst parent = await this.getDirectoryHandle(this.extUri.dirname(resource));\n\t\t\tif (!parent) {\n\t\t\t\tthrow this.createFileSystemProviderError(resource, 'No such parent directory, delete', FileSystemProviderErrorCode.FileNotFound);\n\t\t\t}\n\n\t\t\treturn parent.removeEntry(this.extUri.basename(resource), { recursive: opts.recursive });\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\ttry {\n\t\t\tif (this.extUri.isEqual(from, to)) {\n\t\t\t\treturn; // no-op if the paths are the same\n\t\t\t}\n\n\t\t\t// Implement file rename by write + delete\n\t\t\tconst fileHandle = await this.getFileHandle(from);\n\t\t\tif (fileHandle) {\n\t\t\t\tconst file = await fileHandle.getFile();\n\t\t\t\tconst contents = new Uint8Array(await file.arrayBuffer());\n\n\t\t\t\tawait this.writeFile(to, contents, { create: true, overwrite: opts.overwrite, unlock: false, atomic: false });\n\t\t\t\tawait this.delete(from, { recursive: false, useTrash: false, atomic: false });\n\t\t\t}\n\n\t\t\t// File API does not support any real rename otherwise\n\t\t\telse {\n\t\t\t\tthrow this.createFileSystemProviderError(from, localize('fileSystemRenameError', \"Rename is only supported for files.\"), FileSystemProviderErrorCode.Unavailable);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching (unsupported)\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\t//#endregion\n\n\t//#region File/Directoy Handle Registry\n\n\tprivate readonly _files = new Map<string, FileSystemFileHandle>();\n\tprivate readonly _directories = new Map<string, FileSystemDirectoryHandle>();\n\n\tregisterFileHandle(handle: FileSystemFileHandle): Promise<URI> {\n\t\treturn this.registerHandle(handle, this._files);\n\t}\n\n\tregisterDirectoryHandle(handle: FileSystemDirectoryHandle): Promise<URI> {\n\t\treturn this.registerHandle(handle, this._directories);\n\t}\n\n\tget directories(): Iterable<FileSystemDirectoryHandle> {\n\t\treturn this._directories.values();\n\t}\n\n\tprivate async registerHandle(handle: FileSystemHandle, map: Map<string, FileSystemHandle>): Promise<URI> {\n\t\tlet handleId = `/${handle.name}`;\n\n\t\t// Compute a valid handle ID in case this exists already\n\t\tif (map.has(handleId) && !await map.get(handleId)?.isSameEntry(handle)) {\n\t\t\tconst fileExt = extname(handle.name);\n\t\t\tconst fileName = basename(handle.name, fileExt);\n\n\t\t\tlet handleIdCounter = 1;\n\t\t\tdo {\n\t\t\t\thandleId = `/${fileName}-${handleIdCounter++}${fileExt}`;\n\t\t\t} while (map.has(handleId) && !await map.get(handleId)?.isSameEntry(handle));\n\t\t}\n\n\t\tmap.set(handleId, handle);\n\n\t\t// Remember in IndexDB for future lookup\n\t\ttry {\n\t\t\tawait this.indexedDB?.runInTransaction(this.store, 'readwrite', objectStore => objectStore.put(handle, handleId));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\n\t\treturn URI.from({ scheme: Schemas.file, path: handleId });\n\t}\n\n\tasync getHandle(resource: URI): Promise<FileSystemHandle | undefined> {\n\n\t\t// First: try to find a well known handle first\n\t\tlet handle = await this.doGetHandle(resource);\n\n\t\t// Second: walk up parent directories and resolve handle if possible\n\t\tif (!handle) {\n\t\t\tconst parent = await this.getDirectoryHandle(this.extUri.dirname(resource));\n\t\t\tif (parent) {\n\t\t\t\tconst name = extUri.basename(resource);\n\t\t\t\ttry {\n\t\t\t\t\thandle = await parent.getFileHandle(name);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle = await parent.getDirectoryHandle(name);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn handle;\n\t}\n\n\tprivate async getFileHandle(resource: URI): Promise<FileSystemFileHandle | undefined> {\n\t\tconst handle = await this.doGetHandle(resource);\n\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\treturn handle;\n\t\t}\n\n\t\tconst parent = await this.getDirectoryHandle(this.extUri.dirname(resource));\n\n\t\ttry {\n\t\t\treturn await parent?.getFileHandle(extUri.basename(resource));\n\t\t} catch (error) {\n\t\t\treturn undefined; // guard against possible DOMException\n\t\t}\n\t}\n\n\tprivate async getDirectoryHandle(resource: URI): Promise<FileSystemDirectoryHandle | undefined> {\n\t\tconst handle = await this.doGetHandle(resource);\n\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\treturn handle;\n\t\t}\n\n\t\tconst parentUri = this.extUri.dirname(resource);\n\t\tif (this.extUri.isEqual(parentUri, resource)) {\n\t\t\treturn undefined; // return when root is reached to prevent infinite recursion\n\t\t}\n\n\t\tconst parent = await this.getDirectoryHandle(parentUri);\n\n\t\ttry {\n\t\t\treturn await parent?.getDirectoryHandle(extUri.basename(resource));\n\t\t} catch (error) {\n\t\t\treturn undefined; // guard against possible DOMException\n\t\t}\n\t}\n\n\tprivate async doGetHandle(resource: URI): Promise<FileSystemHandle | undefined> {\n\n\t\t// We store file system handles with the `handle.name`\n\t\t// and as such require the resource to be on the root\n\t\tif (this.extUri.dirname(resource).path !== '/') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst handleId = resource.path.replace(/\\/$/, ''); // remove potential slash from the end of the path\n\n\t\t// First: check if we have a known handle stored in memory\n\t\tconst inMemoryHandle = this._files.get(handleId) ?? this._directories.get(handleId);\n\t\tif (inMemoryHandle) {\n\t\t\treturn inMemoryHandle;\n\t\t}\n\n\t\t// Second: check if we have a persisted handle in IndexedDB\n\t\tconst persistedHandle = await this.indexedDB?.runInTransaction(this.store, 'readonly', store => store.get(handleId));\n\t\tif (WebFileSystemAccess.isFileSystemHandle(persistedHandle)) {\n\t\t\tlet hasPermissions = await persistedHandle.queryPermission() === 'granted';\n\t\t\ttry {\n\t\t\t\tif (!hasPermissions) {\n\t\t\t\t\thasPermissions = await persistedHandle.requestPermission() === 'granted';\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error); // this can fail with a DOMException\n\t\t\t}\n\n\t\t\tif (hasPermissions) {\n\t\t\t\tif (WebFileSystemAccess.isFileSystemFileHandle(persistedHandle)) {\n\t\t\t\t\tthis._files.set(handleId, persistedHandle);\n\t\t\t\t} else if (WebFileSystemAccess.isFileSystemDirectoryHandle(persistedHandle)) {\n\t\t\t\t\tthis._directories.set(handleId, persistedHandle);\n\t\t\t\t}\n\n\t\t\t\treturn persistedHandle;\n\t\t\t}\n\t\t}\n\n\t\t// Third: fail with an error\n\t\tthrow this.createFileSystemProviderError(resource, 'No file system handle registered', FileSystemProviderErrorCode.Unavailable);\n\t}\n\n\t//#endregion\n\n\tprivate toFileSystemProviderError(error: Error): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code = FileSystemProviderErrorCode.Unknown;\n\t\tif (error.name === 'NotAllowedError') {\n\t\t\terror = new Error(localize('fileSystemNotAllowedError', \"Insufficient permissions. Please retry and allow the operation.\"));\n\t\t\tcode = FileSystemProviderErrorCode.Unavailable;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\tprivate createFileSystemProviderError(resource: URI, msg: string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\t\treturn createFileSystemProviderError(new Error(`${msg} (${normalize(resource.path)})`), code);\n\t}\n}\n"]}