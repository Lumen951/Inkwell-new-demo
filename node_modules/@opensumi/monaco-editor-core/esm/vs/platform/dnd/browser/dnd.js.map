{"version":3,"sources":["vs/platform/dnd/browser/dnd.ts"],"names":[],"mappings":"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","file":"dnd.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from '../../../base/browser/dnd';\nimport { mainWindow } from '../../../base/browser/window';\nimport { DragMouseEvent } from '../../../base/browser/mouseEvent';\nimport { coalesce } from '../../../base/common/arrays';\nimport { DeferredPromise } from '../../../base/common/async';\nimport { VSBuffer } from '../../../base/common/buffer';\nimport { ResourceMap } from '../../../base/common/map';\nimport { parse } from '../../../base/common/marshalling';\nimport { Schemas } from '../../../base/common/network';\nimport { isWeb } from '../../../base/common/platform';\nimport { URI } from '../../../base/common/uri';\nimport { localize } from '../../../nls';\nimport { IDialogService } from '../../dialogs/common/dialogs';\nimport { IBaseTextResourceEditorInput } from '../../editor/common/editor';\nimport { HTMLFileSystemProvider } from '../../files/browser/htmlFileSystemProvider';\nimport { WebFileSystemAccess } from '../../files/browser/webFileSystemAccess';\nimport { ByteSize, IFileService } from '../../files/common/files';\nimport { IInstantiationService, ServicesAccessor } from '../../instantiation/common/instantiation';\nimport { extractSelection } from '../../opener/common/opener';\nimport { Registry } from '../../registry/common/platform';\n\nexport interface FileAdditionalNativeProperties {\n\t/**\n\t * The real path to the file on the users filesystem. Only available on electron.\n\t */\n\treadonly path?: string;\n}\n\n\n//#region Editor / Resources DND\n\nexport const CodeDataTransfers = {\n\tEDITORS: 'CodeEditors',\n\tFILES: 'CodeFiles'\n};\n\nexport interface IDraggedResourceEditorInput extends IBaseTextResourceEditorInput {\n\tresource: URI | undefined;\n\n\t/**\n\t * A hint that the source of the dragged editor input\n\t * might not be the application but some external tool.\n\t */\n\tisExternal?: boolean;\n\n\t/**\n\t * Whether we probe for the dropped editor to be a workspace\n\t * (i.e. code-workspace file or even a folder), allowing to\n\t * open it as workspace instead of opening as editor.\n\t */\n\tallowWorkspaceOpen?: boolean;\n}\n\nexport function extractEditorsDropData(e: DragEvent): Array<IDraggedResourceEditorInput> {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\tif (e.dataTransfer && e.dataTransfer.types.length > 0) {\n\n\t\t// Data Transfer: Code Editors\n\t\tconst rawEditorsData = e.dataTransfer.getData(CodeDataTransfers.EDITORS);\n\t\tif (rawEditorsData) {\n\t\t\ttry {\n\t\t\t\teditors.push(...parse(rawEditorsData));\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Data Transfer: Resources\n\t\telse {\n\t\t\ttry {\n\t\t\t\tconst rawResourcesData = e.dataTransfer.getData(DataTransfers.RESOURCES);\n\t\t\t\teditors.push(...createDraggedEditorInputFromRawResourcesData(rawResourcesData));\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Check for native file transfer\n\t\tif (e.dataTransfer?.files) {\n\t\t\tfor (let i = 0; i < e.dataTransfer.files.length; i++) {\n\t\t\t\tconst file = e.dataTransfer.files[i];\n\t\t\t\tif (file && (file as FileAdditionalNativeProperties).path /* Electron only */) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\teditors.push({ resource: URI.file((file as FileAdditionalNativeProperties).path!), isExternal: true, allowWorkspaceOpen: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Invalid URI\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for CodeFiles transfer\n\t\tconst rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n\t\tif (rawCodeFiles) {\n\t\t\ttry {\n\t\t\t\tconst codeFiles: string[] = JSON.parse(rawCodeFiles);\n\t\t\t\tfor (const codeFile of codeFiles) {\n\t\t\t\t\teditors.push({ resource: URI.file(codeFile), isExternal: true, allowWorkspaceOpen: true });\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Workbench contributions\n\t\tconst contributions = Registry.as<IDragAndDropContributionRegistry>(Extensions.DragAndDropContribution).getAll();\n\t\tfor (const contribution of contributions) {\n\t\t\tconst data = e.dataTransfer.getData(contribution.dataFormatKey);\n\t\t\tif (data) {\n\t\t\t\ttry {\n\t\t\t\t\teditors.push(...contribution.getEditorInputs(data));\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Invalid transfer\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent duplicates: it is possible that we end up with the same\n\t// dragged editor multiple times because multiple data transfers\n\t// are being used (https://github.com/microsoft/vscode/issues/128925)\n\n\tconst coalescedEditors: IDraggedResourceEditorInput[] = [];\n\tconst seen = new ResourceMap<boolean>();\n\tfor (const editor of editors) {\n\t\tif (!editor.resource) {\n\t\t\tcoalescedEditors.push(editor);\n\t\t} else if (!seen.has(editor.resource)) {\n\t\t\tcoalescedEditors.push(editor);\n\t\t\tseen.set(editor.resource, true);\n\t\t}\n\t}\n\n\treturn coalescedEditors;\n}\n\nexport async function extractEditorsAndFilesDropData(accessor: ServicesAccessor, e: DragEvent): Promise<Array<IDraggedResourceEditorInput>> {\n\tconst editors = extractEditorsDropData(e);\n\n\t// Web: Check for file transfer\n\tif (e.dataTransfer && isWeb && containsDragType(e, DataTransfers.FILES)) {\n\t\tconst files = e.dataTransfer.items;\n\t\tif (files) {\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst filesData = await instantiationService.invokeFunction(accessor => extractFilesDropData(accessor, e));\n\t\t\tfor (const fileData of filesData) {\n\t\t\t\teditors.push({ resource: fileData.resource, contents: fileData.contents?.toString(), isExternal: true, allowWorkspaceOpen: fileData.isDirectory });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn editors;\n}\n\nexport function createDraggedEditorInputFromRawResourcesData(rawResourcesData: string | undefined): IDraggedResourceEditorInput[] {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\n\tif (rawResourcesData) {\n\t\tconst resourcesRaw: string[] = JSON.parse(rawResourcesData);\n\t\tfor (const resourceRaw of resourcesRaw) {\n\t\t\tif (resourceRaw.indexOf(':') > 0) { // mitigate https://github.com/microsoft/vscode/issues/124946\n\t\t\t\tconst { selection, uri } = extractSelection(URI.parse(resourceRaw));\n\t\t\t\teditors.push({ resource: uri, options: { selection } });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn editors;\n}\n\n\ninterface IFileTransferData {\n\tresource: URI;\n\tisDirectory?: boolean;\n\tcontents?: VSBuffer;\n}\n\nasync function extractFilesDropData(accessor: ServicesAccessor, event: DragEvent): Promise<IFileTransferData[]> {\n\n\t// Try to extract via `FileSystemHandle`\n\tif (WebFileSystemAccess.supported(mainWindow)) {\n\t\tconst items = event.dataTransfer?.items;\n\t\tif (items) {\n\t\t\treturn extractFileTransferData(accessor, items);\n\t\t}\n\t}\n\n\t// Try to extract via `FileList`\n\tconst files = event.dataTransfer?.files;\n\tif (!files) {\n\t\treturn [];\n\t}\n\n\treturn extractFileListData(accessor, files);\n}\n\nasync function extractFileTransferData(accessor: ServicesAccessor, items: DataTransferItemList): Promise<IFileTransferData[]> {\n\tconst fileSystemProvider = accessor.get(IFileService).getProvider(Schemas.file);\n\tif (!(fileSystemProvider instanceof HTMLFileSystemProvider)) {\n\t\treturn []; // only supported when running in web\n\t}\n\n\tconst results: DeferredPromise<IFileTransferData | undefined>[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst file = items[i];\n\t\tif (file) {\n\t\t\tconst result = new DeferredPromise<IFileTransferData | undefined>();\n\t\t\tresults.push(result);\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst handle = await file.getAsFileSystemHandle();\n\t\t\t\t\tif (!handle) {\n\t\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (WebFileSystemAccess.isFileSystemFileHandle(handle)) {\n\t\t\t\t\t\tresult.complete({\n\t\t\t\t\t\t\tresource: await fileSystemProvider.registerFileHandle(handle),\n\t\t\t\t\t\t\tisDirectory: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (WebFileSystemAccess.isFileSystemDirectoryHandle(handle)) {\n\t\t\t\t\t\tresult.complete({\n\t\t\t\t\t\t\tresource: await fileSystemProvider.registerDirectoryHandle(handle),\n\t\t\t\t\t\t\tisDirectory: true\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n\n\treturn coalesce(await Promise.all(results.map(result => result.p)));\n}\n\nexport async function extractFileListData(accessor: ServicesAccessor, files: FileList): Promise<IFileTransferData[]> {\n\tconst dialogService = accessor.get(IDialogService);\n\n\tconst results: DeferredPromise<IFileTransferData | undefined>[] = [];\n\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files.item(i);\n\t\tif (file) {\n\n\t\t\t// Skip for very large files because this operation is unbuffered\n\t\t\tif (file.size > 100 * ByteSize.MB) {\n\t\t\t\tdialogService.warn(localize('fileTooLarge', \"File is too large to open as untitled editor. Please upload it first into the file explorer and then try again.\"));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst result = new DeferredPromise<IFileTransferData | undefined>();\n\t\t\tresults.push(result);\n\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onerror = () => result.complete(undefined);\n\t\t\treader.onabort = () => result.complete(undefined);\n\n\t\t\treader.onload = async event => {\n\t\t\t\tconst name = file.name;\n\t\t\t\tconst loadResult = event.target?.result ?? undefined;\n\t\t\t\tif (typeof name !== 'string' || typeof loadResult === 'undefined') {\n\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.complete({\n\t\t\t\t\tresource: URI.from({ scheme: Schemas.untitled, path: name }),\n\t\t\t\t\tcontents: typeof loadResult === 'string' ? VSBuffer.fromString(loadResult) : VSBuffer.wrap(new Uint8Array(loadResult))\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// Start reading\n\t\t\treader.readAsArrayBuffer(file);\n\t\t}\n\t}\n\n\treturn coalesce(await Promise.all(results.map(result => result.p)));\n}\n\n//#endregion\n\nexport function containsDragType(event: DragEvent, ...dragTypesToFind: string[]): boolean {\n\tif (!event.dataTransfer) {\n\t\treturn false;\n\t}\n\n\tconst dragTypes = event.dataTransfer.types;\n\tconst lowercaseDragTypes: string[] = [];\n\tfor (let i = 0; i < dragTypes.length; i++) {\n\t\tlowercaseDragTypes.push(dragTypes[i].toLowerCase()); // somehow the types are lowercase\n\t}\n\n\tfor (const dragType of dragTypesToFind) {\n\t\tif (lowercaseDragTypes.indexOf(dragType.toLowerCase()) >= 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n//#region DND contributions\n\nexport interface IResourceStat {\n\tresource: URI;\n\tisDirectory?: boolean;\n}\n\nexport interface IDragAndDropContributionRegistry {\n\t/**\n\t * Registers a drag and drop contribution.\n\t */\n\tregister(contribution: IDragAndDropContribution): void;\n\n\t/**\n\t * Returns all registered drag and drop contributions.\n\t */\n\tgetAll(): IterableIterator<IDragAndDropContribution>;\n}\n\ninterface IDragAndDropContribution {\n\treadonly dataFormatKey: string;\n\tgetEditorInputs(data: string): IDraggedResourceEditorInput[];\n\tsetData(resources: IResourceStat[], event: DragMouseEvent | DragEvent): void;\n}\n\nclass DragAndDropContributionRegistry implements IDragAndDropContributionRegistry {\n\tprivate readonly _contributions = new Map<string, IDragAndDropContribution>();\n\n\tregister(contribution: IDragAndDropContribution): void {\n\t\tif (this._contributions.has(contribution.dataFormatKey)) {\n\t\t\tthrow new Error(`A drag and drop contributiont with key '${contribution.dataFormatKey}' was already registered.`);\n\t\t}\n\t\tthis._contributions.set(contribution.dataFormatKey, contribution);\n\t}\n\n\tgetAll(): IterableIterator<IDragAndDropContribution> {\n\t\treturn this._contributions.values();\n\t}\n}\n\nexport const Extensions = {\n\tDragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\n\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n\n//#endregion\n\n//#region DND Utilities\n\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer<T> {\n\n\tprivate static readonly INSTANCE = new LocalSelectionTransfer();\n\n\tprivate data?: T[];\n\tprivate proto?: T;\n\n\tprivate constructor() {\n\t\t// protect against external instantiation\n\t}\n\n\tstatic getInstance<T>(): LocalSelectionTransfer<T> {\n\t\treturn LocalSelectionTransfer.INSTANCE as LocalSelectionTransfer<T>;\n\t}\n\n\thasData(proto: T): boolean {\n\t\treturn proto && proto === this.proto;\n\t}\n\n\tclearData(proto: T): void {\n\t\tif (this.hasData(proto)) {\n\t\t\tthis.proto = undefined;\n\t\t\tthis.data = undefined;\n\t\t}\n\t}\n\n\tgetData(proto: T): T[] | undefined {\n\t\tif (this.hasData(proto)) {\n\t\t\treturn this.data;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tsetData(data: T[], proto: T): void {\n\t\tif (proto) {\n\t\t\tthis.data = data;\n\t\t\tthis.proto = proto;\n\t\t}\n\t}\n}\n\n//#endregion\n"]}