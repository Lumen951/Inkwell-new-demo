{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/platform/clipboard/common/clipboardService.ts","vs/platform/clipboard/common/clipboardService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,4EAA2E;AAE9D,QAAA,iBAAiB,GAAG,IAAA,+BAAe,EAAoB,kBAAkB,CAAC,CAAC","file":"clipboardService.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri';\nimport { createDecorator } from '../../instantiation/common/instantiation';\n\nexport const IClipboardService = createDecorator<IClipboardService>('clipboardService');\n\nexport interface IClipboardService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Writes text to the system clipboard.\n\t */\n\twriteText(text: string, type?: string): Promise<void>;\n\n\t/**\n\t * Reads the content of the clipboard in plain text\n\t */\n\treadText(type?: string): Promise<string>;\n\n\t/**\n\t * Reads text from the system find pasteboard.\n\t */\n\treadFindText(): Promise<string>;\n\n\t/**\n\t * Writes text to the system find pasteboard.\n\t */\n\twriteFindText(text: string): Promise<void>;\n\n\t/**\n\t * Writes resources to the system clipboard.\n\t */\n\twriteResources(resources: URI[]): Promise<void>;\n\n\t/**\n\t * Reads resources from the system clipboard.\n\t */\n\treadResources(): Promise<URI[]>;\n\n\t/**\n\t * Find out if resources are copied to the clipboard.\n\t */\n\thasResources(): Promise<boolean>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri';\nimport { createDecorator } from '../../instantiation/common/instantiation';\n\nexport const IClipboardService = createDecorator<IClipboardService>('clipboardService');\n\nexport interface IClipboardService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Writes text to the system clipboard.\n\t */\n\twriteText(text: string, type?: string): Promise<void>;\n\n\t/**\n\t * Reads the content of the clipboard in plain text\n\t */\n\treadText(type?: string): Promise<string>;\n\n\t/**\n\t * Reads text from the system find pasteboard.\n\t */\n\treadFindText(): Promise<string>;\n\n\t/**\n\t * Writes text to the system find pasteboard.\n\t */\n\twriteFindText(text: string): Promise<void>;\n\n\t/**\n\t * Writes resources to the system clipboard.\n\t */\n\twriteResources(resources: URI[]): Promise<void>;\n\n\t/**\n\t * Reads resources from the system clipboard.\n\t */\n\treadResources(): Promise<URI[]>;\n\n\t/**\n\t * Find out if resources are copied to the clipboard.\n\t */\n\thasResources(): Promise<boolean>;\n}\n"]}