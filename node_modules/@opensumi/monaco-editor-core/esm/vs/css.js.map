{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/css.ts","vs/css.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAMhG;;;;GAIG;AACH,SAAgB,IAAI,CAAC,IAAY,EAAE,GAA+B,EAAE,IAAmC,EAAE,MAAuC;IAC/I,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IACtB,MAAM,SAAS,GAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IAE7D,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;QACxB,qDAAqD;QACrD,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,OAAO;IACR,CAAC;IAED,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;IACxC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE;QAC1B,IAAI,CAAC,EAAE,CAAC,CAAC;IACV,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;QACf,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,UAAU,EAAE,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC;QAC9C,CAAC;IACF,CAAC,CAAC,CAAC;AACJ,CAAC;AAlBD,oBAkBC;AAED,SAAS,OAAO,CAAC,IAAY,EAAE,MAAc,EAAE,QAAoB,EAAE,SAA6B;IACjG,IAAI,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;QACjC,QAAQ,EAAE,CAAC;QACX,OAAO;IACR,CAAC;IACD,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AAClD,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAE,MAAc;IAClD,iDAAiD;IACjD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;IAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACpD,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC;QACb,CAAC;IACF,CAAC;IACD,OAAO,KAAK,CAAC;AACd,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAE,MAAc,EAAE,QAAoB,EAAE,SAA6B;IACvG,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAC3C,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAC1C,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAEzC,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IACrD,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEtC,iDAAiD;IACjD,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,eAAe,CAAC,IAAY,EAAE,QAAyB,EAAE,QAAoB,EAAE,SAA6B;IACpH,MAAM,MAAM,GAAG,GAAG,EAAE;QACnB,QAAQ,CAAC,mBAAmB,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QACxD,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IAC3D,CAAC,CAAC;IACF,MAAM,iBAAiB,GAAG,CAAC,CAAM,EAAE,EAAE;QACpC,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,CAAC;IACZ,CAAC,CAAC;IACF,MAAM,kBAAkB,GAAG,CAAC,CAAM,EAAE,EAAE;QACrC,MAAM,EAAE,CAAC;QACT,SAAS,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC;IACF,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IACrD,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;AACxD,CAAC","file":"css.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ninterface ICSSPluginConfig {\n\tdisabled?: boolean;\n}\n\n/**\n * Invoked by the loader at run-time\n *\n * @skipMangle\n */\nexport function load(name: string, req: AMDLoader.IRelativeRequire, load: AMDLoader.IPluginLoadCallback, config: AMDLoader.IConfigurationOptions): void {\n\tconfig = config || {};\n\tconst cssConfig = <ICSSPluginConfig>(config['vs/css'] || {});\n\n\tif (cssConfig.disabled) {\n\t\t// the plugin is asked to not create any style sheets\n\t\tload({});\n\t\treturn;\n\t}\n\n\tconst cssUrl = req.toUrl(name + '.css');\n\tloadCSS(name, cssUrl, () => {\n\t\tload({});\n\t}, (err: any) => {\n\t\tif (typeof load.error === 'function') {\n\t\t\tload.error('Could not find ' + cssUrl + '.');\n\t\t}\n\t});\n}\n\nfunction loadCSS(name: string, cssUrl: string, callback: () => void, errorback: (err: any) => void): void {\n\tif (linkTagExists(name, cssUrl)) {\n\t\tcallback();\n\t\treturn;\n\t}\n\tcreateLinkTag(name, cssUrl, callback, errorback);\n}\n\nfunction linkTagExists(name: string, cssUrl: string): boolean {\n\t// eslint-disable-next-line no-restricted-globals\n\tconst links = window.document.getElementsByTagName('link');\n\tfor (let i = 0, len = links.length; i < len; i++) {\n\t\tconst nameAttr = links[i].getAttribute('data-name');\n\t\tconst hrefAttr = links[i].getAttribute('href');\n\t\tif (nameAttr === name || hrefAttr === cssUrl) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction createLinkTag(name: string, cssUrl: string, callback: () => void, errorback: (err: any) => void): void {\n\tconst linkNode = document.createElement('link');\n\tlinkNode.setAttribute('rel', 'stylesheet');\n\tlinkNode.setAttribute('type', 'text/css');\n\tlinkNode.setAttribute('data-name', name);\n\n\tattachListeners(name, linkNode, callback, errorback);\n\tlinkNode.setAttribute('href', cssUrl);\n\n\t// eslint-disable-next-line no-restricted-globals\n\tconst head = window.document.head || window.document.getElementsByTagName('head')[0];\n\thead.appendChild(linkNode);\n}\n\nfunction attachListeners(name: string, linkNode: HTMLLinkElement, callback: () => void, errorback: (err: any) => void): void {\n\tconst unbind = () => {\n\t\tlinkNode.removeEventListener('load', loadEventListener);\n\t\tlinkNode.removeEventListener('error', errorEventListener);\n\t};\n\tconst loadEventListener = (e: any) => {\n\t\tunbind();\n\t\tcallback();\n\t};\n\tconst errorEventListener = (e: any) => {\n\t\tunbind();\n\t\terrorback(e);\n\t};\n\tlinkNode.addEventListener('load', loadEventListener);\n\tlinkNode.addEventListener('error', errorEventListener);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ninterface ICSSPluginConfig {\n\tdisabled?: boolean;\n}\n\n/**\n * Invoked by the loader at run-time\n *\n * @skipMangle\n */\nexport function load(name: string, req: AMDLoader.IRelativeRequire, load: AMDLoader.IPluginLoadCallback, config: AMDLoader.IConfigurationOptions): void {\n\tconfig = config || {};\n\tconst cssConfig = <ICSSPluginConfig>(config['vs/css'] || {});\n\n\tif (cssConfig.disabled) {\n\t\t// the plugin is asked to not create any style sheets\n\t\tload({});\n\t\treturn;\n\t}\n\n\tconst cssUrl = req.toUrl(name + '.css');\n\tloadCSS(name, cssUrl, () => {\n\t\tload({});\n\t}, (err: any) => {\n\t\tif (typeof load.error === 'function') {\n\t\t\tload.error('Could not find ' + cssUrl + '.');\n\t\t}\n\t});\n}\n\nfunction loadCSS(name: string, cssUrl: string, callback: () => void, errorback: (err: any) => void): void {\n\tif (linkTagExists(name, cssUrl)) {\n\t\tcallback();\n\t\treturn;\n\t}\n\tcreateLinkTag(name, cssUrl, callback, errorback);\n}\n\nfunction linkTagExists(name: string, cssUrl: string): boolean {\n\t// eslint-disable-next-line no-restricted-globals\n\tconst links = window.document.getElementsByTagName('link');\n\tfor (let i = 0, len = links.length; i < len; i++) {\n\t\tconst nameAttr = links[i].getAttribute('data-name');\n\t\tconst hrefAttr = links[i].getAttribute('href');\n\t\tif (nameAttr === name || hrefAttr === cssUrl) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction createLinkTag(name: string, cssUrl: string, callback: () => void, errorback: (err: any) => void): void {\n\tconst linkNode = document.createElement('link');\n\tlinkNode.setAttribute('rel', 'stylesheet');\n\tlinkNode.setAttribute('type', 'text/css');\n\tlinkNode.setAttribute('data-name', name);\n\n\tattachListeners(name, linkNode, callback, errorback);\n\tlinkNode.setAttribute('href', cssUrl);\n\n\t// eslint-disable-next-line no-restricted-globals\n\tconst head = window.document.head || window.document.getElementsByTagName('head')[0];\n\thead.appendChild(linkNode);\n}\n\nfunction attachListeners(name: string, linkNode: HTMLLinkElement, callback: () => void, errorback: (err: any) => void): void {\n\tconst unbind = () => {\n\t\tlinkNode.removeEventListener('load', loadEventListener);\n\t\tlinkNode.removeEventListener('error', errorEventListener);\n\t};\n\tconst loadEventListener = (e: any) => {\n\t\tunbind();\n\t\tcallback();\n\t};\n\tconst errorEventListener = (e: any) => {\n\t\tunbind();\n\t\terrorback(e);\n\t};\n\tlinkNode.addEventListener('load', loadEventListener);\n\tlinkNode.addEventListener('error', errorEventListener);\n}\n"]}