{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/base/browser/ui/breadcrumbs/breadcrumbsWidget.ts","vs/base/browser/ui/breadcrumbs/breadcrumbsWidget.ts"],"names":[],"mappings":"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","file":"breadcrumbsWidget.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../dom';\nimport { IMouseEvent } from '../../mouseEvent';\nimport { DomScrollableElement } from '../scrollbar/scrollableElement';\nimport { commonPrefixLength } from '../../../common/arrays';\nimport { ThemeIcon } from '../../../common/themables';\nimport { Emitter, Event } from '../../../common/event';\nimport { DisposableStore, dispose, IDisposable } from '../../../common/lifecycle';\nimport { ScrollbarVisibility } from '../../../common/scrollable';\nimport './breadcrumbsWidget.css';\n\nexport abstract class BreadcrumbsItem {\n\tabstract dispose(): void;\n\tabstract equals(other: BreadcrumbsItem): boolean;\n\tabstract render(container: HTMLElement): void;\n}\n\nexport interface IBreadcrumbsWidgetStyles {\n\treadonly breadcrumbsBackground: string | undefined;\n\treadonly breadcrumbsForeground: string | undefined;\n\treadonly breadcrumbsHoverForeground: string | undefined;\n\treadonly breadcrumbsFocusForeground: string | undefined;\n\treadonly breadcrumbsFocusAndSelectionForeground: string | undefined;\n}\n\nexport interface IBreadcrumbsItemEvent {\n\ttype: 'select' | 'focus';\n\titem: BreadcrumbsItem;\n\tnode: HTMLElement;\n\tpayload: any;\n}\n\nexport class BreadcrumbsWidget {\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _domNode: HTMLDivElement;\n\tprivate readonly _scrollable: DomScrollableElement;\n\n\tprivate readonly _onDidSelectItem = new Emitter<IBreadcrumbsItemEvent>();\n\tprivate readonly _onDidFocusItem = new Emitter<IBreadcrumbsItemEvent>();\n\tprivate readonly _onDidChangeFocus = new Emitter<boolean>();\n\n\treadonly onDidSelectItem: Event<IBreadcrumbsItemEvent> = this._onDidSelectItem.event;\n\treadonly onDidFocusItem: Event<IBreadcrumbsItemEvent> = this._onDidFocusItem.event;\n\treadonly onDidChangeFocus: Event<boolean> = this._onDidChangeFocus.event;\n\n\tprivate readonly _items = new Array<BreadcrumbsItem>();\n\tprivate readonly _nodes = new Array<HTMLDivElement>();\n\tprivate readonly _freeNodes = new Array<HTMLDivElement>();\n\tprivate readonly _separatorIcon: ThemeIcon;\n\n\tprivate _enabled: boolean = true;\n\tprivate _focusedItemIdx: number = -1;\n\tprivate _selectedItemIdx: number = -1;\n\n\tprivate _pendingLayout: IDisposable | undefined;\n\tprivate _dimension: dom.Dimension | undefined;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\thorizontalScrollbarSize: number,\n\t\tseparatorIcon: ThemeIcon,\n\t\tstyles: IBreadcrumbsWidgetStyles\n\t) {\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.className = 'monaco-breadcrumbs';\n\t\tthis._domNode.tabIndex = 0;\n\t\tthis._domNode.setAttribute('role', 'list');\n\t\tthis._scrollable = new DomScrollableElement(this._domNode, {\n\t\t\tvertical: ScrollbarVisibility.Hidden,\n\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\thorizontalScrollbarSize,\n\t\t\tuseShadows: false,\n\t\t\tscrollYToX: true\n\t\t});\n\t\tthis._separatorIcon = separatorIcon;\n\t\tthis._disposables.add(this._scrollable);\n\t\tthis._disposables.add(dom.addStandardDisposableListener(this._domNode, 'click', e => this._onClick(e)));\n\t\tcontainer.appendChild(this._scrollable.getDomNode());\n\n\t\tconst styleElement = dom.createStyleSheet(this._domNode);\n\t\tthis._style(styleElement, styles);\n\n\t\tconst focusTracker = dom.trackFocus(this._domNode);\n\t\tthis._disposables.add(focusTracker);\n\t\tthis._disposables.add(focusTracker.onDidBlur(_ => this._onDidChangeFocus.fire(false)));\n\t\tthis._disposables.add(focusTracker.onDidFocus(_ => this._onDidChangeFocus.fire(true)));\n\t}\n\n\tsetHorizontalScrollbarSize(size: number) {\n\t\tthis._scrollable.updateOptions({\n\t\t\thorizontalScrollbarSize: size\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._pendingLayout?.dispose();\n\t\tthis._onDidSelectItem.dispose();\n\t\tthis._onDidFocusItem.dispose();\n\t\tthis._onDidChangeFocus.dispose();\n\t\tthis._domNode.remove();\n\t\tthis._nodes.length = 0;\n\t\tthis._freeNodes.length = 0;\n\t}\n\n\tlayout(dim: dom.Dimension | undefined): void {\n\t\tif (dim && dom.Dimension.equals(dim, this._dimension)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingLayout?.dispose();\n\t\tif (dim) {\n\t\t\t// only measure\n\t\t\tthis._pendingLayout = this._updateDimensions(dim);\n\t\t} else {\n\t\t\tthis._pendingLayout = this._updateScrollbar();\n\t\t}\n\t}\n\n\tprivate _updateDimensions(dim: dom.Dimension): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(dom.modify(dom.getWindow(this._domNode), () => {\n\t\t\tthis._dimension = dim;\n\t\t\tthis._domNode.style.width = `${dim.width}px`;\n\t\t\tthis._domNode.style.height = `${dim.height}px`;\n\t\t\tdisposables.add(this._updateScrollbar());\n\t\t}));\n\t\treturn disposables;\n\t}\n\n\tprivate _updateScrollbar(): IDisposable {\n\t\treturn dom.measure(dom.getWindow(this._domNode), () => {\n\t\t\tdom.measure(dom.getWindow(this._domNode), () => { // double RAF\n\t\t\t\tthis._scrollable.setRevealOnScroll(false);\n\t\t\t\tthis._scrollable.scanDomNode();\n\t\t\t\tthis._scrollable.setRevealOnScroll(true);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _style(styleElement: HTMLStyleElement, style: IBreadcrumbsWidgetStyles): void {\n\t\tlet content = '';\n\t\tif (style.breadcrumbsBackground) {\n\t\t\tcontent += `.monaco-breadcrumbs { background-color: ${style.breadcrumbsBackground}}`;\n\t\t}\n\t\tif (style.breadcrumbsForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs .monaco-breadcrumb-item { color: ${style.breadcrumbsForeground}}\\n`;\n\t\t}\n\t\tif (style.breadcrumbsFocusForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs .monaco-breadcrumb-item.focused { color: ${style.breadcrumbsFocusForeground}}\\n`;\n\t\t}\n\t\tif (style.breadcrumbsFocusAndSelectionForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs .monaco-breadcrumb-item.focused.selected { color: ${style.breadcrumbsFocusAndSelectionForeground}}\\n`;\n\t\t}\n\t\tif (style.breadcrumbsHoverForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs:not(.disabled\t) .monaco-breadcrumb-item:hover:not(.focused):not(.selected) { color: ${style.breadcrumbsHoverForeground}}\\n`;\n\t\t}\n\t\tstyleElement.innerText = content;\n\t}\n\n\tsetEnabled(value: boolean) {\n\t\tthis._enabled = value;\n\t\tthis._domNode.classList.toggle('disabled', !this._enabled);\n\t}\n\n\tdomFocus(): void {\n\t\tconst idx = this._focusedItemIdx >= 0 ? this._focusedItemIdx : this._items.length - 1;\n\t\tif (idx >= 0 && idx < this._items.length) {\n\t\t\tthis._focus(idx, undefined);\n\t\t} else {\n\t\t\tthis._domNode.focus();\n\t\t}\n\t}\n\n\tisDOMFocused(): boolean {\n\t\treturn dom.isAncestorOfActiveElement(this._domNode);\n\t}\n\n\tgetFocused(): BreadcrumbsItem {\n\t\treturn this._items[this._focusedItemIdx];\n\t}\n\n\tsetFocused(item: BreadcrumbsItem | undefined, payload?: any): void {\n\t\tthis._focus(this._items.indexOf(item!), payload);\n\t}\n\n\tfocusPrev(payload?: any): any {\n\t\tif (this._focusedItemIdx > 0) {\n\t\t\tthis._focus(this._focusedItemIdx - 1, payload);\n\t\t}\n\t}\n\n\tfocusNext(payload?: any): any {\n\t\tif (this._focusedItemIdx + 1 < this._nodes.length) {\n\t\t\tthis._focus(this._focusedItemIdx + 1, payload);\n\t\t}\n\t}\n\n\tprivate _focus(nth: number, payload: any): void {\n\t\tthis._focusedItemIdx = -1;\n\t\tfor (let i = 0; i < this._nodes.length; i++) {\n\t\t\tconst node = this._nodes[i];\n\t\t\tif (i !== nth) {\n\t\t\t\tnode.classList.remove('focused');\n\t\t\t} else {\n\t\t\t\tthis._focusedItemIdx = i;\n\t\t\t\tnode.classList.add('focused');\n\t\t\t\tnode.focus();\n\t\t\t}\n\t\t}\n\t\tthis._reveal(this._focusedItemIdx, true);\n\t\tthis._onDidFocusItem.fire({ type: 'focus', item: this._items[this._focusedItemIdx], node: this._nodes[this._focusedItemIdx], payload });\n\t}\n\n\treveal(item: BreadcrumbsItem): void {\n\t\tconst idx = this._items.indexOf(item);\n\t\tif (idx >= 0) {\n\t\t\tthis._reveal(idx, false);\n\t\t}\n\t}\n\n\trevealLast(): void {\n\t\tthis._reveal(this._items.length - 1, false);\n\t}\n\n\tprivate _reveal(nth: number, minimal: boolean): void {\n\t\tif (nth < 0 || nth >= this._nodes.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst node = this._nodes[nth];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst { width } = this._scrollable.getScrollDimensions();\n\t\tconst { scrollLeft } = this._scrollable.getScrollPosition();\n\t\tif (!minimal || node.offsetLeft > scrollLeft + width || node.offsetLeft < scrollLeft) {\n\t\t\tthis._scrollable.setRevealOnScroll(false);\n\t\t\tthis._scrollable.setScrollPosition({ scrollLeft: node.offsetLeft });\n\t\t\tthis._scrollable.setRevealOnScroll(true);\n\t\t}\n\t}\n\n\tgetSelection(): BreadcrumbsItem {\n\t\treturn this._items[this._selectedItemIdx];\n\t}\n\n\tsetSelection(item: BreadcrumbsItem | undefined, payload?: any): void {\n\t\tthis._select(this._items.indexOf(item!), payload);\n\t}\n\n\tprivate _select(nth: number, payload: any): void {\n\t\tthis._selectedItemIdx = -1;\n\t\tfor (let i = 0; i < this._nodes.length; i++) {\n\t\t\tconst node = this._nodes[i];\n\t\t\tif (i !== nth) {\n\t\t\t\tnode.classList.remove('selected');\n\t\t\t} else {\n\t\t\t\tthis._selectedItemIdx = i;\n\t\t\t\tnode.classList.add('selected');\n\t\t\t}\n\t\t}\n\t\tthis._onDidSelectItem.fire({ type: 'select', item: this._items[this._selectedItemIdx], node: this._nodes[this._selectedItemIdx], payload });\n\t}\n\n\tgetItems(): readonly BreadcrumbsItem[] {\n\t\treturn this._items;\n\t}\n\n\tsetItems(items: BreadcrumbsItem[]): void {\n\t\tlet prefix: number | undefined;\n\t\tlet removed: BreadcrumbsItem[] = [];\n\t\ttry {\n\t\t\tprefix = commonPrefixLength(this._items, items, (a, b) => a.equals(b));\n\t\t\tremoved = this._items.splice(prefix, this._items.length - prefix, ...items.slice(prefix));\n\t\t\tthis._render(prefix);\n\t\t\tdispose(removed);\n\t\t\tthis._focus(-1, undefined);\n\t\t} catch (e) {\n\t\t\tconst newError = new Error(`BreadcrumbsItem#setItems: newItems: ${items.length}, prefix: ${prefix}, removed: ${removed.length}`);\n\t\t\tnewError.name = e.name;\n\t\t\tnewError.stack = e.stack;\n\t\t\tthrow newError;\n\t\t}\n\t}\n\n\tprivate _render(start: number): void {\n\t\tlet didChange = false;\n\t\tfor (; start < this._items.length && start < this._nodes.length; start++) {\n\t\t\tconst item = this._items[start];\n\t\t\tconst node = this._nodes[start];\n\t\t\tthis._renderItem(item, node);\n\t\t\tdidChange = true;\n\t\t}\n\t\t// case a: more nodes -> remove them\n\t\twhile (start < this._nodes.length) {\n\t\t\tconst free = this._nodes.pop();\n\t\t\tif (free) {\n\t\t\t\tthis._freeNodes.push(free);\n\t\t\t\tfree.remove();\n\t\t\t\tdidChange = true;\n\t\t\t}\n\t\t}\n\n\t\t// case b: more items -> render them\n\t\tfor (; start < this._items.length; start++) {\n\t\t\tconst item = this._items[start];\n\t\t\tconst node = this._freeNodes.length > 0 ? this._freeNodes.pop() : document.createElement('div');\n\t\t\tif (node) {\n\t\t\t\tthis._renderItem(item, node);\n\t\t\t\tthis._domNode.appendChild(node);\n\t\t\t\tthis._nodes.push(node);\n\t\t\t\tdidChange = true;\n\t\t\t}\n\t\t}\n\t\tif (didChange) {\n\t\t\tthis.layout(undefined);\n\t\t}\n\t}\n\n\tprivate _renderItem(item: BreadcrumbsItem, container: HTMLDivElement): void {\n\t\tdom.clearNode(container);\n\t\tcontainer.className = '';\n\t\ttry {\n\t\t\titem.render(container);\n\t\t} catch (err) {\n\t\t\tcontainer.innerText = '<<RENDER ERROR>>';\n\t\t\tconsole.error(err);\n\t\t}\n\t\tcontainer.tabIndex = -1;\n\t\tcontainer.setAttribute('role', 'listitem');\n\t\tcontainer.classList.add('monaco-breadcrumb-item');\n\t\tconst iconContainer = dom.$(ThemeIcon.asCSSSelector(this._separatorIcon));\n\t\tcontainer.appendChild(iconContainer);\n\t}\n\n\tprivate _onClick(event: IMouseEvent): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let el: HTMLElement | null = event.target; el; el = el.parentElement) {\n\t\t\tconst idx = this._nodes.indexOf(el as HTMLDivElement);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._focus(idx, event);\n\t\t\t\tthis._select(idx, event);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../dom';\nimport { IMouseEvent } from '../../mouseEvent';\nimport { DomScrollableElement } from '../scrollbar/scrollableElement';\nimport { commonPrefixLength } from '../../../common/arrays';\nimport { ThemeIcon } from '../../../common/themables';\nimport { Emitter, Event } from '../../../common/event';\nimport { DisposableStore, dispose, IDisposable } from '../../../common/lifecycle';\nimport { ScrollbarVisibility } from '../../../common/scrollable';\nimport './breadcrumbsWidget.css';\n\nexport abstract class BreadcrumbsItem {\n\tabstract dispose(): void;\n\tabstract equals(other: BreadcrumbsItem): boolean;\n\tabstract render(container: HTMLElement): void;\n}\n\nexport interface IBreadcrumbsWidgetStyles {\n\treadonly breadcrumbsBackground: string | undefined;\n\treadonly breadcrumbsForeground: string | undefined;\n\treadonly breadcrumbsHoverForeground: string | undefined;\n\treadonly breadcrumbsFocusForeground: string | undefined;\n\treadonly breadcrumbsFocusAndSelectionForeground: string | undefined;\n}\n\nexport interface IBreadcrumbsItemEvent {\n\ttype: 'select' | 'focus';\n\titem: BreadcrumbsItem;\n\tnode: HTMLElement;\n\tpayload: any;\n}\n\nexport class BreadcrumbsWidget {\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _domNode: HTMLDivElement;\n\tprivate readonly _scrollable: DomScrollableElement;\n\n\tprivate readonly _onDidSelectItem = new Emitter<IBreadcrumbsItemEvent>();\n\tprivate readonly _onDidFocusItem = new Emitter<IBreadcrumbsItemEvent>();\n\tprivate readonly _onDidChangeFocus = new Emitter<boolean>();\n\n\treadonly onDidSelectItem: Event<IBreadcrumbsItemEvent> = this._onDidSelectItem.event;\n\treadonly onDidFocusItem: Event<IBreadcrumbsItemEvent> = this._onDidFocusItem.event;\n\treadonly onDidChangeFocus: Event<boolean> = this._onDidChangeFocus.event;\n\n\tprivate readonly _items = new Array<BreadcrumbsItem>();\n\tprivate readonly _nodes = new Array<HTMLDivElement>();\n\tprivate readonly _freeNodes = new Array<HTMLDivElement>();\n\tprivate readonly _separatorIcon: ThemeIcon;\n\n\tprivate _enabled: boolean = true;\n\tprivate _focusedItemIdx: number = -1;\n\tprivate _selectedItemIdx: number = -1;\n\n\tprivate _pendingLayout: IDisposable | undefined;\n\tprivate _dimension: dom.Dimension | undefined;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\thorizontalScrollbarSize: number,\n\t\tseparatorIcon: ThemeIcon,\n\t\tstyles: IBreadcrumbsWidgetStyles\n\t) {\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.className = 'monaco-breadcrumbs';\n\t\tthis._domNode.tabIndex = 0;\n\t\tthis._domNode.setAttribute('role', 'list');\n\t\tthis._scrollable = new DomScrollableElement(this._domNode, {\n\t\t\tvertical: ScrollbarVisibility.Hidden,\n\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\thorizontalScrollbarSize,\n\t\t\tuseShadows: false,\n\t\t\tscrollYToX: true\n\t\t});\n\t\tthis._separatorIcon = separatorIcon;\n\t\tthis._disposables.add(this._scrollable);\n\t\tthis._disposables.add(dom.addStandardDisposableListener(this._domNode, 'click', e => this._onClick(e)));\n\t\tcontainer.appendChild(this._scrollable.getDomNode());\n\n\t\tconst styleElement = dom.createStyleSheet(this._domNode);\n\t\tthis._style(styleElement, styles);\n\n\t\tconst focusTracker = dom.trackFocus(this._domNode);\n\t\tthis._disposables.add(focusTracker);\n\t\tthis._disposables.add(focusTracker.onDidBlur(_ => this._onDidChangeFocus.fire(false)));\n\t\tthis._disposables.add(focusTracker.onDidFocus(_ => this._onDidChangeFocus.fire(true)));\n\t}\n\n\tsetHorizontalScrollbarSize(size: number) {\n\t\tthis._scrollable.updateOptions({\n\t\t\thorizontalScrollbarSize: size\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._pendingLayout?.dispose();\n\t\tthis._onDidSelectItem.dispose();\n\t\tthis._onDidFocusItem.dispose();\n\t\tthis._onDidChangeFocus.dispose();\n\t\tthis._domNode.remove();\n\t\tthis._nodes.length = 0;\n\t\tthis._freeNodes.length = 0;\n\t}\n\n\tlayout(dim: dom.Dimension | undefined): void {\n\t\tif (dim && dom.Dimension.equals(dim, this._dimension)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingLayout?.dispose();\n\t\tif (dim) {\n\t\t\t// only measure\n\t\t\tthis._pendingLayout = this._updateDimensions(dim);\n\t\t} else {\n\t\t\tthis._pendingLayout = this._updateScrollbar();\n\t\t}\n\t}\n\n\tprivate _updateDimensions(dim: dom.Dimension): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(dom.modify(dom.getWindow(this._domNode), () => {\n\t\t\tthis._dimension = dim;\n\t\t\tthis._domNode.style.width = `${dim.width}px`;\n\t\t\tthis._domNode.style.height = `${dim.height}px`;\n\t\t\tdisposables.add(this._updateScrollbar());\n\t\t}));\n\t\treturn disposables;\n\t}\n\n\tprivate _updateScrollbar(): IDisposable {\n\t\treturn dom.measure(dom.getWindow(this._domNode), () => {\n\t\t\tdom.measure(dom.getWindow(this._domNode), () => { // double RAF\n\t\t\t\tthis._scrollable.setRevealOnScroll(false);\n\t\t\t\tthis._scrollable.scanDomNode();\n\t\t\t\tthis._scrollable.setRevealOnScroll(true);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _style(styleElement: HTMLStyleElement, style: IBreadcrumbsWidgetStyles): void {\n\t\tlet content = '';\n\t\tif (style.breadcrumbsBackground) {\n\t\t\tcontent += `.monaco-breadcrumbs { background-color: ${style.breadcrumbsBackground}}`;\n\t\t}\n\t\tif (style.breadcrumbsForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs .monaco-breadcrumb-item { color: ${style.breadcrumbsForeground}}\\n`;\n\t\t}\n\t\tif (style.breadcrumbsFocusForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs .monaco-breadcrumb-item.focused { color: ${style.breadcrumbsFocusForeground}}\\n`;\n\t\t}\n\t\tif (style.breadcrumbsFocusAndSelectionForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs .monaco-breadcrumb-item.focused.selected { color: ${style.breadcrumbsFocusAndSelectionForeground}}\\n`;\n\t\t}\n\t\tif (style.breadcrumbsHoverForeground) {\n\t\t\tcontent += `.monaco-breadcrumbs:not(.disabled\t) .monaco-breadcrumb-item:hover:not(.focused):not(.selected) { color: ${style.breadcrumbsHoverForeground}}\\n`;\n\t\t}\n\t\tstyleElement.innerText = content;\n\t}\n\n\tsetEnabled(value: boolean) {\n\t\tthis._enabled = value;\n\t\tthis._domNode.classList.toggle('disabled', !this._enabled);\n\t}\n\n\tdomFocus(): void {\n\t\tconst idx = this._focusedItemIdx >= 0 ? this._focusedItemIdx : this._items.length - 1;\n\t\tif (idx >= 0 && idx < this._items.length) {\n\t\t\tthis._focus(idx, undefined);\n\t\t} else {\n\t\t\tthis._domNode.focus();\n\t\t}\n\t}\n\n\tisDOMFocused(): boolean {\n\t\treturn dom.isAncestorOfActiveElement(this._domNode);\n\t}\n\n\tgetFocused(): BreadcrumbsItem {\n\t\treturn this._items[this._focusedItemIdx];\n\t}\n\n\tsetFocused(item: BreadcrumbsItem | undefined, payload?: any): void {\n\t\tthis._focus(this._items.indexOf(item!), payload);\n\t}\n\n\tfocusPrev(payload?: any): any {\n\t\tif (this._focusedItemIdx > 0) {\n\t\t\tthis._focus(this._focusedItemIdx - 1, payload);\n\t\t}\n\t}\n\n\tfocusNext(payload?: any): any {\n\t\tif (this._focusedItemIdx + 1 < this._nodes.length) {\n\t\t\tthis._focus(this._focusedItemIdx + 1, payload);\n\t\t}\n\t}\n\n\tprivate _focus(nth: number, payload: any): void {\n\t\tthis._focusedItemIdx = -1;\n\t\tfor (let i = 0; i < this._nodes.length; i++) {\n\t\t\tconst node = this._nodes[i];\n\t\t\tif (i !== nth) {\n\t\t\t\tnode.classList.remove('focused');\n\t\t\t} else {\n\t\t\t\tthis._focusedItemIdx = i;\n\t\t\t\tnode.classList.add('focused');\n\t\t\t\tnode.focus();\n\t\t\t}\n\t\t}\n\t\tthis._reveal(this._focusedItemIdx, true);\n\t\tthis._onDidFocusItem.fire({ type: 'focus', item: this._items[this._focusedItemIdx], node: this._nodes[this._focusedItemIdx], payload });\n\t}\n\n\treveal(item: BreadcrumbsItem): void {\n\t\tconst idx = this._items.indexOf(item);\n\t\tif (idx >= 0) {\n\t\t\tthis._reveal(idx, false);\n\t\t}\n\t}\n\n\trevealLast(): void {\n\t\tthis._reveal(this._items.length - 1, false);\n\t}\n\n\tprivate _reveal(nth: number, minimal: boolean): void {\n\t\tif (nth < 0 || nth >= this._nodes.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst node = this._nodes[nth];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst { width } = this._scrollable.getScrollDimensions();\n\t\tconst { scrollLeft } = this._scrollable.getScrollPosition();\n\t\tif (!minimal || node.offsetLeft > scrollLeft + width || node.offsetLeft < scrollLeft) {\n\t\t\tthis._scrollable.setRevealOnScroll(false);\n\t\t\tthis._scrollable.setScrollPosition({ scrollLeft: node.offsetLeft });\n\t\t\tthis._scrollable.setRevealOnScroll(true);\n\t\t}\n\t}\n\n\tgetSelection(): BreadcrumbsItem {\n\t\treturn this._items[this._selectedItemIdx];\n\t}\n\n\tsetSelection(item: BreadcrumbsItem | undefined, payload?: any): void {\n\t\tthis._select(this._items.indexOf(item!), payload);\n\t}\n\n\tprivate _select(nth: number, payload: any): void {\n\t\tthis._selectedItemIdx = -1;\n\t\tfor (let i = 0; i < this._nodes.length; i++) {\n\t\t\tconst node = this._nodes[i];\n\t\t\tif (i !== nth) {\n\t\t\t\tnode.classList.remove('selected');\n\t\t\t} else {\n\t\t\t\tthis._selectedItemIdx = i;\n\t\t\t\tnode.classList.add('selected');\n\t\t\t}\n\t\t}\n\t\tthis._onDidSelectItem.fire({ type: 'select', item: this._items[this._selectedItemIdx], node: this._nodes[this._selectedItemIdx], payload });\n\t}\n\n\tgetItems(): readonly BreadcrumbsItem[] {\n\t\treturn this._items;\n\t}\n\n\tsetItems(items: BreadcrumbsItem[]): void {\n\t\tlet prefix: number | undefined;\n\t\tlet removed: BreadcrumbsItem[] = [];\n\t\ttry {\n\t\t\tprefix = commonPrefixLength(this._items, items, (a, b) => a.equals(b));\n\t\t\tremoved = this._items.splice(prefix, this._items.length - prefix, ...items.slice(prefix));\n\t\t\tthis._render(prefix);\n\t\t\tdispose(removed);\n\t\t\tthis._focus(-1, undefined);\n\t\t} catch (e) {\n\t\t\tconst newError = new Error(`BreadcrumbsItem#setItems: newItems: ${items.length}, prefix: ${prefix}, removed: ${removed.length}`);\n\t\t\tnewError.name = e.name;\n\t\t\tnewError.stack = e.stack;\n\t\t\tthrow newError;\n\t\t}\n\t}\n\n\tprivate _render(start: number): void {\n\t\tlet didChange = false;\n\t\tfor (; start < this._items.length && start < this._nodes.length; start++) {\n\t\t\tconst item = this._items[start];\n\t\t\tconst node = this._nodes[start];\n\t\t\tthis._renderItem(item, node);\n\t\t\tdidChange = true;\n\t\t}\n\t\t// case a: more nodes -> remove them\n\t\twhile (start < this._nodes.length) {\n\t\t\tconst free = this._nodes.pop();\n\t\t\tif (free) {\n\t\t\t\tthis._freeNodes.push(free);\n\t\t\t\tfree.remove();\n\t\t\t\tdidChange = true;\n\t\t\t}\n\t\t}\n\n\t\t// case b: more items -> render them\n\t\tfor (; start < this._items.length; start++) {\n\t\t\tconst item = this._items[start];\n\t\t\tconst node = this._freeNodes.length > 0 ? this._freeNodes.pop() : document.createElement('div');\n\t\t\tif (node) {\n\t\t\t\tthis._renderItem(item, node);\n\t\t\t\tthis._domNode.appendChild(node);\n\t\t\t\tthis._nodes.push(node);\n\t\t\t\tdidChange = true;\n\t\t\t}\n\t\t}\n\t\tif (didChange) {\n\t\t\tthis.layout(undefined);\n\t\t}\n\t}\n\n\tprivate _renderItem(item: BreadcrumbsItem, container: HTMLDivElement): void {\n\t\tdom.clearNode(container);\n\t\tcontainer.className = '';\n\t\ttry {\n\t\t\titem.render(container);\n\t\t} catch (err) {\n\t\t\tcontainer.innerText = '<<RENDER ERROR>>';\n\t\t\tconsole.error(err);\n\t\t}\n\t\tcontainer.tabIndex = -1;\n\t\tcontainer.setAttribute('role', 'listitem');\n\t\tcontainer.classList.add('monaco-breadcrumb-item');\n\t\tconst iconContainer = dom.$(ThemeIcon.asCSSSelector(this._separatorIcon));\n\t\tcontainer.appendChild(iconContainer);\n\t}\n\n\tprivate _onClick(event: IMouseEvent): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let el: HTMLElement | null = event.target; el; el = el.parentElement) {\n\t\t\tconst idx = this._nodes.indexOf(el as HTMLDivElement);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._focus(idx, event);\n\t\t\t\tthis._select(idx, event);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}