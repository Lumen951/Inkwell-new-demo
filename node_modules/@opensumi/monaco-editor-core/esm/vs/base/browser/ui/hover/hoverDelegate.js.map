{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/base/browser/ui/hover/hoverDelegate.ts","vs/base/browser/ui/hover/hoverDelegate.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,+CAA4C;AAE5C,MAAM,wBAAwB,GAAG,GAAG,EAAE,CAAC,CAAC;IACvC,IAAI,KAAK,KAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC;IAClB,SAAS,EAAE,GAAG,EAAE,GAAG,OAAO,SAAS,CAAC,CAAC,CAAC;CACtC,CAAC,CAAC;AAEH,IAAI,oBAAoB,GAA0F,wBAAwB,CAAC;AAC3I,MAAM,yBAAyB,GAAG,IAAI,WAAI,CAAiB,GAAG,EAAE,CAAC,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AACvG,MAAM,2BAA2B,GAAG,IAAI,WAAI,CAAiB,GAAG,EAAE,CAAC,oBAAoB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAE3G,SAAgB,uBAAuB,CAAC,qBAA8G;IACrJ,oBAAoB,GAAG,qBAAqB,CAAC;AAC9C,CAAC;AAFD,0DAEC;AAID,SAAgB,uBAAuB,CAAC,SAA8B,EAAE,kBAA4B;IACnG,IAAI,kBAAkB,EAAE,CAAC;QACxB,4FAA4F;QAC5F,OAAO,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;QAC7B,OAAO,2BAA2B,CAAC,KAAK,CAAC;IAC1C,CAAC;IACD,OAAO,yBAAyB,CAAC,KAAK,CAAC;AACxC,CAAC;AAVD,0DAUC","file":"hoverDelegate.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IHoverDelegate, IScopedHoverDelegate } from '../iconLabel/iconHoverDelegate';\nimport { Lazy } from '../../../common/lazy';\n\nconst nullHoverDelegateFactory = () => ({\n\tget delay(): number { return -1; },\n\tdispose: () => { },\n\tshowHover: () => { return undefined; },\n});\n\nlet hoverDelegateFactory: (placement: 'mouse' | 'element', enableInstantHover: boolean) => IScopedHoverDelegate = nullHoverDelegateFactory;\nconst defaultHoverDelegateMouse = new Lazy<IHoverDelegate>(() => hoverDelegateFactory('mouse', false));\nconst defaultHoverDelegateElement = new Lazy<IHoverDelegate>(() => hoverDelegateFactory('element', false));\n\nexport function setHoverDelegateFactory(hoverDelegateProvider: ((placement: 'mouse' | 'element', enableInstantHover: boolean) => IScopedHoverDelegate)): void {\n\thoverDelegateFactory = hoverDelegateProvider;\n}\n\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element'): IHoverDelegate;\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element', enableInstantHover: true): IScopedHoverDelegate;\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element', enableInstantHover?: boolean): IHoverDelegate | IScopedHoverDelegate {\n\tif (enableInstantHover) {\n\t\t// If instant hover is enabled, the consumer is responsible for disposing the hover delegate\n\t\treturn hoverDelegateFactory(placement, true);\n\t}\n\n\tif (placement === 'element') {\n\t\treturn defaultHoverDelegateElement.value;\n\t}\n\treturn defaultHoverDelegateMouse.value;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IHoverDelegate, IScopedHoverDelegate } from '../iconLabel/iconHoverDelegate';\nimport { Lazy } from '../../../common/lazy';\n\nconst nullHoverDelegateFactory = () => ({\n\tget delay(): number { return -1; },\n\tdispose: () => { },\n\tshowHover: () => { return undefined; },\n});\n\nlet hoverDelegateFactory: (placement: 'mouse' | 'element', enableInstantHover: boolean) => IScopedHoverDelegate = nullHoverDelegateFactory;\nconst defaultHoverDelegateMouse = new Lazy<IHoverDelegate>(() => hoverDelegateFactory('mouse', false));\nconst defaultHoverDelegateElement = new Lazy<IHoverDelegate>(() => hoverDelegateFactory('element', false));\n\nexport function setHoverDelegateFactory(hoverDelegateProvider: ((placement: 'mouse' | 'element', enableInstantHover: boolean) => IScopedHoverDelegate)): void {\n\thoverDelegateFactory = hoverDelegateProvider;\n}\n\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element'): IHoverDelegate;\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element', enableInstantHover: true): IScopedHoverDelegate;\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element', enableInstantHover?: boolean): IHoverDelegate | IScopedHoverDelegate {\n\tif (enableInstantHover) {\n\t\t// If instant hover is enabled, the consumer is responsible for disposing the hover delegate\n\t\treturn hoverDelegateFactory(placement, true);\n\t}\n\n\tif (placement === 'element') {\n\t\treturn defaultHoverDelegateElement.value;\n\t}\n\treturn defaultHoverDelegateMouse.value;\n}\n"]}