{"version":3,"sources":["vs/base/browser/ui/dropdown/dropdownActionViewItem.ts"],"names":[],"mappings":"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","file":"dropdownActionViewItem.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls';\nimport { IContextMenuProvider } from '../../contextmenu';\nimport { $, addDisposableListener, append, EventType, h } from '../../dom';\nimport { StandardKeyboardEvent } from '../../keyboardEvent';\nimport { IActionViewItemProvider } from '../actionbar/actionbar';\nimport { ActionViewItem, BaseActionViewItem, IActionViewItemOptions, IBaseActionViewItemOptions } from '../actionbar/actionViewItems';\nimport { AnchorAlignment } from '../contextview/contextview';\nimport { DropdownMenu, IActionProvider, IDropdownMenuOptions, ILabelRenderer } from './dropdown';\nimport { Action, IAction, IActionRunner } from '../../../common/actions';\nimport { Codicon } from '../../../common/codicons';\nimport { ThemeIcon } from '../../../common/themables';\nimport { Emitter } from '../../../common/event';\nimport { KeyCode } from '../../../common/keyCodes';\nimport { ResolvedKeybinding } from '../../../common/keybindings';\nimport { IDisposable } from '../../../common/lifecycle';\nimport './dropdown.css';\nimport { setupCustomHover } from '../iconLabel/iconLabelHover';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegate';\n\nexport interface IKeybindingProvider {\n\t(action: IAction): ResolvedKeybinding | undefined;\n}\n\nexport interface IAnchorAlignmentProvider {\n\t(): AnchorAlignment;\n}\n\nexport interface IDropdownMenuActionViewItemOptions extends IBaseActionViewItemOptions {\n\treadonly actionViewItemProvider?: IActionViewItemProvider;\n\treadonly keybindingProvider?: IKeybindingProvider;\n\treadonly actionRunner?: IActionRunner;\n\treadonly classNames?: string[] | string;\n\treadonly anchorAlignmentProvider?: IAnchorAlignmentProvider;\n\treadonly menuAsChild?: boolean;\n\treadonly skipTelemetry?: boolean;\n}\n\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\n\tprivate menuActionsOrProvider: readonly IAction[] | IActionProvider;\n\tprivate dropdownMenu: DropdownMenu | undefined;\n\tprivate contextMenuProvider: IContextMenuProvider;\n\tprivate actionItem: HTMLElement | null = null;\n\n\tprivate _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprotected override readonly options: IDropdownMenuActionViewItemOptions;\n\n\tconstructor(\n\t\taction: IAction,\n\t\tmenuActionsOrProvider: readonly IAction[] | IActionProvider,\n\t\tcontextMenuProvider: IContextMenuProvider,\n\t\toptions: IDropdownMenuActionViewItemOptions = Object.create(null)\n\t) {\n\t\tsuper(null, action, options);\n\n\t\tthis.menuActionsOrProvider = menuActionsOrProvider;\n\t\tthis.contextMenuProvider = contextMenuProvider;\n\t\tthis.options = options;\n\n\t\tif (this.options.actionRunner) {\n\t\t\tthis.actionRunner = this.options.actionRunner;\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.actionItem = container;\n\n\t\tconst labelRenderer: ILabelRenderer = (el: HTMLElement): IDisposable | null => {\n\t\t\tthis.element = append(el, $('a.action-label'));\n\n\t\t\tlet classNames: string[] = [];\n\n\t\t\tif (typeof this.options.classNames === 'string') {\n\t\t\t\tclassNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\n\t\t\t} else if (this.options.classNames) {\n\t\t\t\tclassNames = this.options.classNames;\n\t\t\t}\n\n\t\t\t// todo@aeschli: remove codicon, should come through `this.options.classNames`\n\t\t\tif (!classNames.find(c => c === 'icon')) {\n\t\t\t\tclassNames.push('codicon');\n\t\t\t}\n\n\t\t\tthis.element.classList.add(...classNames);\n\n\t\t\tthis.element.setAttribute('role', 'button');\n\t\t\tthis.element.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.element.setAttribute('aria-expanded', 'false');\n\t\t\tif (this._action.label) {\n\t\t\t\tthis._register(setupCustomHover(getDefaultHoverDelegate('mouse'), this.element, this._action.label));\n\t\t\t}\n\t\t\tthis.element.ariaLabel = this._action.label || '';\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst isActionsArray = Array.isArray(this.menuActionsOrProvider);\n\t\tconst options: IDropdownMenuOptions = {\n\t\t\tcontextMenuProvider: this.contextMenuProvider,\n\t\t\tlabelRenderer: labelRenderer,\n\t\t\tmenuAsChild: this.options.menuAsChild,\n\t\t\tactions: isActionsArray ? this.menuActionsOrProvider as IAction[] : undefined,\n\t\t\tactionProvider: isActionsArray ? undefined : this.menuActionsOrProvider as IActionProvider,\n\t\t\tskipTelemetry: this.options.skipTelemetry\n\t\t};\n\n\t\tthis.dropdownMenu = this._register(new DropdownMenu(container, options));\n\t\tthis._register(this.dropdownMenu.onDidChangeVisibility(visible => {\n\t\t\tthis.element?.setAttribute('aria-expanded', `${visible}`);\n\t\t\tthis._onDidChangeVisibility.fire(visible);\n\t\t}));\n\n\t\tthis.dropdownMenu.menuOptions = {\n\t\t\tactionViewItemProvider: this.options.actionViewItemProvider,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tgetKeyBinding: this.options.keybindingProvider,\n\t\t\tcontext: this._context\n\t\t};\n\n\t\tif (this.options.anchorAlignmentProvider) {\n\t\t\tconst that = this;\n\n\t\t\tthis.dropdownMenu.menuOptions = {\n\t\t\t\t...this.dropdownMenu.menuOptions,\n\t\t\t\tget anchorAlignment(): AnchorAlignment {\n\t\t\t\t\treturn that.options.anchorAlignmentProvider!();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis.updateTooltip();\n\t\tthis.updateEnabled();\n\t}\n\n\tprotected override getTooltip(): string | undefined {\n\t\tlet title: string | null = null;\n\n\t\tif (this.action.tooltip) {\n\t\t\ttitle = this.action.tooltip;\n\t\t} else if (this.action.label) {\n\t\t\ttitle = this.action.label;\n\t\t}\n\n\t\treturn title ?? undefined;\n\t}\n\n\toverride setActionContext(newContext: unknown): void {\n\t\tsuper.setActionContext(newContext);\n\n\t\tif (this.dropdownMenu) {\n\t\t\tif (this.dropdownMenu.menuOptions) {\n\t\t\t\tthis.dropdownMenu.menuOptions.context = newContext;\n\t\t\t} else {\n\t\t\t\tthis.dropdownMenu.menuOptions = { context: newContext };\n\t\t\t}\n\t\t}\n\t}\n\n\tshow(): void {\n\t\tthis.dropdownMenu?.show();\n\t}\n\n\tprotected override updateEnabled(): void {\n\t\tconst disabled = !this.action.enabled;\n\t\tthis.actionItem?.classList.toggle('disabled', disabled);\n\t\tthis.element?.classList.toggle('disabled', disabled);\n\t}\n}\n\nexport interface IActionWithDropdownActionViewItemOptions extends IActionViewItemOptions {\n\treadonly menuActionsOrProvider: readonly IAction[] | IActionProvider;\n\treadonly menuActionClassNames?: string[];\n}\n\nexport class ActionWithDropdownActionViewItem extends ActionViewItem {\n\n\tprotected dropdownMenuActionViewItem: DropdownMenuActionViewItem | undefined;\n\n\tconstructor(\n\t\tcontext: unknown,\n\t\taction: IAction,\n\t\toptions: IActionWithDropdownActionViewItemOptions,\n\t\tprivate readonly contextMenuProvider: IContextMenuProvider\n\t) {\n\t\tsuper(context, action, options);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tif (this.element) {\n\t\t\tthis.element.classList.add('action-dropdown-item');\n\t\t\tconst menuActionsProvider = {\n\t\t\t\tgetActions: () => {\n\t\t\t\t\tconst actionsProvider = (<IActionWithDropdownActionViewItemOptions>this.options).menuActionsOrProvider;\n\t\t\t\t\treturn Array.isArray(actionsProvider) ? actionsProvider : (actionsProvider as IActionProvider).getActions(); // TODO: microsoft/TypeScript#42768\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst menuActionClassNames = (<IActionWithDropdownActionViewItemOptions>this.options).menuActionClassNames || [];\n\t\t\tconst separator = h('div.action-dropdown-item-separator', [h('div', {})]).root;\n\t\t\tseparator.classList.toggle('prominent', menuActionClassNames.includes('prominent'));\n\t\t\tappend(this.element, separator);\n\n\t\t\tthis.dropdownMenuActionViewItem = this._register(new DropdownMenuActionViewItem(this._register(new Action('dropdownAction', nls.localize('moreActions', \"More Actions...\"))), menuActionsProvider, this.contextMenuProvider, { classNames: ['dropdown', ...ThemeIcon.asClassNameArray(Codicon.dropDownButton), ...menuActionClassNames], hoverDelegate: this.options.hoverDelegate }));\n\t\t\tthis.dropdownMenuActionViewItem.render(this.element);\n\n\t\t\tthis._register(addDisposableListener(this.element, EventType.KEY_DOWN, e => {\n\t\t\t\t// If we don't have any actions then the dropdown is hidden so don't try to focus it #164050\n\t\t\t\tif (menuActionsProvider.getActions().length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tlet handled: boolean = false;\n\t\t\t\tif (this.dropdownMenuActionViewItem?.isFocused() && event.equals(KeyCode.LeftArrow)) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.dropdownMenuActionViewItem?.blur();\n\t\t\t\t\tthis.focus();\n\t\t\t\t} else if (this.isFocused() && event.equals(KeyCode.RightArrow)) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.blur();\n\t\t\t\t\tthis.dropdownMenuActionViewItem?.focus();\n\t\t\t\t}\n\t\t\t\tif (handled) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tsuper.blur();\n\t\tthis.dropdownMenuActionViewItem?.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tsuper.setFocusable(focusable);\n\t\tthis.dropdownMenuActionViewItem?.setFocusable(focusable);\n\t}\n}\n"]}