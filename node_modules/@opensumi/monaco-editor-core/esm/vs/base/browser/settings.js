"use strict";
/* eslint-disable header/header */
Object.defineProperty(exports, "__esModule", { value: true });
exports.overflowWidgetsSettings = void 0;
class OverflowContentWidgetsSettings {
    constructor() {
        this._topPadding = 22;
        this._bottomPadding = 22;
        this._hoverWidgetMaxHeight = 250;
        this._hoverWidgetMaxWidth = 500;
    }
    set topPadding(num) {
        if (Number.isInteger(num)) {
            this._topPadding = num;
        }
    }
    get topPadding() {
        return this._topPadding;
    }
    set bottomPadding(num) {
        if (Number.isInteger(num)) {
            this._bottomPadding = num;
        }
    }
    get bottomPadding() {
        return this._bottomPadding;
    }
    get hoverWidgetMaxHeight() {
        return this._hoverWidgetMaxHeight;
    }
    get hoverWidgetMaxWidth() {
        return this._hoverWidgetMaxWidth;
    }
    set hoverWidgetMaxHeight(num) {
        if (Number.isInteger(num)) {
            this._hoverWidgetMaxHeight = num;
        }
    }
    set hoverWidgetMaxWidth(num) {
        if (Number.isInteger(num)) {
            this._hoverWidgetMaxWidth = num;
        }
    }
}
exports.overflowWidgetsSettings = new OverflowContentWidgetsSettings();
//# sourceMappingURL=settings.js.map