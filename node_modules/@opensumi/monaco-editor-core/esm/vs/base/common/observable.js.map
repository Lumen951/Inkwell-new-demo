{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/base/common/observable.ts","vs/base/common/observable.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,6EAA6E;AAE7E,kDAamC;AAJlC,uGAAA,eAAe,OAAA;AACf,iHAAA,yBAAyB,OAAA;AACzB,mGAAA,WAAW,OAAA;AACX,sGAAA,cAAc,OAAA;AAEf,wDAKsC;AAJrC,kGAAA,OAAO,OAAA;AACP,sGAAA,WAAW,OAAA;AACX,+GAAA,oBAAoB,OAAA;AACpB,2GAAA,gBAAgB,OAAA;AAEjB,wDAOsC;AANrC,kGAAA,OAAO,OAAA;AACP,uGAAA,YAAY,OAAA;AACZ,+GAAA,oBAAoB,OAAA;AACpB,2GAAA,gBAAgB,OAAA;AAChB,sGAAA,WAAW,OAAA;AACX,wHAAA,6BAA6B,OAAA;AAE9B,oDAaoC;AAXnC,wGAAA,eAAe,OAAA;AACf,4GAAA,mBAAmB,OAAA;AACnB,mHAAA,0BAA0B,OAAA;AAC1B,2HAAA,kCAAkC,OAAA;AAClC,qGAAA,YAAY,OAAA;AACZ,sHAAA,6BAA6B,OAAA;AAC7B,4GAAA,mBAAmB,OAAA;AACnB,8GAAA,qBAAqB,OAAA;AACrB,yGAAA,gBAAgB,OAAA;AAChB,kHAAA,yBAAyB,OAAA;AACzB,kHAAA,yBAAyB,OAAA;AAE1B,wDAOsC;AANrC,yGAAA,cAAc,OAAA;AACd,gHAAA,qBAAqB,OAAA;AACrB,4GAAA,iBAAiB,OAAA;AACjB,wGAAA,aAAa,OAAA;AACb,uGAAA,YAAY,OAAA;AACZ,uHAAA,4BAA4B,OAAA;AAG7B,0DAAkF;AAElF,iDAAiD;AACjD,MAAM,aAAa,GAAG,KAAK,CAEzB;AAEF,IAAI,aAAa,EAAE,CAAC;IACnB,IAAA,mBAAS,EAAC,IAAI,iCAAuB,EAAE,CAAC,CAAC;AAC1C,CAAC","file":"observable.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// This is a facade for the observable implementation. Only import from here!\n\nexport {\n\tIObservable,\n\tIObserver,\n\tIReader,\n\tISettable,\n\tISettableObservable,\n\tITransaction,\n\tIChangeContext,\n\tIChangeTracker,\n\tobservableValue,\n\tdisposableObservableValue,\n\ttransaction,\n\tsubtransaction,\n} from './observableInternal/base';\nexport {\n\tderived,\n\tderivedOpts,\n\tderivedHandleChanges,\n\tderivedWithStore,\n} from './observableInternal/derived';\nexport {\n\tautorun,\n\tautorunDelta,\n\tautorunHandleChanges,\n\tautorunWithStore,\n\tautorunOpts,\n\tautorunWithStoreHandleChanges,\n} from './observableInternal/autorun';\nexport {\n\tIObservableSignal,\n\tconstObservable,\n\tdebouncedObservable,\n\tderivedObservableWithCache,\n\tderivedObservableWithWritableCache,\n\tkeepObserved,\n\trecomputeInitiallyAndOnChange,\n\tobservableFromEvent,\n\tobservableFromPromise,\n\tobservableSignal,\n\tobservableSignalFromEvent,\n\twasEventTriggeredRecently,\n} from './observableInternal/utils';\nexport {\n\tObservableLazy,\n\tObservableLazyPromise,\n\tObservablePromise,\n\tPromiseResult,\n\twaitForState,\n\tderivedWithCancellationToken,\n} from './observableInternal/promise';\n\nimport { ConsoleObservableLogger, setLogger } from './observableInternal/logging';\n\n// Remove \"//\" in the next line to enable logging\nconst enableLogging = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\nif (enableLogging) {\n\tsetLogger(new ConsoleObservableLogger());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// This is a facade for the observable implementation. Only import from here!\n\nexport {\n\tIObservable,\n\tIObserver,\n\tIReader,\n\tISettable,\n\tISettableObservable,\n\tITransaction,\n\tIChangeContext,\n\tIChangeTracker,\n\tobservableValue,\n\tdisposableObservableValue,\n\ttransaction,\n\tsubtransaction,\n} from './observableInternal/base';\nexport {\n\tderived,\n\tderivedOpts,\n\tderivedHandleChanges,\n\tderivedWithStore,\n} from './observableInternal/derived';\nexport {\n\tautorun,\n\tautorunDelta,\n\tautorunHandleChanges,\n\tautorunWithStore,\n\tautorunOpts,\n\tautorunWithStoreHandleChanges,\n} from './observableInternal/autorun';\nexport {\n\tIObservableSignal,\n\tconstObservable,\n\tdebouncedObservable,\n\tderivedObservableWithCache,\n\tderivedObservableWithWritableCache,\n\tkeepObserved,\n\trecomputeInitiallyAndOnChange,\n\tobservableFromEvent,\n\tobservableFromPromise,\n\tobservableSignal,\n\tobservableSignalFromEvent,\n\twasEventTriggeredRecently,\n} from './observableInternal/utils';\nexport {\n\tObservableLazy,\n\tObservableLazyPromise,\n\tObservablePromise,\n\tPromiseResult,\n\twaitForState,\n\tderivedWithCancellationToken,\n} from './observableInternal/promise';\n\nimport { ConsoleObservableLogger, setLogger } from './observableInternal/logging';\n\n// Remove \"//\" in the next line to enable logging\nconst enableLogging = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\nif (enableLogging) {\n\tsetLogger(new ConsoleObservableLogger());\n}\n"]}