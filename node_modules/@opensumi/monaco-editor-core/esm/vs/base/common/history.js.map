{"version":3,"sources":["file:///workspaces/monaco-editor-core/out-editor-esm/vs/base/common/history.ts","vs/base/common/history.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,2CAAyD;AAEzD,MAAa,gBAAgB;IAM5B,YAAY,UAAwB,EAAE,EAAE,QAAgB,EAAE;QACzD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,UAAU;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,GAAG,CAAC,CAAI;QACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,IAAI;QACV,oGAAoG;QACpG,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAEM,QAAQ;QACd,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,IAAI;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7D,CAAC;IAEM,SAAS;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC;IAC3C,CAAC;IAEM,GAAG,CAAC,CAAI;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEM,KAAK;QACX,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEO,SAAS;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,0BAAc,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IACrF,CAAC;IAEO,cAAc;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACzD,CAAC;IACF,CAAC;IAEO,gBAAgB;QACvB,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACjD,IAAI,CAAC,cAAc,EAAE,CAAC;YACrB,OAAO,CAAC,CAAC,CAAC;QACX,CAAC;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC/C,CAAC;IAEO,WAAW,CAAC,OAAqB;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;IACF,CAAC;IAED,IAAY,SAAS;QACpB,MAAM,QAAQ,GAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,OAAO,QAAQ,CAAC;IACjB,CAAC;CACD;AArGD,4CAqGC;AAQD,MAAa,iBAAiB;IAO7B,IAAI,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAEzC,YAAY,OAAqB,EAAU,WAAmB,EAAE;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAC/D,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG;YACrC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;YACjB,QAAQ,EAAE,SAAS;YACnB,IAAI,EAAE,SAAS;SACf,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;IACF,CAAC;IAED,GAAG,CAAC,KAAQ;QACX,MAAM,IAAI,GAAmB;YAC5B,KAAK;YACL,QAAQ,EAAE,IAAI,CAAC,IAAI;YACnB,IAAI,EAAE,SAAS;SACf,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;QACd,CAAC;IACF,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,KAAQ;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;YAC/B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAExB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;QAED,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,KAAQ;QACf,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9D,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAmB;YAC5B,KAAK;YACL,QAAQ,EAAE,SAAS;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC;IAClC,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,QAAQ;QACP,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACpC,CAAC;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,IAAI;QACH,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAChC,CAAC;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,GAAG,CAAC,CAAI;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;QACjB,IAAI,IAAI,GAA+B,IAAI,CAAC,IAAI,CAAC;QAEjD,OAAO,IAAI,EAAE,CAAC;YACb,MAAM,IAAI,CAAC,KAAK,CAAC;YACjB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;IACF,CAAC;IAEO,eAAe,CAAC,KAAQ;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAErB,OAAO,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;gBAC1B,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;oBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAK,CAAC;oBAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAChC,CAAC;qBAAM,CAAC;oBACP,IAAI,CAAC,QAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAChC,IAAI,CAAC,IAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACrC,CAAC;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,CAAC;YAED,IAAI,GAAG,IAAI,CAAC,IAAK,CAAC;QACnB,CAAC;IACF,CAAC;CACD;AA1JD,8CA0JC","file":"history.js","sourceRoot":"file:///workspaces/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ArrayNavigator, INavigator } from './navigator';\n\nexport class HistoryNavigator<T> implements INavigator<T> {\n\n\tprivate _history!: Set<T>;\n\tprivate _limit: number;\n\tprivate _navigator!: ArrayNavigator<T>;\n\n\tconstructor(history: readonly T[] = [], limit: number = 10) {\n\t\tthis._initialize(history);\n\t\tthis._limit = limit;\n\t\tthis._onChange();\n\t}\n\n\tpublic getHistory(): T[] {\n\t\treturn this._elements;\n\t}\n\n\tpublic add(t: T) {\n\t\tthis._history.delete(t);\n\t\tthis._history.add(t);\n\t\tthis._onChange();\n\t}\n\n\tpublic next(): T | null {\n\t\t// This will navigate past the end of the last element, and in that case the input should be cleared\n\t\treturn this._navigator.next();\n\t}\n\n\tpublic previous(): T | null {\n\t\tif (this._currentPosition() !== 0) {\n\t\t\treturn this._navigator.previous();\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic current(): T | null {\n\t\treturn this._navigator.current();\n\t}\n\n\tpublic first(): T | null {\n\t\treturn this._navigator.first();\n\t}\n\n\tpublic last(): T | null {\n\t\treturn this._navigator.last();\n\t}\n\n\tpublic isFirst(): boolean {\n\t\treturn this._currentPosition() === 0;\n\t}\n\n\tpublic isLast(): boolean {\n\t\treturn this._currentPosition() >= this._elements.length - 1;\n\t}\n\n\tpublic isNowhere(): boolean {\n\t\treturn this._navigator.current() === null;\n\t}\n\n\tpublic has(t: T): boolean {\n\t\treturn this._history.has(t);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._initialize([]);\n\t\tthis._onChange();\n\t}\n\n\tprivate _onChange() {\n\t\tthis._reduceToLimit();\n\t\tconst elements = this._elements;\n\t\tthis._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n\t}\n\n\tprivate _reduceToLimit() {\n\t\tconst data = this._elements;\n\t\tif (data.length > this._limit) {\n\t\t\tthis._initialize(data.slice(data.length - this._limit));\n\t\t}\n\t}\n\n\tprivate _currentPosition(): number {\n\t\tconst currentElement = this._navigator.current();\n\t\tif (!currentElement) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this._elements.indexOf(currentElement);\n\t}\n\n\tprivate _initialize(history: readonly T[]): void {\n\t\tthis._history = new Set();\n\t\tfor (const entry of history) {\n\t\t\tthis._history.add(entry);\n\t\t}\n\t}\n\n\tprivate get _elements(): T[] {\n\t\tconst elements: T[] = [];\n\t\tthis._history.forEach(e => elements.push(e));\n\t\treturn elements;\n\t}\n}\n\ninterface HistoryNode<T> {\n\tvalue: T;\n\tprevious: HistoryNode<T> | undefined;\n\tnext: HistoryNode<T> | undefined;\n}\n\nexport class HistoryNavigator2<T> {\n\n\tprivate valueSet: Set<T>;\n\tprivate head: HistoryNode<T>;\n\tprivate tail: HistoryNode<T>;\n\tprivate cursor: HistoryNode<T>;\n\tprivate _size: number;\n\tget size(): number { return this._size; }\n\n\tconstructor(history: readonly T[], private capacity: number = 10) {\n\t\tif (history.length < 1) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tthis._size = 1;\n\t\tthis.head = this.tail = this.cursor = {\n\t\t\tvalue: history[0],\n\t\t\tprevious: undefined,\n\t\t\tnext: undefined\n\t\t};\n\n\t\tthis.valueSet = new Set<T>([history[0]]);\n\t\tfor (let i = 1; i < history.length; i++) {\n\t\t\tthis.add(history[i]);\n\t\t}\n\t}\n\n\tadd(value: T): void {\n\t\tconst node: HistoryNode<T> = {\n\t\t\tvalue,\n\t\t\tprevious: this.tail,\n\t\t\tnext: undefined\n\t\t};\n\n\t\tthis.tail.next = node;\n\t\tthis.tail = node;\n\t\tthis.cursor = this.tail;\n\t\tthis._size++;\n\n\t\tif (this.valueSet.has(value)) {\n\t\t\tthis._deleteFromList(value);\n\t\t} else {\n\t\t\tthis.valueSet.add(value);\n\t\t}\n\n\t\twhile (this._size > this.capacity) {\n\t\t\tthis.valueSet.delete(this.head.value);\n\n\t\t\tthis.head = this.head.next!;\n\t\t\tthis.head.previous = undefined;\n\t\t\tthis._size--;\n\t\t}\n\t}\n\n\t/**\n\t * @returns old last value\n\t */\n\treplaceLast(value: T): T {\n\t\tif (this.tail.value === value) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst oldValue = this.tail.value;\n\t\tthis.valueSet.delete(oldValue);\n\t\tthis.tail.value = value;\n\n\t\tif (this.valueSet.has(value)) {\n\t\t\tthis._deleteFromList(value);\n\t\t} else {\n\t\t\tthis.valueSet.add(value);\n\t\t}\n\n\t\treturn oldValue;\n\t}\n\n\tprepend(value: T): void {\n\t\tif (this._size === this.capacity || this.valueSet.has(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node: HistoryNode<T> = {\n\t\t\tvalue,\n\t\t\tprevious: undefined,\n\t\t\tnext: this.head\n\t\t};\n\n\t\tthis.head.previous = node;\n\t\tthis.head = node;\n\t\tthis._size++;\n\n\t\tthis.valueSet.add(value);\n\t}\n\n\tisAtEnd(): boolean {\n\t\treturn this.cursor === this.tail;\n\t}\n\n\tcurrent(): T {\n\t\treturn this.cursor.value;\n\t}\n\n\tprevious(): T {\n\t\tif (this.cursor.previous) {\n\t\t\tthis.cursor = this.cursor.previous;\n\t\t}\n\n\t\treturn this.cursor.value;\n\t}\n\n\tnext(): T {\n\t\tif (this.cursor.next) {\n\t\t\tthis.cursor = this.cursor.next;\n\t\t}\n\n\t\treturn this.cursor.value;\n\t}\n\n\thas(t: T): boolean {\n\t\treturn this.valueSet.has(t);\n\t}\n\n\tresetCursor(): T {\n\t\tthis.cursor = this.tail;\n\t\treturn this.cursor.value;\n\t}\n\n\t*[Symbol.iterator](): Iterator<T> {\n\t\tlet node: HistoryNode<T> | undefined = this.head;\n\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\tprivate _deleteFromList(value: T): void {\n\t\tlet temp = this.head;\n\n\t\twhile (temp !== this.tail) {\n\t\t\tif (temp.value === value) {\n\t\t\t\tif (temp === this.head) {\n\t\t\t\t\tthis.head = this.head.next!;\n\t\t\t\t\tthis.head.previous = undefined;\n\t\t\t\t} else {\n\t\t\t\t\ttemp.previous!.next = temp.next;\n\t\t\t\t\ttemp.next!.previous = temp.previous;\n\t\t\t\t}\n\n\t\t\t\tthis._size--;\n\t\t\t}\n\n\t\t\ttemp = temp.next!;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ArrayNavigator, INavigator } from './navigator';\n\nexport class HistoryNavigator<T> implements INavigator<T> {\n\n\tprivate _history!: Set<T>;\n\tprivate _limit: number;\n\tprivate _navigator!: ArrayNavigator<T>;\n\n\tconstructor(history: readonly T[] = [], limit: number = 10) {\n\t\tthis._initialize(history);\n\t\tthis._limit = limit;\n\t\tthis._onChange();\n\t}\n\n\tpublic getHistory(): T[] {\n\t\treturn this._elements;\n\t}\n\n\tpublic add(t: T) {\n\t\tthis._history.delete(t);\n\t\tthis._history.add(t);\n\t\tthis._onChange();\n\t}\n\n\tpublic next(): T | null {\n\t\t// This will navigate past the end of the last element, and in that case the input should be cleared\n\t\treturn this._navigator.next();\n\t}\n\n\tpublic previous(): T | null {\n\t\tif (this._currentPosition() !== 0) {\n\t\t\treturn this._navigator.previous();\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic current(): T | null {\n\t\treturn this._navigator.current();\n\t}\n\n\tpublic first(): T | null {\n\t\treturn this._navigator.first();\n\t}\n\n\tpublic last(): T | null {\n\t\treturn this._navigator.last();\n\t}\n\n\tpublic isFirst(): boolean {\n\t\treturn this._currentPosition() === 0;\n\t}\n\n\tpublic isLast(): boolean {\n\t\treturn this._currentPosition() >= this._elements.length - 1;\n\t}\n\n\tpublic isNowhere(): boolean {\n\t\treturn this._navigator.current() === null;\n\t}\n\n\tpublic has(t: T): boolean {\n\t\treturn this._history.has(t);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._initialize([]);\n\t\tthis._onChange();\n\t}\n\n\tprivate _onChange() {\n\t\tthis._reduceToLimit();\n\t\tconst elements = this._elements;\n\t\tthis._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n\t}\n\n\tprivate _reduceToLimit() {\n\t\tconst data = this._elements;\n\t\tif (data.length > this._limit) {\n\t\t\tthis._initialize(data.slice(data.length - this._limit));\n\t\t}\n\t}\n\n\tprivate _currentPosition(): number {\n\t\tconst currentElement = this._navigator.current();\n\t\tif (!currentElement) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this._elements.indexOf(currentElement);\n\t}\n\n\tprivate _initialize(history: readonly T[]): void {\n\t\tthis._history = new Set();\n\t\tfor (const entry of history) {\n\t\t\tthis._history.add(entry);\n\t\t}\n\t}\n\n\tprivate get _elements(): T[] {\n\t\tconst elements: T[] = [];\n\t\tthis._history.forEach(e => elements.push(e));\n\t\treturn elements;\n\t}\n}\n\ninterface HistoryNode<T> {\n\tvalue: T;\n\tprevious: HistoryNode<T> | undefined;\n\tnext: HistoryNode<T> | undefined;\n}\n\nexport class HistoryNavigator2<T> {\n\n\tprivate valueSet: Set<T>;\n\tprivate head: HistoryNode<T>;\n\tprivate tail: HistoryNode<T>;\n\tprivate cursor: HistoryNode<T>;\n\tprivate _size: number;\n\tget size(): number { return this._size; }\n\n\tconstructor(history: readonly T[], private capacity: number = 10) {\n\t\tif (history.length < 1) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tthis._size = 1;\n\t\tthis.head = this.tail = this.cursor = {\n\t\t\tvalue: history[0],\n\t\t\tprevious: undefined,\n\t\t\tnext: undefined\n\t\t};\n\n\t\tthis.valueSet = new Set<T>([history[0]]);\n\t\tfor (let i = 1; i < history.length; i++) {\n\t\t\tthis.add(history[i]);\n\t\t}\n\t}\n\n\tadd(value: T): void {\n\t\tconst node: HistoryNode<T> = {\n\t\t\tvalue,\n\t\t\tprevious: this.tail,\n\t\t\tnext: undefined\n\t\t};\n\n\t\tthis.tail.next = node;\n\t\tthis.tail = node;\n\t\tthis.cursor = this.tail;\n\t\tthis._size++;\n\n\t\tif (this.valueSet.has(value)) {\n\t\t\tthis._deleteFromList(value);\n\t\t} else {\n\t\t\tthis.valueSet.add(value);\n\t\t}\n\n\t\twhile (this._size > this.capacity) {\n\t\t\tthis.valueSet.delete(this.head.value);\n\n\t\t\tthis.head = this.head.next!;\n\t\t\tthis.head.previous = undefined;\n\t\t\tthis._size--;\n\t\t}\n\t}\n\n\t/**\n\t * @returns old last value\n\t */\n\treplaceLast(value: T): T {\n\t\tif (this.tail.value === value) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst oldValue = this.tail.value;\n\t\tthis.valueSet.delete(oldValue);\n\t\tthis.tail.value = value;\n\n\t\tif (this.valueSet.has(value)) {\n\t\t\tthis._deleteFromList(value);\n\t\t} else {\n\t\t\tthis.valueSet.add(value);\n\t\t}\n\n\t\treturn oldValue;\n\t}\n\n\tprepend(value: T): void {\n\t\tif (this._size === this.capacity || this.valueSet.has(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node: HistoryNode<T> = {\n\t\t\tvalue,\n\t\t\tprevious: undefined,\n\t\t\tnext: this.head\n\t\t};\n\n\t\tthis.head.previous = node;\n\t\tthis.head = node;\n\t\tthis._size++;\n\n\t\tthis.valueSet.add(value);\n\t}\n\n\tisAtEnd(): boolean {\n\t\treturn this.cursor === this.tail;\n\t}\n\n\tcurrent(): T {\n\t\treturn this.cursor.value;\n\t}\n\n\tprevious(): T {\n\t\tif (this.cursor.previous) {\n\t\t\tthis.cursor = this.cursor.previous;\n\t\t}\n\n\t\treturn this.cursor.value;\n\t}\n\n\tnext(): T {\n\t\tif (this.cursor.next) {\n\t\t\tthis.cursor = this.cursor.next;\n\t\t}\n\n\t\treturn this.cursor.value;\n\t}\n\n\thas(t: T): boolean {\n\t\treturn this.valueSet.has(t);\n\t}\n\n\tresetCursor(): T {\n\t\tthis.cursor = this.tail;\n\t\treturn this.cursor.value;\n\t}\n\n\t*[Symbol.iterator](): Iterator<T> {\n\t\tlet node: HistoryNode<T> | undefined = this.head;\n\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\tprivate _deleteFromList(value: T): void {\n\t\tlet temp = this.head;\n\n\t\twhile (temp !== this.tail) {\n\t\t\tif (temp.value === value) {\n\t\t\t\tif (temp === this.head) {\n\t\t\t\t\tthis.head = this.head.next!;\n\t\t\t\t\tthis.head.previous = undefined;\n\t\t\t\t} else {\n\t\t\t\t\ttemp.previous!.next = temp.next;\n\t\t\t\t\ttemp.next!.previous = temp.previous;\n\t\t\t\t}\n\n\t\t\t\tthis._size--;\n\t\t\t}\n\n\t\t\ttemp = temp.next!;\n\t\t}\n\t}\n}\n"]}