const{ipcRenderer}=require("electron"),argv=process.argv,urlParams=new URLSearchParams(decodeURIComponent(window.location.search));let parentWindowWebContentsId,additionalEnv,postMessage;window.id=Number(urlParams.get("windowId")),argv.forEach((e=>{0===e.indexOf("--parentWindowWebContentsId=")&&(parentWindowWebContentsId=parseInt(e.substr(28),10)),0===e.indexOf("--additionalEnv=")&&(additionalEnv=JSON.parse(e.substr(16)))})),postMessage=parentWindowWebContentsId?e=>{ipcRenderer.sendTo(parentWindowWebContentsId,"cross-window-webview-message",{from:window.id,message:e})}:e=>{ipcRenderer.sendToHost("webview-message",e)},additionalEnv&&(window.env=Object.assign({},additionalEnv));const parent=window.parent;window.parent=new Proxy(window.parent,{get:(e,n)=>"postMessage"===n?postMessage:Reflect.get(e,n)}),ipcRenderer.on("webview-message",((e,n)=>{const s=new MessageEvent("message",{data:n,source:parent});window.dispatchEvent(s)}));